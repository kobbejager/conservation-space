<?xml version="1.0" encoding="UTF-8"?>
<definition id="standaloneCommonTask" parentId="entity" type="task" isAbstract="true">
	<fields>
		<!-- HEADERS AND TOOLTIP -->
		<field name="default_header" type="ANY" label="STANDALONE_TASK_DEFAULT_HEADER" displayType="system"/>
		<field name="compact_header" type="an..4096" label="STANDALONE_TASK_COMPACT_HEADER" displayType="system"/>
		<field name="breadcrumb_header" type="an..4096" label="STANDALONE_TASK_BREADCRUMB_HEADER" displayType="system"/>
		<field name="tooltip_header" type="ANY" label="STANDALONE_TASK_TOOLTIP_HEADER" displayType="system"/>

    	<!-- SYSTEM FIELDS -->
		<field name="emf:isActive" type="boolean" displayType="system" uri="emf:isActive"/>
		<field name="rdf:type" type="URI" displayType="system" uri="rdf:type">
			<value>http://ittruse.ittbg.com/ontology/enterpriseManagementFramework#Task</value>
		</field>
		<field name="activityId" type="an..180" label="activityId.label" displayType="system" uri="emf:activityId" />
		<field name="transitionMatrix" type="an..10000" label="transitionMatrix.label" displayType="system" uri="emf:transitionMatrix" />
		<field name="taskNotes" type="an..1024" label="taskNotes.label" displayType="system" uri="emf:taskNotes" />
		<field name="multiInstanceActivity" type="boolean" displayType="system" />
		<field name="candidateAssigneesActivity" type="boolean" displayType="system" />

    	<!-- GENERAL DATA FIELDS FOR TASK -->
		<field name="type" type="an..20" codelist="CL28">
			<value>baseTask</value>
		</field>
		<field name="status" type="an..20" codelist="CL27">
			<condition id="hiddenFieldStatus" renderAs="HIDDEN">[status] IN ('NEW')</condition>
		</field>
		<field name="identifier" type="an..50" label="uniqueIdentifier.label" displayType="readOnly" rnc="${eval(${get([identifier]).from(rootContext)}-${seq({+${get([identifier]).from(rootContext)}})})}" uri="dcterms:identifier">
			<condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('NEW')</condition>
		</field>
		<field name="priority" type="an..20" codelist="CL29" label="priority.label" displayType="editable" rnc="${to.dmsConvert(CL29,value,extra1)}|${from.dmsConvert(CL29,extra1,value)}" uri="emf:priority" />
		<field name="plannedStartDate" type="dateTime" label="plannedStartDate.label" displayType="editable" uri="emf:plannedStartDate" />
		<field name="plannedEndDate" type="dateTime" label="plannedEndDate.label" displayType="editable" uri="emf:plannedEndDate" />
		<field name="outcome" type="an..50" codelist="CL22" label="outcome.label" displayType="readOnly" previewEmpty="false" uri="emf:outcome" />
		<field name="integrated" type="boolean" label="integrated.label" displayType="readonly" uri="emf:integrated">
			<value>false</value>
		</field>
		<field name="uri" type="an..50" label="uri.label" displayType="readOnly" tooltip="uri.tooltip" uri="emf:uri" />
		<field name="completedOn" type="datetime" label="completedOn.label" displayType="readonly" previewEmpty="false" uri="emf:completedOn" />

    	<!-- task fields -->
		<field name="assignee" type="uri" label="assignee" displayType="editable" previewEmpty="false" uri="emf:hasAssignee">
			<condition id="readonlyFields" renderAs="READONLY">+[poolAssignees]</condition>
			<condition id="hideAssigneesPicker" renderAs="HIDDEN">[multiInstanceActivity] IN ('true') OR [candidateAssigneesActivity] IN ('true')</condition>
			<condition id="mandatoryAssigneesPicker" renderAs="MANDATORY">[multiInstanceActivity] IN ('false') AND [candidateAssigneesActivity] IN ('false')</condition>
			<control id="PICKER">
				<control-param id="range" name="range">emf:User</control-param>
				<control-param id="restrictions" name="restrictions">
					{"field":"emf:status", "operator":"in", "type": "codeList", "value": ["ACTIVE"]}
				</control-param>				
			</control>
		</field>
		<field name="assignees" type="uri" label="assignees.label" displayType="editable"  multiValued="true" previewEmpty="false">
			<condition id="readonlyFields" renderAs="READONLY">+[assignee]</condition>
			<condition id="hideAssigneesPicker" renderAs="HIDDEN">[multiInstanceActivity] IN ('false')</condition>
			<condition id="mandatoryAssigneesPicker" renderAs="MANDATORY">[multiInstanceActivity] IN ('true')</condition>
			<control id="PICKER">
				<control-param id="range" name="range">emf:User,emf:Group</control-param>
				<control-param id="restrictions" name="restrictions">
					{"field":"emf:status", "operator":"in", "type": "codeList", "value": ["ACTIVE"]}
				</control-param>				
			</control>
		</field>
		<field name="poolAssignees" type="uri" label="poolAssignees.label" displayType="editable" multiValued="true" previewEmpty="false" uri="emf:hasPoolAssignee">
			<condition id="readonlyFields" renderAs="READONLY">+[assignee]</condition>
			<condition id="hidePoolAssigneesPicker" renderAs="HIDDEN">[candidateAssigneesActivity] IN ('false')</condition>
			<condition id="mandatoryPoolAssigneesPicker" renderAs="MANDATORY">[candidateAssigneesActivity] IN ('true')</condition>
			<control id="PICKER">
				<control-param id="range" name="range">emf:User,emf:Group</control-param>
				<control-param id="restrictions" name="restrictions">
					{"field":"emf:status", "operator":"in", "type": "codeList", "value": ["ACTIVE"]}
				</control-param>				
			</control>
		</field>
	</fields>

	<transitions>
		<transition id="create" eventId="create" purpose="create">
			<fields>
				<field name="sendMail" type="an..200" displayType="system">
					<value>
						<![CDATA[
							var type = codelist.getDescription(28, root.get('type'), 'en');
							var subject = '(New assignment) Task: ' + type;
							// extract poolAssignees
							var poolAssignees = root.get('poolAssignees');
							// extract assignee
							var assignee = root.get('assignee');

							//add all users to recipients
							var recipients = [];
							if (assignee != null) {
								recipients.push(assignee.toString());
							}
							if (poolAssignees != null) {
							    for(var i = 0; i<poolAssignees.size(); i++) {
							        recipients.push(poolAssignees[i].toString());
								}
							}
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "base_email_task_assign", recipients, context, null);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="restart" label="restart.label" eventId="restart" purpose="transition" immediate="true" tooltip="restart.tooltip" />
		<transition id="start" label="start.label" eventId="start" purpose="transition" immediate="true" tooltip="start.tooltip" />
		<transition id="suspend" label="suspend.label" eventId="suspend" purpose="transition" immediate="true" tooltip="suspend.tooltip" />
		<transition id="stop" label="stop.label" eventId="stop" purpose="transition" immediate="true" confirmation="confirmation.action" tooltip="stop.tooltip" />
		<transition id="completeTask" label="completeTask.label" eventId="complete" purpose="transition" immediate="true" tooltip="complete.tooltip" />
    	<transition id="reassign" label="reassign.label" eventId="reassign" purpose="addRelation" tooltip="reassign.tooltip" actionPath="/">
			<fields>
				<field name="attachToConfig" type="json">
					<value>
	 					{
							"predefinedTypes" : ["emf:User"],
							"selection" : "single",
							"relation" : ["emf:hasAssignee"],
							"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}							
						}
					</value>
					<control id="configuration" />
				</field>
				<field name="beforeReasing" type="an..200" displayType="system" mandatory="false">
					<value>
						<![CDATA[
							//add to context old assignee
							context.put('previousAsignee', root.get('assignee'));
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">before</control-param>
						<control-param id="async" name="async">false</control-param>
						<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
				<field name="onAssignTask" type="an10">
					<value>
						<![CDATA[

							var type = codelist.getDescription(28, root.get('type'), 'en');
							var subject = '(New assignment) Task: ' + type;

							root.refresh();
							var recipients = [];
							//extract assignee and old assignee, add all users to recipients
							recipients.push(root.get('assignee').toString());
							recipients.push(context.get('previousAsignee'));
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "base_email_task_assign", recipients, context, null);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="createInContext" eventId="createInContext" purpose="createInContext" label="createInContext.label" displayType="hidden" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system">
					<value>
						<![CDATA[

							var type = codelist.getDescription(28, root.get('type'), 'en');
							var subject = '(New assignment) Task: ' + type;

							//extract assignee
							var assignee = root.get('assignee');

							//add all users to recipients
							var recipients = [];
							recipients.push(assignee.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "base_email_task_assign", recipients, context, null);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">true</control-param>
					</control>
				</field>
			</fields>
		</transition>

    	<!-- BPMN transitions -->
    	<transition id="claim" label="claim.label" eventId="claim" purpose="bpmClaim" immediate="true" tooltip="claim.tooltip" />
		<transition id="release" label="release.label" eventId="release" purpose="bpmRelease" immediate="true" tooltip="release.tooltip" />
	</transitions>
	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="NEW" />
		<stateTransition from="NEW" transition="create" to="NOT_YET_STARTED" />

		<stateTransition from="NOT_YET_STARTED" transition="claim" to="IN_PROGRESS" />

		<stateTransition from="NOT_YET_STARTED" transition="editDetails" to="IN_PROGRESS" />
		<stateTransition from="NOT_YET_STARTED" transition="start" to="IN_PROGRESS" />
		<stateTransition from="NOT_YET_STARTED" transition="stop" to="STOPPED"/>
		<stateTransition from="NOT_YET_STARTED" transition="suspend" to="ON_HOLD" />
		<stateTransition from="NOT_YET_STARTED" transition="move" to="NOT_YET_STARTED"/>
		<stateTransition from="NOT_YET_STARTED" transition="addThumbnail" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="saveAsTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="lock" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="unlock" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="print" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="printTab" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportTabPDF" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportPDF" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportWord" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportTabWord" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="reassign" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="managePermissions" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="createInContext" to="NOT_YET_STARTED"/>
		<stateTransition from="NOT_YET_STARTED" transition="delete" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="changeTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="updateTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="addWatchers" to="NOT_YET_STARTED" />

		<stateTransition from="IN_PROGRESS" transition="completeTask" to="COMPLETED" /> <!-- The 'complete' transition is correct!!! Should NOT be removed!!! -->
		<stateTransition from="IN_PROGRESS" transition="editDetails" to="IN_PROGRESS" />

		<stateTransition from="IN_PROGRESS" transition="claim" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="release" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="stop" to="STOPPED" />
		<stateTransition from="IN_PROGRESS" transition="suspend" to="ON_HOLD" />
		<stateTransition from="IN_PROGRESS" transition="move" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="addThumbnail" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="saveAsTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="lock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="unlock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="print" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="printTab" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportTabPDF" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportPDF" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportWord" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportTabWord" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="reassign" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="managePermissions" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="createInContext" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="changeTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="updateTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="addWatchers" to="IN_PROGRESS" />

		<stateTransition from="ON_HOLD" transition="editDetails" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="restart" to="IN_PROGRESS" />
		<stateTransition from="ON_HOLD" transition="stop" to="STOPPED" />
		<stateTransition from="ON_HOLD" transition="move" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="addThumbnail" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="saveAsTemplate" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="lock" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="unlock" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="print" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="printTab" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportTabPDF" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportPDF" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportWord" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportTabWord" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="reassign" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="managePermissions" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="changeTemplate" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="updateTemplate" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="addWatchers" to="ON_HOLD" />

		<stateTransition from="STOPPED" transition="managePermissions" to="STOPPED" />
		<stateTransition from="STOPPED" transition="print" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="printTab" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="exportTabPDF" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="exportPDF" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="exportWord" to="STOPPED" />
		<stateTransition from="STOPPED" transition="exportTabWord" to="STOPPED" />

		<stateTransition from="COMPLETED" transition="managePermissions" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="print" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="printTab" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="exportTabPDF" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="exportPDF" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="exportWord" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportTabWord" to="COMPLETED" />

		<stateTransition from="*" transition="stop" to="STOPPED" />
	</stateTransitions>
	<labels>
		<label id="STANDALONE_TASK_TOOLTIP_HEADER">
			<value lang="en"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-uid="${id.uid}">${id.uid} </span>
                            <span data-title="${get([title])}">${get([title])}</span>&nbsp;
							<span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>
                        </a>
                    </span>
                    <span class="tooltip-row">
                        <label>Assignee(s): </label>
                        <span data-property="assignee">${if(${user(${get([assignee])})}==null).then(Unclaimed).else(${user(${get([assignee])})})}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Started: </label>
                        <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Completed: </label>
                        <span data-property="endTime">${date([endTime]).format(dd.MM.yyyy, HH:mm)}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Total hours logged: </label>
                        <span data-property="timespent">${=${get([actualEffort])}/60}</span>
                    </span>
                </span>
            )}]]></value>
            <value lang="de"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-uid="${id.uid}">${id.uid} </span>
                            <span data-title="${get([title])}">${get([title])}</span>&nbsp;
							<span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>
                        </a>
                    </span>
                    <span class="tooltip-row">
                        <label>Beauftragte(r): </label>
                        <span data-property="assignee">${if(${user(${get([assignee])})}==null).then(Unclaimed).else(${user(${get([assignee])})})}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Gestartet: </label>
                        <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Abgeschlossen: </label>
                        <span data-property="endTime">${date([endTime]).format(dd.MM.yyyy, HH:mm)}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Gesamtzahl der geloggten Stunden: </label>
                        <span data-property="timespent">${=${get([actualEffort])}/60}</span>
                    </span>
                </span>
            )}]]></value>
			<value lang="bg"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-uid="${id.uid}">${id.uid} </span>
                            <span data-title="${get([title])}">${get([title])}</span>&nbsp;
							<span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>
                        </a>
                    </span>
                    <span class="tooltip-row">
                        <label>Участници: </label>
                        <span data-property="assignee">${if(${user(${get([assignee])})}==null).then(неразпределена).else(${user(${get([assignee])})})}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Стартирана: </label>
                        <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Приключена: </label>
                        <span data-property="endTime">${date([endTime]).format(dd.MM.yyyy, HH:mm)}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Общо работено време: </label>
                        <span data-property="timespent">${=${get([actualEffort])}/60}</span>
                    </span>
                </span>
            )}]]></value>
			<value lang="da"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-uid="${id.uid}">${id.uid} </span>
                            <span data-title="${get([title])}">${get([title])}</span>&nbsp;
							<span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>
                        </a>
                    </span>
                    <span class="tooltip-row">
                        <label>Ansvarlige: </label>
                        <span data-property="assignee">${if(${user(${get([assignee])})}==null).then(Unclaimed).else(${user(${get([assignee])})})}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Startede: </label>
                        <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Afsluttet: </label>
                        <span data-property="endTime">${date([endTime]).format(dd.MM.yyyy, HH:mm)}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Samlede timer logget: </label>
                        <span data-property="timespent">${=${get([actualEffort])}/60}</span>
                    </span>
                </span>
            )}]]></value>
		</label>
		<label id="STANDALONE_TASK_DEFAULT_HEADER">
			<value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			${var.isEmpty=${if((${get([identifier])}).matches(null)).then(true).else(false)}}
            <span><img src="${thumbnailUri(64)}"/></span>
            <span data-property="assignee">
                <span class="truncate-element">
                    <a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
                        <b>
                            ${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span> )}
                            ${if(${var.isEmpty}).then().else(<span data-property="identifier">${get([identifier])}</span>&nbsp;)}
                            <span data-property="title">${get([title])}</span>&nbsp;
                            <span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>&nbsp;
							${if(${var.isVersion}).then(
								<span data-property="emf:version">${get([emf:version])}</span>
							)}
                        </b>
                    </a>
                </span>
				<br />
                изпълнител: <a href="${userLink(${get([assignee])})}">${if(${user(${get([assignee])})}==null).then(неразпределена).else(${user(${get([assignee])})})}</a>,&nbsp;
                създадена на: <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span>
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
            </span>)}]]></value>
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			${var.isEmpty=${if((${get([identifier])}).matches(null)).then(true).else(false)}}
            <span><img src="${thumbnailUri(64)}"/></span>
            <span data-property="assignee">
                <span class="truncate-element">
                    <a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
                        <b>
                            ${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span> )}
                            ${if(${var.isEmpty}).then().else(<span data-property="identifier">${get([identifier])}</span>&nbsp;)}
                            <span data-property="title">${get([title])}</span>&nbsp;
                            <span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>&nbsp;
							${if(${var.isVersion}).then(
								<span data-property="emf:version">${get([emf:version])}</span>
							)}
                        </b>
                    </a>
                </span>
				<br />
                Assigned to: <a href="${userLink(${get([assignee])})}">${if(${user(${get([assignee])})}==null).then(Unclaimed).else(${user(${get([assignee])})})}</a>,&nbsp;
                Created on: <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span>
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
            </span>)}]]></value>
		<value lang="de"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			${var.isEmpty=${if((${get([identifier])}).matches(null)).then(true).else(false)}}
            <span><img src="${thumbnailUri(64)}"/></span>
            <span data-property="assignee">
                <span class="truncate-element">
                    <a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
                        <b>
                            ${if(${get([emf:isDeleted])} == true).then(<span><b>(Gelöscht) </b></span> )}
                            ${if(${var.isEmpty}).then().else(<span data-property="identifier">${get([identifier])}</span>&nbsp;)}
                            <span data-property="title">${get([title])}</span>&nbsp;
                            <span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>&nbsp;
							${if(${var.isVersion}).then(
								<span data-property="emf:version">${get([emf:version])}</span>
							)}
                        </b>
                    </a>
                </span>
				<br />
                Zugewiesen an: <a href="${userLink(${get([assignee])})}">${if(${user(${get([assignee])})}==null).then(Unclaimed).else(${user(${get([assignee])})})}</a>,&nbsp;
                Erstellt am: <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span>
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
            </span>)}]]></value>
			<value lang="da"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			${var.isEmpty=${if((${get([identifier])}).matches(null)).then(true).else(false)}}
            <span><img src="${thumbnailUri(64)}"/></span>
            <span data-property="assignee">
                <span class="truncate-element">
                    <a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
                        <b>
                            ${if(${get([emf:isDeleted])} == true).then(<span><b>(Slettet) </b></span> )}
                            ${if(${var.isEmpty}).then().else(<span data-property="identifier">${get([identifier])}</span>&nbsp;)}
                            <span data-property="title">${get([title])}</span>&nbsp;
                            <span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>&nbsp;
							${if(${var.isVersion}).then(
								<span data-property="emf:version">${get([emf:version])}</span>
							)}
                        </b>
                    </a>
                </span>
				<br />
                Tildelt: <a href="${userLink(${get([assignee])})}">${if(${user(${get([assignee])})}==null).then(Unclaimed).else(${user(${get([assignee])})})}</a>,&nbsp;
                Oprettet: <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span>
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
            </span>)}]]></value>
        </label>
		<label id="STANDALONE_TASK_COMPACT_HEADER">
			<value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			${var.isEmpty=${if((${get([identifier])}).matches(null)).then(true).else(false)}}
            <span><img src="${thumbnailUri(16)}"/></span>
            ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
			<span class="truncate-element">
				<a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span> )}
					${if(${var.isEmpty}).then().else(<span data-property="identifier">${get([identifier])}</span>&nbsp;)}
					<span data-property="title">${get([title])}</span>&nbsp;
					<span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>&nbsp;
					${if(${var.isVersion}).then(
						<span data-property="emf:version">${get([emf:version])}</span>
					)}
				</a>
			</span>
			)}]]></value>
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			${var.isEmpty=${if((${get([identifier])}).matches(null)).then(true).else(false)}}
            <span><img src="${thumbnailUri(16)}"/></span>
            ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
			<span class="truncate-element">
				<a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span> )}
					${if(${var.isEmpty}).then().else(<span data-property="identifier">${get([identifier])}</span>&nbsp;)}
					<span data-property="title">${get([title])}</span>&nbsp;
					<span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>&nbsp;
					${if(${var.isVersion}).then(
						<span data-property="emf:version">${get([emf:version])}</span>
					)}
				</a>
			</span>
			)}]]></value>
			<value lang="de"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			${var.isEmpty=${if((${get([identifier])}).matches(null)).then(true).else(false)}}
            <span><img src="${thumbnailUri(16)}"/></span>
            ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
			<span class="truncate-element">
				<a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Gelöscht) </b></span> )}
					${if(${var.isEmpty}).then().else(<span data-property="identifier">${get([identifier])}</span>&nbsp;)}
					<span data-property="title">${get([title])}</span>&nbsp;
					<span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>&nbsp;
					${if(${var.isVersion}).then(
						<span data-property="emf:version">${get([emf:version])}</span>
					)}
				</a>
			</span>
			)}]]></value>
			<value lang="da"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				${var.isEmpty=${if((${get([identifier])}).matches(null)).then(true).else(false)}}
				<span><img src="${thumbnailUri(16)}"/></span>
				${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
				<span class="truncate-element">
					<a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Slettet) </b></span> )}
						${if(${var.isEmpty}).then().else(<span data-property="identifier">${get([identifier])}</span>&nbsp;)}
						<span data-property="title">${get([title])}</span>&nbsp;
						<span>${if(${get([status])}=='NEW').then().else((${CL([status])}))}</span>&nbsp;
						${if(${var.isVersion}).then(
							<span data-property="emf:version">${get([emf:version])}</span>
						)}
					</a>
				</span>
			)}]]></value>
		</label>
		<label id="STANDALONE_TASK_BREADCRUMB_HEADER">
			<value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			<span><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
			<span>
				<a class="${get([status])} task-state-${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span> )}
					<span data-property="title">${get([title])}</span>
				</a>
			</span>)}]]></value>
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			<span><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
			<span>
				<a class="${get([status])} task-state-${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span> )}
					<span data-property="title">${get([title])}</span>
				</a>
			</span>)}]]></value>
			<value lang="de"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				<span><img src="${thumbnailUri(16)}"/></span>
				${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
				<span>
					<a class="${get([status])} task-state-${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Gelöscht) </b></span> )}
						<span data-property="title">${get([title])}</span>
					</a>
				</span>
			)}]]></value>
			<value lang="da"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				<span><img src="${thumbnailUri(16)}"/></span>
				${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
				<span>
					<a class="${get([status])} task-state-${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Slettet) </b></span> )}
						<span data-property="title">${get([title])}</span>
					</a>
				</span>
			)}]]></value>	
		</label>
	</labels>
</definition>
