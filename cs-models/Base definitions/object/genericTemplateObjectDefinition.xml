<?xml version="1.0" encoding="UTF-8"?>
<definition id="templateBase" parentId="baseObject" isAbstract="true" type="object">
	<fields>
		<!-- HEADERS AND TOOLTIP -->
		<field name="default_header" type="ANY" label="TEMPLATE_DEFAULT_HEADER" displayType="system"/>
		<field name="tooltip_header" type="ANY" label="TEMPLATE_TOOLTIP_HEADER" displayType="system"/>

		<!-- Hidden irrelevant object fields -->
		<field name="outcome" type="an..50" displayType="system" />
		<field name="integrated" type="boolean" displayType="system" />
		<field name="uri" type="an..50" displayType="system" />
		<field name="completedOn" type="datetime" displayType="system" />
		<field name="hasRevision" type="uri" displayType="system" />
		<field name="isRevisionOf" type="uri" displayType="system" />
		<field name="lastPublishedRevision" type="uri" displayType="system" />
		<field name="lastRevision" type="uri" displayType="system" />
		<field name="nextRevision" type="uri" displayType="system" />
		<field name="previousRevision" type="uri" displayType="system" />

		<!-- SYSTEM FIELDS -->
		<field name="rdf:type" type="URI" label="type.label" displayType="system" uri="rdf:type">
			<value>http://ittruse.ittbg.com/ontology/enterpriseManagementFramework#Template</value>
		</field>
		<field name="type" type="an..50" codelist="CL7">
			<value>TEMPLATE</value>
		</field>
		<field name="templateRule" type="an..1024" displayType="system" uri="emf:templateRule" />

		<!-- GENERAL DATA FIELDS FOR EACH TEMPLATE -->
		<field name="title" type="an..180" unique="true">
			<condition id="readOnlyFields" renderAs="READONLY">[status] IN ('ACTIVE','UPDATED')</condition>
		</field>
		<field name="status" type="an..50" codelist="CL17"/>
		<field name="forObjectType" type="an..256" label="template.forObjectType" displayType="system" mandatory="true" uri="emf:forObjectType">
			<control id="OBJECT_TYPE_SELECT">
			</control>
		</field>
		<field name="forObjectTypeLabel" type="an..256" label="template.forObjectType" displayType="readonly" uri="emf:forObjectTypeLabel" />
		<field name="templatePurpose" type="an..30" codelist="CL31" label="template.templatePurpose" displayType="readonly" mandatory="true" uri="emf:templatePurpose" />
		<field name="isPrimaryTemplate" type="boolean" label="template.isPrimaryTemplate" displayType="readonly" uri="emf:isPrimaryTemplate" />
		<field name="templateRuleDescription" type="an..1024" label="template.ruleDescription" displayType="readonly" uri="emf:templateRuleDescription" />
	</fields>

	<transitions>
		<transition id="activateTemplate" label="activateTemplate.label" tooltip="activateTemplate.tooltip" eventId="activateTemplate" purpose="activateTemplate" />
		<transition id="reloadTemplate" label="template.reload" eventId="reloadTemplate" purpose="reloadTemplate" />
		<transition id="editTemplateRule" label="template.editRule" tooltip="editTemplateRule.tooltip" eventId="editTemplateRule" purpose="editTemplateRule" />
		<transition id="setTemplateAsPrimary" label="template.setAsPrimary" tooltip="setTemplateAsPrimary.tooltip" eventId="setTemplateAsPrimary" purpose="setTemplateAsPrimary" />
		<transition id="deactivateTemplate" label="deactivateTemplate.label" tooltip="deactivateTemplate.tooltip" eventId="deactivateTemplate" purpose="deactivateTemplate" />
		<transition id="updateExistingObjects" label="template.updateExistingObjects" tooltip="template.updateExistingObjects.tooltip" eventId="updateExistingObjects" purpose="updateExistingObjects" />
		<transition id="cloneTemplate" label="template.clone" tooltip="cloneTemplate.tooltip" eventId="cloneTemplate" purpose="cloneTemplate" />
	</transitions>

	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="DRAFT" />

		<stateTransition from="DRAFT" transition="activateTemplate" to="ACTIVE" />
		<stateTransition from="DRAFT" transition="editDetails" to="DRAFT" />
		<stateTransition from="DRAFT" transition="lock" to="DRAFT" />
		<stateTransition from="DRAFT" transition="unlock" to="DRAFT" />
		<stateTransition from="DRAFT" transition="managePermissions" to="DRAFT" />
		<stateTransition from="DRAFT" transition="addThumbnail" to="DRAFT" />
		<stateTransition from="DRAFT" transition="reloadTemplate" to="DRAFT" />
		<stateTransition from="DRAFT" transition="editTemplateRule" to="DRAFT" />
		<stateTransition from="DRAFT" transition="cloneTemplate" to="DRAFT" />
		<stateTransition from="DRAFT" transition="setTemplateAsPrimary" to="DRAFT">
			<condition renderAs="PROPERTY" id="isPrimaryTemplate">false</condition>
		</stateTransition>
		<stateTransition from="DRAFT" transition="deactivateTemplate" to="INACTIVE">
			<condition renderAs="PROPERTY" id="isPrimaryTemplate">false</condition>
		</stateTransition>
		<stateTransition from="DRAFT" transition="addWatchers" to="DRAFT"/>

		<stateTransition from="ACTIVE" transition="editDetails" to="UPDATED" />
		<stateTransition from="ACTIVE" transition="lock" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="unlock" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="managePermissions" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="addThumbnail" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="reloadTemplate" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="editTemplateRule" to="UPDATED" />
		<stateTransition from="ACTIVE" transition="cloneTemplate" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="setTemplateAsPrimary" to="ACTIVE">
			<condition renderAs="PROPERTY" id="isPrimaryTemplate">false</condition>
		</stateTransition>
		<stateTransition from="ACTIVE" transition="deactivateTemplate" to="INACTIVE">
			<condition renderAs="PROPERTY" id="isPrimaryTemplate">false</condition>
		</stateTransition>
		<stateTransition from="ACTIVE" transition="updateExistingObjects" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="addWatchers" to="ACTIVE"/>

		<stateTransition from="UPDATED" transition="activateTemplate" to="ACTIVE" />
		<stateTransition from="UPDATED" transition="editDetails" to="UPDATED" />
		<stateTransition from="UPDATED" transition="lock" to="UPDATED" />
		<stateTransition from="UPDATED" transition="unlock" to="UPDATED" />
		<stateTransition from="UPDATED" transition="managePermissions" to="UPDATED" />
		<stateTransition from="UPDATED" transition="addThumbnail" to="UPDATED" />
		<stateTransition from="UPDATED" transition="reloadTemplate" to="UPDATED" />
		<stateTransition from="UPDATED" transition="editTemplateRule" to="UPDATED" />
		<stateTransition from="UPDATED" transition="cloneTemplate" to="UPDATED" />
		<stateTransition from="UPDATED" transition="setTemplateAsPrimary" to="UPDATED">
			<condition renderAs="PROPERTY" id="isPrimaryTemplate">false</condition>
		</stateTransition>
		<stateTransition from="UPDATED" transition="deactivateTemplate" to="INACTIVE">
			<condition renderAs="PROPERTY" id="isPrimaryTemplate">false</condition>
		</stateTransition>
		<stateTransition from="UPDATED" transition="addWatchers" to="UPDATED"/>

		<stateTransition from="INACTIVE" transition="activateTemplate" to="ACTIVE" />
		<stateTransition from="INACTIVE" transition="editDetails" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="delete" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="lock" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="unlock" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="managePermissions" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="addThumbnail" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="reloadTemplate" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="editTemplateRule" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="cloneTemplate" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="setTemplateAsPrimary" to="INACTIVE">
			<condition renderAs="PROPERTY" id="isPrimaryTemplate">false</condition>
		</stateTransition>
	</stateTransitions>

	<labels>
		<label id="TEMPLATE_TOOLTIP_HEADER">
			<value lang="en"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							(<span data-type="${get([type])}">${CL([type])}</span>)
							<span data-title="${get([title])}">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
						<label>Title: </label>
						<span data-property="title">${get([title])}</span>
					</span>
					<span class="tooltip-row">
						<label>For object type: </label>
						<span data-property="forObjectTypeLabel">${get([forObjectTypeLabel])}</span>
					</span>
					<span class="tooltip-row">
						<label>Primary: </label>
						<span data-property="isPrimaryTemplate">${get([isPrimaryTemplate])}</span>
					</span>
					<span class="tooltip-row">
						<label>Template purpose: </label>
						<span data-property="templatePurpose">${CL([templatePurpose])}</span>
					</span>
					<span class="tooltip-row">
						<label>Template status:</label>
						<span data-property="status">${CL([status])}</span>
					</span>
					<span class="tooltip-row">
						<label>Created by:</label>
						<span data-property="createdBy">${user(${get([createdBy])})}</span>
					</span>
				</span>
			)})}]]></value>
			<value lang="de"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							(<span data-type="${get([type])}">${CL([type])}</span>)
							<span data-title="${get([title])}">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
						<label>Titel: </label>
						<span data-property="title">${get([title])}</span>
					</span>
					<span class="tooltip-row">
						<label>Für Objekttyp: </label>
						<span data-property="forObjectTypeLabel">${get([forObjectTypeLabel])}</span>
					</span>
					<span class="tooltip-row">
						<label>Primär: </label>
						<span data-property="isPrimaryTemplate">${get([isPrimaryTemplate])}</span>
					</span>
					<span class="tooltip-row">
						<label>Vorlage Zweck: </label>
						<span data-property="templatePurpose">${CL([templatePurpose])}</span>
					</span>
					<span class="tooltip-row">
						<label>Vorlagenstatus:</label>
						<span data-property="status">${CL([status])}</span>
					</span>
					<span class="tooltip-row">
						<label>Erstellt von:</label>
						<span data-property="createdBy">${user(${get([createdBy])})}</span>
					</span>
				</span>
			)})}]]></value>
			<value lang="bg"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							(<span data-type="${get([type])}">${CL([type])}</span>)
							<span data-title="${get([title])}">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
						<label>Заглавие:</label>
						<span data-property="title">${get([title])}</span>
					</span>
					<span class="tooltip-row">
						<label>За тип:</label>
						<span data-property="forObjectTypeLabel">${get([forObjectTypeLabel])}</span>
					</span>
					<span class="tooltip-row">
						<label>Тип шаблон:</label>
						<span data-property="isPrimaryTemplate">Главен: ${get([isPrimaryTemplate])}</span>
					</span>
					<span class="tooltip-row">
						<label>Главен</label>
						<span data-property="templatePurpose">${CL([templatePurpose])}</span>
					</span>
					<span class="tooltip-row">
						<label>Състояние:</label>
						<span data-property="status">${CL([status])}</span>
					</span>
					<span class="tooltip-row">
						<label>Създаден от:</label>
						<span data-property="createdBy">${user(${get([createdBy])})}</span>
					</span>
				</span>
			)})}]]></value>
			<value lang="da"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							(<span data-type="${get([type])}">${CL([type])}</span>)
							<span data-title="${get([title])}">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
						<label>Titel: </label>
						<span data-property="title">${get([title])}</span>
					</span>
					<span class="tooltip-row">
						<label>For værktype: </label>
						<span data-property="forObjectTypeLabel">${get([forObjectTypeLabel])}</span>
					</span>
					<span class="tooltip-row">
						<label>Primært: </label>
						<span data-property="isPrimaryTemplate">${get([isPrimaryTemplate])}</span>
					</span>
					<span class="tooltip-row">
						<label>Formål skabelon: </label>
						<span data-property="templatePurpose">${CL([templatePurpose])}</span>
					</span>
					<span class="tooltip-row">
						<label>Skabelon status:</label>
						<span data-property="status">${CL([status])}</span>
					</span>
					<span class="tooltip-row">
						<label>Oprettet af:</label>
						<span data-property="createdBy">${user(${get([createdBy])})}</span>
					</span>
				</span>
			)})}]]></value>
		</label>
		<label id="TEMPLATE_DEFAULT_HEADER">
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span ><img src="${thumbnailUri(64)}"/></span>
			<span>
				<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						<b>
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
						</b>
						).else(
						<b>
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
						</b>
						)}
						<b>
						${if(${var.isVersion}).then(
							<span data-property="emf:version">${get([emf:version])}</span>
						)}
						</b>
					</a>
				</span>
				<br />Primary: <span data-property="isPrimaryTemplate">${get([isPrimaryTemplate])}</span> ,&nbsp;
				Purpose: <span data-property="templatePurpose">${CL([templatePurpose])}</span>
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
			</span>)}]]></value>
			<value lang="de"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span ><img src="${thumbnailUri(64)}"/></span>
			<span>
				<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Gelöscht) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						<b>
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
						</b>
						).else(
						<b>
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
						</b>
						)}
						<b>
						${if(${var.isVersion}).then(
							<span data-property="emf:version">${get([emf:version])}</span>
						)}
						</b>
					</a>
				</span>
				<br />Primär: <span data-property="isPrimaryTemplate">${get([isPrimaryTemplate])}</span> ,&nbsp;
				Zweck: <span data-property="templatePurpose">${CL([templatePurpose])}</span>
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(gesperrt von)}${user([lockedBy])}</span>)}
			</span>)}]]></value>		
			<value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span ><img src="${thumbnailUri(64)}"/></span>
			<span>
				<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						<b>
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
						</b>
						).else(
						<b>
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
						</b>
						)}
						<b>
						${if(${var.isVersion}).then(
							<span data-property="emf:version">${get([emf:version])}</span>
						)}
						</b>
					</a>
				</span>
				<br />Главен: <span data-property="isPrimaryTemplate">${get([isPrimaryTemplate])}</span> ,&nbsp;
				Цел на шаблона: <span data-property="templatePurpose">${CL([templatePurpose])}</span>
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
			</span>)}]]></value>
			<value lang="da"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span ><img src="${thumbnailUri(64)}"/></span>
			<span>
				<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Slettet) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						<b>
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
						</b>
						).else(
						<b>
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
						</b>
						)}
						<b>
						${if(${var.isVersion}).then(
							<span data-property="emf:version">${get([emf:version])}</span>
						)}
						</b>
					</a>
				</span>
				<br />Primært: <span data-property="isPrimaryTemplate">${get([isPrimaryTemplate])}</span> ,&nbsp;
				Formål: <span data-property="templatePurpose">${CL([templatePurpose])}</span>
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
			</span>)}]]></value>
		</label>
	</labels>
</definition>
