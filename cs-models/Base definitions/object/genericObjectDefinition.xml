<?xml version="1.0" encoding="UTF-8"?>
<definition id="baseObject" parentId="entity" isAbstract="true" type="object">
	<fields>
		<!-- HEADERS AND TOOLTIP -->
		<field name="default_header" type="ANY" label="OBJECT_DEFAULT_HEADER" displayType="system"/>
		<field name="compact_header" type="ANY" label="OBJECT_COMPACT_HEADER" displayType="system"/>
		<field name="breadcrumb_header" type="ANY" label="OBJECT_BREADCRUMB_HEADER" displayType="system"/>
		<field name="tooltip_header" type="ANY" label="OBJECT_TOOLTIP_HEADER" displayType="system"/>

    	<!-- SYSTEM FIELDS -->
		<field name="viewDefinition" type="an..20" displayType="system" uri="emf:viewDefinition">
			<value>commonDocument</value>
		</field>
		<field name="defaultView" type="an..50" displayType="system" uri="emf:defaultView" />
		<field name="defaultViewLocation" type="an..100" displayType="system" uri="emf:defaultViewLocation" />
		<field name="activityId" type="an..180" displayType="system" uri="emf:activityId" />
		<field name="transitionMatrix" type="an..1024" displayType="system" uri="emf:transitionMatrix" />
		<field name="emf:revisionNumber" type="an..10" displayType="system" uri="emf:revisionNumber" />
		<field name="defaultTemplate" type="an..50" displayType="system" uri="emf:defaultTemplate">
			<value>GEO10001</value>
		</field>
		<field name="description" displayType="system" />
		<field name="emf:revisionType" type="URI" displayType="system" previewEmpty="false" uri="emf:revisionType" />
		<field name="emf:publishedOn" type="datetime" displayType="system" previewEmpty="false" uri="emf:publishedOn" />
		<field name="emf:publishedBy" type="uri" displayType="system" previewEmpty="false" uri="emf:publishedBy">
			<control id="PICKER">
				<control-param id="range" name="range">emf:User</control-param>
			</control>
		</field>

    	<!-- GENERAL DATA FIELDS FOR EACH PRIMARY OBJECT -->
		<field name="rdf:type">
			<value>http://www.ontotext.com/proton/protontop#Object</value>
		</field>
		<field name="type">
			<value>baseObject</value>
		</field>
    	<field name="status" codelist="CL8" />
		<field name="identifier" type="an..50" displayType="readOnly" rnc="${seq({+objectSequence})}" uri="dcterms:identifier" />
		<field name="outcome" type="ANY" codelist="CL22" displayType="readOnly" previewEmpty="false" uri="emf:outcome" />
		<field name="integrated" type="boolean" displayType="readonly" uri="emf:integrated">
			<value>false</value>
		</field>
		<field name="uri" type="an..50" displayType="readOnly" tooltip="uri.tooltip" uri="emf:uri" />
		<field name="completedOn" type="datetime" displayType="readonly" previewEmpty="false" uri="emf:completedOn" />

    	<!-- GENERAL OBJECT FIELDS FOR EACH PRIMARY OBJECT -->
		<field name="hasRevision" type="uri" displayType="readonly" multiValued="true" previewEmpty="false" uri="emf:hasRevision">
			<control id="PICKER" />
		</field>
		<field name="isRevisionOf" type="uri" displayType="readonly" previewEmpty="false" uri="emf:isRevisionOf">
			<control id="PICKER" />
		</field>
		<field name="lastPublishedRevision" type="uri" displayType="readonly" previewEmpty="false" uri="emf:lastPublishedRevision">
			<control id="PICKER" />
		</field>
		<field name="lastRevision" type="uri" displayType="readonly" previewEmpty="false" uri="emf:lastRevision">
			<control id="PICKER" />
		</field>
		<field name="nextRevision" type="uri" displayType="readonly" previewEmpty="false" uri="emf:nextRevision">
			<control id="PICKER" />
		</field>
		<field name="previousRevision" type="uri" displayType="readonly" previewEmpty="false" uri="emf:previousRevision">
			<control id="PICKER" />
		</field>
	</fields>
  <transitions>
		<transition id="publish" label="publish.label" purpose="publish" tooltip="publish.tooltip" />
		<transition id="publishAsPdf" label="publishAsPdf.label" purpose="publishAsPdf" tooltip="publishAsPdf.tooltip" />
		<transition id="uploadRevision" label="uploadRevision.label" purpose="uploadRevision" tooltip="uploadRevision.tooltip" />
		<transition id="approve" label="approve.label" purpose="transition" tooltip="approve.tooltip" />
		<transition id="reject" label="reject.label" purpose="transition" tooltip="reject.tooltip" />
		<transition id="changeType" label="changeType.label" purpose="changeType" tooltip="changeType.tooltip" group="tools" />
	</transitions>
  <stateTransitions>
		<stateTransition from="INIT" transition="create" to="DRAFT" />
		<stateTransition from="INIT" transition="clone" to="DRAFT" />
		<stateTransition from="INIT" transition="changeType" to="DRAFT" />

		<stateTransition from="DRAFT" transition="editDetails" to="DRAFT" />
		<stateTransition from="DRAFT" transition="delete" to="DRAFT" />
		<stateTransition from="DRAFT" transition="saveAsTemplate" to="DRAFT" />
		<stateTransition from="DRAFT" transition="approve" to="APPROVED" />
		<stateTransition from="DRAFT" transition="reject" to="REJECTED" />
		<stateTransition from="DRAFT" transition="move" to="DRAFT" />
		<stateTransition from="DRAFT" transition="lock" to="DRAFT" />
		<stateTransition from="DRAFT" transition="unlock" to="DRAFT" />
		<stateTransition from="DRAFT" transition="managePermissions" to="DRAFT" />
		<stateTransition from="DRAFT" transition="addThumbnail" to="DRAFT" />
		<stateTransition from="DRAFT" transition="publish" to="APPROVED">
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
		</stateTransition>
		<stateTransition from="DRAFT" transition="publish" to="DRAFT" />
		<stateTransition from="DRAFT" transition="publishAsPdf" to="APPROVED">
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
		</stateTransition>
		<stateTransition from="DRAFT" transition="publishAsPdf" to="DRAFT" />
		<stateTransition from="DRAFT" transition="uploadRevision" to="APPROVED">
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
		</stateTransition>
		<stateTransition from="DRAFT" transition="uploadRevision" to="DRAFT" />
		<stateTransition from="DRAFT" transition="print" to="DRAFT" />
		<stateTransition from="DRAFT" transition="printTab" to="DRAFT" />
		<stateTransition from="DRAFT" transition="exportTabPDF" to="DRAFT" />
		<stateTransition from="DRAFT" transition="exportPDF" to="DRAFT" />
		<stateTransition from="DRAFT" transition="exportWord" to="DRAFT" />
		<stateTransition from="DRAFT" transition="exportTabWord" to="DRAFT" />
		<stateTransition from="DRAFT" transition="clone" to="DRAFT" />
		<stateTransition from="DRAFT" transition="changeType" to="DRAFT" />
		<stateTransition from="DRAFT" transition="createInContext" to="DRAFT" />
		<stateTransition from="DRAFT" transition="revertVersion" to="DRAFT" />
		<stateTransition from="DRAFT" transition="changeTemplate" to="DRAFT" />
		<stateTransition from="DRAFT" transition="updateTemplate" to="DRAFT" />
		<stateTransition from="DRAFT" transition="addWatchers" to="DRAFT" />

		<stateTransition from="APPROVED" transition="delete" to="APPROVED" />
		<stateTransition from="APPROVED" transition="saveAsTemplate" to="APPROVED" />
		<stateTransition from="APPROVED" transition="managePermissions" to="APPROVED" />
		<stateTransition from="APPROVED" transition="publish" to="APPROVED">
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
		</stateTransition>
		<stateTransition from="APPROVED" transition="publish" to="DRAFT" />
		<stateTransition from="APPROVED" transition="publishAsPdf" to="APPROVED">
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
		</stateTransition>
		<stateTransition from="APPROVED" transition="publishAsPdf" to="DRAFT" />
		<stateTransition from="APPROVED" transition="uploadRevision" to="APPROVED">
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
		</stateTransition>
		<stateTransition from="APPROVED" transition="uploadRevision" to="DRAFT" />
		<stateTransition from="APPROVED" transition="print" to="APPROVED" />
		<stateTransition from="APPROVED" transition="printTab" to="APPROVED" />
		<stateTransition from="APPROVED" transition="exportTabPDF" to="APPROVED" />
		<stateTransition from="APPROVED" transition="exportPDF" to="APPROVED" />
		<stateTransition from="APPROVED" transition="exportWord" to="APPROVED" />
		<stateTransition from="APPROVED" transition="exportTabWord" to="APPROVED" />
		<stateTransition from="APPROVED" transition="clone" to="APPROVED" />
		<stateTransition from="APPROVED" transition="addWatchers" to="APPROVED" />

		<stateTransition from="REJECTED" transition="saveAsTemplate" to="REJECTED" />
		<stateTransition from="REJECTED" transition="managePermissions" to="REJECTED" />
		<stateTransition from="REJECTED" transition="publish" to="REJECTED">
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
		</stateTransition>
		<stateTransition from="REJECTED" transition="publish" to="DRAFT" />
		<stateTransition from="REJECTED" transition="publishAsPdf" to="REJECTED">
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
		</stateTransition>
		<stateTransition from="REJECTED" transition="publishAsPdf" to="DRAFT" />
		<stateTransition from="REJECTED" transition="uploadRevision" to="REJECTED">
			<condition renderAs="PROPERTY" id="emf:revisionType">emf:revision</condition>
		</stateTransition>
		<stateTransition from="REJECTED" transition="uploadRevision" to="DRAFT" />
		<stateTransition from="REJECTED" transition="print" to="REJECTED" />
		<stateTransition from="REJECTED" transition="printTab" to="REJECTED" />
		<stateTransition from="REJECTED" transition="exportTabPDF" to="REJECTED" />
		<stateTransition from="REJECTED" transition="exportPDF" to="REJECTED" />
		<stateTransition from="REJECTED" transition="exportWord" to="REJECTED" />
		<stateTransition from="REJECTED" transition="exportTabWord" to="REJECTED" />
		<stateTransition from="REJECTED" transition="clone" to="REJECTED" />
		<stateTransition from="REJECTED" transition="addWatchers" to="REJECTED" />

		<stateTransition from="OBSOLETE" transition="download" to="OBSOLETE" />
		<stateTransition from="OBSOLETE" transition="saveAsTemplate" to="OBSOLETE" />
		<stateTransition from="OBSOLETE" transition="print" to="OBSOLETE" />
		<stateTransition from="OBSOLETE" transition="printTab" to="OBSOLETE" />
		<stateTransition from="OBSOLETE" transition="exportTabPDF" to="OBSOLETE" />
		<stateTransition from="OBSOLETE" transition="exportPDF" to="OBSOLETE" />
		<stateTransition from="OBSOLETE" transition="exportWord" to="OBSOLETE" />
		<stateTransition from="OBSOLETE" transition="exportTabWord" to="OBSOLETE" />
		<stateTransition from="OBSOLETE" transition="managePermissions" to="OBSOLETE" />
		<stateTransition from="OBSOLETE" transition="clone" to="OBSOLETE" />

		<stateTransition from="*" transition="obsolete" to="OBSOLETE" />
	</stateTransitions>
  <labels>
    <label id="OBJECT_TOOLTIP_HEADER">
    	<value lang="en"><![CDATA[${eval(#{eval(
			<span class="thumbnail-content">
				<img class="thumbnail" src="${thumbnailUri(64)}" />
			</span>
			<span class="tooltip-data">
				<span class="tooltip-header">
					<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
						(<span data-type="${get([type])}">${CL([type])}</span>)
						<span data-title="${get([title])}">${get([title])}</span>
					</a>
				</span>
				<span class="tooltip-row">
					<label>Images associated: </label>
					<span data-property="images">#{query(customQueries/countAssosiations, objectUri=${id.db}, countedType=emf:Image)}</span>
				</span>
				<span class="tooltip-row">
					<label>Version: </label>
					<span data-property-version="emf:version">${get([emf:version])}</span>
				</span>
				<span class="tooltip-row">
					<label>Revision: </label>
					<span data-property="emf:revisionNumber">${get([emf:revisionNumber])}</span>
				</span>
				<span class="tooltip-row">
					<label>Modified by: </label>
					<span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
				</span>
				<span class="tooltip-row">
					<label>Modified on: </label>
					<span data-property="modifiedOn">${date([modifiedOn])}</span>
				</span>
				${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>
						</span>
					)}
			</span>
		)})}]]></value>
		<value lang="de"><![CDATA[${eval(#{eval(
			<span class="thumbnail-content">
				<img class="thumbnail" src="${thumbnailUri(64)}" />
			</span>
			<span class="tooltip-data">
				<span class="tooltip-header">
					<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
						(<span data-type="${get([type])}">${CL([type])}</span>)
						<span data-title="${get([title])}">${get([title])}</span>
					</a>
				</span>
				<span class="tooltip-row">
					<label>Bilder zugeordnet: </label>
					<span data-property="images">#{query(customQueries/countAssosiations, objectUri=${id.db}, countedType=emf:Image)}</span>
				</span>
				<span class="tooltip-row">
					<label>Ausführung: </label>
					<span data-property-version="emf:version">${get([emf:version])}</span>
				</span>
				<span class="tooltip-row">
					<label>Revision: </label>
					<span data-property="emf:revisionNumber">${get([emf:revisionNumber])}</span>
				</span>
				<span class="tooltip-row">
					<label>Geändert von: </label>
					<span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
				</span>
				<span class="tooltip-row">
					<label>Geändert am: </label>
					<span data-property="modifiedOn">${date([modifiedOn])}</span>
				</span>
				${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>
						</span>
					)}
			</span>
		)})}]]></value>
      <value lang="bg"><![CDATA[${eval(#{eval(
			<span class="thumbnail-content">
				<img class="thumbnail" src="${thumbnailUri(64)}" />
			</span>
			<span class="tooltip-data">
				<span class="tooltip-header">
					<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
						(<span data-type="${get([type])}">${CL([type])}</span>)
						<span data-title="${get([title])}">${get([title])}</span>
					</a>
				</span>
				<span class="tooltip-row">
					<label>Асоциирани изображения: </label>
					<span data-property="images">#{query(customQueries/countAssosiations, objectUri=${id.db}, countedType=emf:Image)}</span>
				</span>
				<span class="tooltip-row">
					<label>Версия: </label>
					<span data-property-version="emf:version">${get([emf:version])}</span>
				</span>
				 <span class="tooltip-row">
					<label>Ревизия: </label>
					<span data-property="emf:revisionNumber">${get([emf:revisionNumber])}</span>
				</span>
				<span class="tooltip-row">
					<label>Последно актуализиран от: </label>
					<span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
				</span>
				<span class="tooltip-row">
					<label>Последно актуализиран на: </label>
					<span data-property="modifiedOn">${date([modifiedOn])}</span>
				</span>
				${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>
						</span>
					)}
			</span>
		)})}]]></value>
		<value lang="da"><![CDATA[${eval(#{eval(
			<span class="thumbnail-content">
				<img class="thumbnail" src="${thumbnailUri(64)}" />
			</span>
			<span class="tooltip-data">
				<span class="tooltip-header">
					<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
						(<span data-type="${get([type])}">${CL([type])}</span>)
						<span data-title="${get([title])}">${get([title])}</span>
					</a>
				</span>
				<span class="tooltip-row">
					<label>Billeder associeret: </label>
					<span data-property="images">#{query(customQueries/countAssosiations, objectUri=${id.db}, countedType=emf:Image)}</span>
				</span>
				<span class="tooltip-row">
					<label>Version: </label>
					<span data-property-version="emf:version">${get([emf:version])}</span>
				</span>
				${if(${get([artist])}<>null).then(
					<span class="tooltip-row">
						<label>Revision: </label>
						<span data-property="emf:revisionNumber">${get([emf:revisionNumber])}</span>
					</span>
				)}
				<span class="tooltip-row">
					<label>Opdateret af: </label>
					<span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
				</span>
				<span class="tooltip-row">
					<label>Opdateret: </label>
					<span data-property="modifiedOn">${date([modifiedOn])}</span>
				</span>
				${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>
						</span>
					)}
			</span>
		)})}]]></value>
    </label>
    <label id="OBJECT_DEFAULT_HEADER">
		<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span ><img src="${thumbnailUri(64)}"/></span>
			<span>
				<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						<b>
							${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
							Revision: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
						</b>
						).else(
						<b>
							${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
						</b>
						)}							<b>
						${if(${var.isVersion}).then(
							<span data-property="emf:version">${get([emf:version])}</span>
						)}
						</b>

					</a>
				</span>
				<br />Last modified by: <a href="${userLink(${get([modifiedBy])})}">${user(${get([modifiedBy])})}</a>, ${date([modifiedOn])}
			</span>
		)}]]></value>
		<value lang="de"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span ><img src="${thumbnailUri(64)}"/></span>
			<span>
				<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Gelöscht) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						<b>
							${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
							Revision: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
						</b>
						).else(
						<b>
							${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
						</b>
						)}							<b>
						${if(${var.isVersion}).then(
							<span data-property="emf:version">${get([emf:version])}</span>
						)}
						</b>

					</a>
				</span>
				<br />Zuletzt geändert von: <a href="${userLink(${get([modifiedBy])})}">${user(${get([modifiedBy])})}</a>, ${date([modifiedOn])}
			</span>
		)}]]></value>
		<value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span ><img src="${thumbnailUri(64)}"/></span>
			<span>
				<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						<b>
							${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
							Ревизия: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
						</b>
						).else(
						<b>
							${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
						</b>
						)}
						<b>
						${if(${var.isVersion}).then(
							<span data-property="emf:version">${get([emf:version])}</span>
						)}
						</b>
					</a>
				</span>
				<br />Последно модифицирана от: <a href="${userLink(${get([modifiedBy])})}">${user(${get([modifiedBy])})}</a>, ${date([modifiedOn])}
			</span>
		)}]]></value>
		<value lang="da"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span ><img src="${thumbnailUri(64)}"/></span>
			<span>
				<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
						${if(${get([emf:isDeleted])} == true).then(<span><b>(Slettet) </b></span>)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						<b>
							${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
							Revision: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
						).else(
							${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
						)}
						${if(${var.isVersion}).then(
							<span data-property="emf:version">${get([emf:version])}</span>
						)}
						</b>
					</a>
				</span>
				<br />Sidste&nbsp;opdateret&nbsp;af:&nbsp;<a href="${userLink(${get([modifiedBy])})}">${user(${get([modifiedBy])})}</a>, ${date([modifiedOn])}
			</span>
		)}]]></value>
    </label>
    <label id="OBJECT_COMPACT_HEADER">
		<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span ><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
			<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
				<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span>)}
					${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						Revision: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span>&nbsp;
						(<span data-property="type">${CL([type])}</span>)&nbsp;
						<span data-property="title">${get([title])}</span>&nbsp;
					).else(
						<span data-property="type">(${CL([type])})</span>&nbsp;
						<span data-property="title">${get([title])}</span>&nbsp;
					)}
					${if(${var.isVersion}).then(
						<span data-property="emf:version">${get([emf:version])}</span>
					)}
				</a>
			</span>
		)}]]></value>
		<value lang="de"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span ><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
			<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
				<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Gelöscht) </b></span>)}
					${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						Revision: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span>&nbsp;
						(<span data-property="type">${CL([type])}</span>)&nbsp;
						<span data-property="title">${get([title])}</span>&nbsp;
					).else(
						<span data-property="type">(${CL([type])})</span>&nbsp;
						<span data-property="title">${get([title])}</span>&nbsp;
					)}
					${if(${var.isVersion}).then(
						<span data-property="emf:version">${get([emf:version])}</span>
					)}
				</a>
			</span>
		)}]]></value>
		<value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
			<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
				<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span>)}
					${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						Ревизия: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span>&nbsp;
						(<span data-property="type">${CL([type])}</span>)&nbsp;
						<span data-property="title">${get([title])}</span>&nbsp;
					).else(
						<span data-property="type">(${CL([type])})</span>&nbsp;
						<span data-property="title">${get([title])}</span>&nbsp;
					)}
					${if(${var.isVersion}).then(
						<span data-property="emf:version">${get([emf:version])}</span>
					)}
				</a>
			</span>
		)}]]></value>
		<value lang="da"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span ><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
			<span class="truncate-element${if(${var.isLatest}).then( latest-revision)}${if(${var.isRevision}).then( revision)}">
				<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Slettet) </b></span>)}
					${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						Revision: <span data-property="revisionNumber">${get([emf:revisionNumber])}</span>&nbsp;
						(<span data-property="type">${CL([type])}</span>)&nbsp;
						<span data-property="title">${get([title])}</span>&nbsp;
					).else(
						<span data-property="type">(${CL([type])})</span>&nbsp;
						<span data-property="title">${get([title])}</span>&nbsp;
					)}
					${if(${var.isVersion}).then(
						<span data-property="emf:version">${get([emf:version])}</span>
					)}
				</a>
			</span>
		)}]]></value>
    </label>
    <label id="OBJECT_BREADCRUMB_HEADER">
		<value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			<span ><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
			<span>
				<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит) </b></span>)}
					${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						<span data-property="revisionNumber">Ревизия:${get([emf:revisionNumber])}&nbsp;</span>
						<span data-property="title">${get([title])}</span>
					).else(
						<span data-property="title">${get([title])}</span>
					)}
				</a>
			</span>
		)}]]></value>
		<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			<span ><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
			<span>
				<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted) </b></span>)}
					${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						<span data-property="revisionNumber">Revision:${get([emf:revisionNumber])}&nbsp;</span>
						<span data-property="title">${get([title])}</span>
					).else(
						<span data-property="title">${get([title])}</span>
					)}
				</a>
			</span>
		)}]]></value>
		<value lang="de"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			<span ><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
			<span>
				<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Gelöscht) </b></span>)}
					${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						<span data-property="revisionNumber">Revision:${get([emf:revisionNumber])}&nbsp;</span>
						<span data-property="title">${get([title])}</span>
					).else(
						<span data-property="title">${get([title])}</span>
					)}
				</a>
			</span>
		)}]]></value>
		<value lang="da"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
			${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
			<span ><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
			<span>
				<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Slettet) </b></span>)}
					${if(${or(${var.isLatest} or ${var.isRevision})}).then(
						<span data-property="revisionNumber">Revision:${get([emf:revisionNumber])}&nbsp;</span>
						<span data-property="title">${get([title])}</span>
					).else(
						<span data-property="title">${get([title])}</span>
					)}
				</a>
			</span>
		)}]]></value>
	</label>
  </labels>
</definition>
