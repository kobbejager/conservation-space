<?xml version="1.0" encoding="UTF-8"?>
<definition id="baseIssue" parentId="baseObject" isAbstract="true" type="object">
	<fields>
		<!-- HEADERS AND TOOLTIP -->
		<field name="default_header" type="ANY" label="ISSUE_DEFAULT_HEADER" displayType="system"/>
		<field name="compact_header" type="ANY" label="ISSUET_COMPACT_HEADER" displayType="system"/>
		<field name="breadcrumb_header" type="ANY" label="ISSUE_BREADCRUMB_HEADER" displayType="system"/>
		<field name="tooltip_header" type="ANY" label="ISSUE_TOOLTIP_HEADER" displayType="system"/>

		<!-- Hidden irrelevant object fields -->
		<field name="outcome" displayType="system" />
		<field name="integrated" displayType="system" />
		<field name="uri" displayType="system" />
		<field name="completedOn" displayType="system" />
		<field name="hasRevision" displayType="system" />
		<field name="isRevisionOf" displayType="system" />
		<field name="lastPublishedRevision" displayType="system" />
		<field name="lastRevision" displayType="system" />
		<field name="nextRevision" displayType="system" />
		<field name="previousRevision" displayType="system" />

		<!-- System fields -->
		<field name="rdf:type">
			<value>http://ittruse.ittbg.com/ontology/enterpriseManagementFramework#Issue</value>
		</field>
		<field name="type">
			<value>baseIssue</value>
		</field>

		<!-- General data field for each Issue -->
		<field name="issueType" type="ANY" codelist="CL18" displayType="editable" mandatory="true" previewEmpty="false" uri="emf:issueType" />
		<field name="title" type="an..500" />
		<field name="description" mandatory="true" />
		<field name="status" codelist="CL19">
			<condition id="hiddenFieldStatus" renderAs="HIDDEN">[status] IN ('INIT')</condition>
		</field>
		<field name="priority" type="ANY" codelist="CL20" displayType="editable" mandatory="true" uri="emf:priority" />
		<field name="hasReporter" type="uri" displayType="editable" mandatory="true"  uri="emf:hasReporter">
			<control id="PICKER">
				<control-param id="range" name="range">emf:User</control-param>
				<control-param id="restrictions" name="restrictions">{"field":"emf:status", "operator":"in", "type": "codeList", "value": ["ACTIVE"]}</control-param>
			</control>
			<value>${currentUser.id}</value>
		</field>
		<field name="assignee" type="uri" displayType="readOnly" mandatory="true" uri="emf:hasAssignee">
			<control id="PICKER">
				<control-param id="range" name="range">emf:User</control-param>
			</control>
			<value>${config(help.support.email)}</value>
		</field>
		<field name="dueDate" type="date" displayType="editable" uri="emf:plannedEndDate" />
		<field name="resolution" type="ANY" codelist="CL21" displayType="editable" previewEmpty="false" uri="emf:completedReason" />
		<field name="isDuplicatedBy" type="uri" displayType="editable" previewEmpty="false" uri="emf:isDuplicatedBy">
			<control id="PICKER">
				<control-param id="range" name="range">emf:Issue</control-param>
			</control>
		</field>
		<field name="references" type="uri" displayType="editable" multiValued="true" previewEmpty="false" uri="emf:references">
			<control id="PICKER" />
		</field>
	</fields>

	<transitions>
		<transition id="create" label="create" purpose="create">
			<fields>
				<field name="putDefaultDueDate" type="an..200" displayType="system">
					<value><![CDATA[
							var Calendar = Java.type('java.util.Calendar');
							var calendar = Calendar.getInstance();
							calendar.add(Calendar.DAY_OF_MONTH, 7);
							if (root.getProperties().get('dueDate') == null) {
							    root.getProperties().put('dueDate', calendar.getTime());
							    log.info(root.getProperties());}]]></value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">before</control-param>
						<control-param id="async" name="async">false</control-param>
						<control-param id="persistent" name="persistent">true</control-param>
					</control>
				</field>
				<field name="sendMail" type="an..200" displayType="system">
					<value><![CDATA[
							var title = root.get('title');
							var issueType = codelist.getDescription(18, root.get('issueType'), 'en');
							var subject = '(New assignment) ' + issueType + ': ' + title;

							//extract assignee
							var assignee = root.get('assignee');

							//add all users to recipients
							var recipients = [];
							recipients.push(assignee.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "base_email_issue_assign", recipients, context, null);]]></value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="clone" purpose="clone">
			<fields>
				<field name="sendMail" type="an..200" displayType="system">
					<value><![CDATA[
							var title = root.get('title');
							var issueType = codelist.getDescription(18, root.get('issueType'), 'en');
							var subject = '(New assignment) ' + issueType + ': ' + title;

							//extract assignee
							var assignee = root.get('assignee');

							//add all users to recipients
							var recipients = [];
							recipients.push(assignee.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "base_email_issue_assign", recipients, context, null);]]></value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="startProgress" label="startProgress.action.label" tooltip="start.tooltip" purpose="transition" />
		<transition id="clarify" label="clarify.action.label" tooltip="clarify.action.tooltip" purpose="transition" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system">
					<value><![CDATA[
							var title = root.get('title');
							var issueType = codelist.getDescription(18, root.get('issueType'), 'en');
							var subject = '(Clarify) ' + issueType + ': ' + title;

							//extract reporter, watchers
							var reporter = root.get('hasReporter');
							var watchers = root.get('hasWatcher');
							var recipients = [];
							var i = 0;
								if (watchers != null){
									for(i = 0; i < watchers.length; i++) {
										recipients[i] = watchers[i].toString();
									}
								}
							recipients.push(reporter.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "base_email_issue_clarify", recipients, context);
						]]></value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="clarified" label="clarified.action.label" tooltip="clarified.action.tooltip" purpose="transition" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system">
					<value><![CDATA[
							var title = root.get('title');
							var issueType = codelist.getDescription(18, root.get('issueType'), 'en');
							var subject = '(Clarified) ' + issueType + ': ' + title;

							//extract assignee and watchers
							var assignee = root.get('assignee');
							var watchers = root.get('hasWatcher');
							var recipients = [];
							var i = 0;
								if (watchers != null){
									for(i = 0; i < watchers.length; i++) {
										recipients[i] = watchers[i].toString();
									}
								}
							recipients.push(assignee.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "base_email_issue_clarified", recipients, context);
						]]></value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="suspend" label="suspend.label" tooltip="suspend.tooltip" purpose="transition" />
		<transition id="resolveIssue" label="issue.resolveIssue.action.label" tooltip="issue.resolveIssue.action.tooltip" purpose="transition" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system">
					<value><![CDATA[
								var title = root.get('title');
								var issueType = codelist.getDescription(18, root.get('issueType'), 'en');
								var subject = '(Resolved) ' + issueType + ': ' + title;

								//extract warchers, assignee and crearedBy users
								var reporter = root.get('hasReporter');
								var createdBy = root.get('createdBy');
								var assignee = root.get('assignee');
								var watchers = root.get('hasWatcher');
								var recipients = [];
								var i = 0;
								if (watchers != null){
									for(i = 0; i < watchers.length; i++) {
										recipients[i] = watchers[i].toString();
									}
								}
								recipients.push(reporter.toString());
								recipients.push(createdBy.toString());
								recipients.push(assignee.toString());
								mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "base_email_issue_resolve", recipients, context);
							]]></value>
					<control id="SCRIPT">
							<control-param id="phase" name="phase">after</control-param>
							<control-param id="async" name="async">false</control-param>
							<control-param id="persistent" name="persistent">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="restart" label="restart.label" tooltip="restart.tooltip" purpose="transition" />
		<transition id="reopen" label="reopen.action.label" tooltip="issue.reopen.action.tooltip" purpose="transition" immediate="true">
			<fields>
				<field name="cleanResolutionFiled" type="an..200" displayType="system">
					<value><![CDATA[
							// remove value from filed resolution
							root.remove('resolution');]]></value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">before</control-param>
						<control-param id="async" name="async">false</control-param>
						<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="complete" label="complete.label" tooltip="complete.tooltip" purpose="transition" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system">
					<value><![CDATA[
								var title = root.get('title');
								var issueType = codelist.getDescription(18, root.get('issueType'), 'en');
								var subject = '(Complete) ' + issueType + ': ' + title;

								//extract warchers, assignee, crearedBy and reporter users
								var reporter = root.get('hasReporter');
								var createdBy = root.get('createdBy');
								var assignee = root.get('assignee');
								var watchers = root.get('hasWatcher');
								var recipients = [];
								var i = 0;
								if (watchers != null){
									for(i = 0; i < watchers.length; i++) {
										recipients[i] = watchers[i].toString();
									}
								}
								recipients.push(reporter.toString());
								recipients.push(createdBy.toString());
								recipients.push(assignee.toString());
								mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "base_email_complete_instance", recipients, context);
							]]></value>
					<control id="SCRIPT">
							<control-param id="phase" name="phase">after</control-param>
							<control-param id="async" name="async">true</control-param>
							<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="reassign" label="reassign.label" purpose="addRelation" tooltip="reassign.tooltip">
			<fields>
				<field name="attachToConfig" type="json">
					<value>
						{
							"predefinedTypes" : ["emf:User"],
							"selection" : "single",
							"relation" : ["emf:hasAssignee"],
							"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						}
					</value>
					<control id="configuration" />
				</field>
				<field name="onAssignIssue" type="an10">
					<value><![CDATA[
							var title = root.get('title');
							var issueType = codelist.getDescription(18, root.get('issueType'), 'en');
							var subject = '(Reassigned) ' + issueType + ': ' + title;

							//extract assignee
							var assignee = root.get('assignee');

							//add all users to recipients
							var recipients = [];
							recipients.push(assignee.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "base_email_reassigned_issue", recipients, context, null);]]></value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">false</control-param>
						<control-param id="persistent" name="persistent">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
	</transitions>

	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="OPEN" />
		<stateTransition from="INIT" transition="clone" to="OPEN" />

		<!-- OPEN -->
		<stateTransition from="OPEN" transition="editDetails" to="OPEN" />
		<stateTransition from="OPEN" transition="startProgress" to="IN_PROGRESS" />
		<stateTransition from="OPEN" transition="clarify" to="CLARIFY" />
		<stateTransition from="OPEN" transition="reassign" to="OPEN" />
		<stateTransition from="OPEN" transition="print" to="OPEN" />
		<stateTransition from="OPEN" transition="printTab" to="OPEN" />
		<stateTransition from="OPEN" transition="exportTabPDF" to="OPEN" />
		<stateTransition from="OPEN" transition="exportPDF" to="OPEN" />
		<stateTransition from="OPEN" transition="exportWord" to="OPEN" />
		<stateTransition from="OPEN" transition="exportTabWord" to="OPEN" />
		<stateTransition from="OPEN" transition="clone" to="OPEN" />
		<stateTransition from="OPEN" transition="lock" to="OPEN" />
		<stateTransition from="OPEN" transition="unlock" to="OPEN" />
		<stateTransition from="OPEN" transition="saveAsTemplate" to="OPEN" />
		<stateTransition from="OPEN" transition="addThumbnail" to="OPEN" />
		<stateTransition from="OPEN" transition="managePermissions" to="OPEN" />
		<stateTransition from="OPEN" transition="delete" to="OPEN" />
		<stateTransition from="OPEN" transition="createInContext" to="OPEN" />
		<stateTransition from="OPEN" transition="changeTemplate" to="OPEN" />
		<stateTransition from="OPEN" transition="updateTemplate" to="OPEN" />
		<stateTransition from="OPEN" transition="addWatchers" to="OPEN" />

		<!-- IN_PROGRESS -->
		<stateTransition from="IN_PROGRESS" transition="editDetails" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="suspend" to="ON_HOLD" />
		<stateTransition from="IN_PROGRESS" transition="resolveIssue" to="RESOLVED">
			<condition id="requiredFields" renderAs="REQUIRED">[resolution]</condition>
		</stateTransition>
		<stateTransition from="IN_PROGRESS" transition="clarify" to="CLARIFY" />
		<stateTransition from="IN_PROGRESS" transition="reassign" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="print" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="printTab" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportTabPDF" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportPDF" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportWord" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportTabWord" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="clone" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="lock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="unlock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="saveAsTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="addThumbnail" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="managePermissions" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="createInContext" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="changeTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="updateTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="addWatchers" to="IN_PROGRESS" />

		<!-- CLARIFY -->
		<stateTransition from="CLARIFY" transition="editDetails" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="clarified" to="IN_PROGRESS" />
		<stateTransition from="CLARIFY" transition="reassign" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="print" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="printTab" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="exportTabPDF" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="exportPDF" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="exportWord" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="exportTabWord" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="clone" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="lock" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="unlock" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="saveAsTemplate" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="addThumbnail" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="managePermissions" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="createInContext" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="changeTemplate" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="updateTemplate" to="CLARIFY" />
		<stateTransition from="CLARIFY" transition="addWatchers" to="CLARIFY" />

		<!-- ON_HOLD -->
		<stateTransition from="ON_HOLD" transition="editDetails" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="restart" to="IN_PROGRESS" />
		<stateTransition from="ON_HOLD" transition="reassign" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="print" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="printTab" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportTabPDF" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportPDF" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportWord" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportTabWord" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="clone" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="lock" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="unlock" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="saveAsTemplate" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="addThumbnail" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="managePermissions" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="createInContext" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="changeTemplate" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="updateTemplate" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="addWatchers" to="ON_HOLD" />

		<!-- RESOLVED -->
		<stateTransition from="RESOLVED" transition="editDetails" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="reopen" to="OPEN" />
		<stateTransition from="RESOLVED" transition="complete" to="COMPLETED" />
		<stateTransition from="RESOLVED" transition="reassign" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="print" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="printTab" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="exportTabPDF" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="exportPDF" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="exportWord" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="exportTabWord" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="clone" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="lock" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="unlock" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="saveAsTemplate" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="addThumbnail" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="managePermissions" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="createInContext" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="changeTemplate" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="updateTemplate" to="RESOLVED" />
		<stateTransition from="RESOLVED" transition="addWatchers" to="RESOLVED" />

		<!-- COMPLETED -->
		<stateTransition from="COMPLETED" transition="reopen" to="OPEN" />
		<stateTransition from="COMPLETED" transition="reassign" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="print" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="printTab" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportTabPDF" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportPDF" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportWord" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportTabWord" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="clone" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="lock" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="unlock" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="saveAsTemplate" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="addThumbnail" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="managePermissions" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="createInContext" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="changeTemplate" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="updateTemplate" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="addWatchers" to="COMPLETED" />
	</stateTransitions>

	<labels>
		<label id="ISSUE_TOOLTIP_HEADER">
			<value lang="en"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-title="${get([title])}">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
						<label>Issue Type: </label>
						<span data-property="issueType">${CL([issueType])}</span>
					</span>
					<span class="tooltip-row">
						<label>Priority: </label>
						<span data-property="priority">${CL([priority])}</span>
					</span>
					<span class="tooltip-row">
						<label>Status: </label>
						<span data-property="status">${CL([status])}</span>
					</span>
					<span class="tooltip-row">
                        <label>Assignee: </label>
						<span data-property="assignee">${objectProperty(${get([assignee])})}</span>
                    </span>
					<span class="tooltip-row">
                        <label>Reporter: </label>
						<span data-property="hasReporter">${objectProperty(${get([hasReporter])})}</span>
                    </span>
					${if(${get([references])}<>null).then(
						<span class="tooltip-row">
							<label>References: </label>
							<span data-property="references">${objectProperty(${get([references])})}</span>
						</span>
					)}
					<span class="tooltip-row">
						<label>Version: </label>
						<span data-property="emf:version">${get([emf:version])}</span>
					</span>
					<span class="tooltip-row">
						<label>Modified by: </label>
						<span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
					</span>
					<span class="tooltip-row">
						<label>Modified on: </label>
						<span data-property="modifiedOn">${date([modifiedOn])}</span>
					</span>
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>
						</span>
					)}
				</span>
			)})}]]></value>
			<value lang="de"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-title="${get([title])}">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
						<label>Problemtyp: </label>
						<span data-property="issueType">${CL([issueType])}</span>
					</span>
					<span class="tooltip-row">
						<label>Priorität: </label>
						<span data-property="priority">${CL([priority])}</span>
					</span>
					<span class="tooltip-row">
						<label>Status: </label>
						<span data-property="status">${CL([status])}</span>
					</span>
					<span class="tooltip-row">
                        <label>Beauftragter: </label>
						<span data-property="assignee">${objectProperty(${get([assignee])})}</span>
                    </span>
					<span class="tooltip-row">
                        <label>Reporter: </label>
						<span data-property="hasReporter">${objectProperty(${get([hasReporter])})}</span>
                    </span>
					${if(${get([references])}<>null).then(
						<span class="tooltip-row">
							<label>Verweise: </label>
							<span data-property="references">${objectProperty(${get([references])})}</span>
						</span>
					)}
					<span class="tooltip-row">
						<label>Ausführung: </label>
						<span data-property="emf:version">${get([emf:version])}</span>
					</span>
					<span class="tooltip-row">
						<label>Geändert von: </label>
						<span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
					</span>
					<span class="tooltip-row">
						<label>Geändert am: </label>
						<span data-property="modifiedOn">${date([modifiedOn])}</span>
					</span>
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>
						</span>
					)}
				</span>
			)})}]]></value>
			<value lang="bg"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-title="${get([title])}">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
						<label>Вид проблем: </label>
						<span data-property="issueType">${CL([issueType])}</span>
					</span>
					<span class="tooltip-row">
						<label>Приоритет: </label>
						<span data-property="priority">${CL([priority])}</span>
					</span>
					<span class="tooltip-row">
						<label>Статус: </label>
						<span data-property="status">${CL([status])}</span>
					</span>
					<span class="tooltip-row">
                        <label>Е възложен на: </label>
						<span data-property="assignee">${objectProperty(${get([assignee])})}</span>
                    </span>
					<span class="tooltip-row">
                        <label>Докладван от: </label>
						<span data-property="hasReporter">${objectProperty(${get([hasReporter])})}</span>
                    </span>
					${if(${get([references])}<>null).then(
						<span class="tooltip-row">
							<label>Препраща към: </label>
							<span data-property="references">${objectProperty(${get([references])})}</span>
						</span>
					)}
					<span class="tooltip-row">
						<label>Версия: </label>
						<span data-property="emf:version">${get([emf:version])}</span>
					</span>
					<span class="tooltip-row">
						<label>Актуализиран от: </label>
						<span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
					</span>
					<span class="tooltip-row">
						<label>Актуализиран на: </label>
						<span data-property="modifiedOn">${date([modifiedOn])}</span>
					</span>
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>
						</span>
					)}
				</span>
			)})}]]></value>
			<value lang="da"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-title="${get([title])}">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
						<label>Emnetype: </label>
						<span data-property="issueType">${CL([issueType])}</span>
					</span>
					<span class="tooltip-row">
						<label>Prioritet: </label>
						<span data-property="priority">${CL([priority])}</span>
					</span>
					<span class="tooltip-row">
						<label>Status: </label>
						<span data-property="status">${CL([status])}</span>
					</span>
					<span class="tooltip-row">
                        <label>Ansvarlig: </label>
						<span data-property="assignee">${objectProperty(${get([assignee])})}</span>
                    </span>
					<span class="tooltip-row">
                        <label>Rapportør: </label>
						<span data-property="hasReporter">${objectProperty(${get([hasReporter])})}</span>
                    </span>
					${if(${get([references])}<>null).then(
						<span class="tooltip-row">
							<label>Referencer: </label>
							<span data-property="references">${objectProperty(${get([references])})}</span>
						</span>
					)}
					<span class="tooltip-row">
						<label>Version: </label>
						<span data-property="emf:version">${get([emf:version])}</span>
					</span>
					<span class="tooltip-row">
						<label>Opdateret af: </label>
						<span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
					</span>
					<span class="tooltip-row">
						<label>Opdateret: </label>
						<span data-property="modifiedOn">${date([modifiedOn])}</span>
					</span>
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>
						</span>
					)}
				</span>
			)})}]]></value>
		</label>
		<label id="ISSUE_DEFAULT_HEADER">
			<value lang="en"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
                <span ><img src="${thumbnailUri(64)}"/></span>
                <span class="truncate-element">
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<b><span>(Deleted)</span></b>&nbsp;)}
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
							(<span data-property="issueType">${CL([issueType])}</span>)&nbsp;
							<span data-property="identifier">${get([identifier])}</span>,&nbsp;
							<span data-property="title">${get([title])}</span>
					</a>
				</br>
					Reporter:&nbsp;<span data-property="hasReporter">${objectProperty(${get([hasReporter])})}</span>,&nbsp;
					Priority:&nbsp;<span data-property="priority">${CL([priority])}</span>,&nbsp;
					Status:&nbsp;<span data-property="status">${CL([status])}</span>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version">${get([emf:version])}</span>
					)}
					${if(${get([references])}<>null).then(<br />References:&nbsp;<span data-property="references">${objectProperty(${get([references])})}</span>)}
                </span>)}]]>
			</value>
			<value lang="de"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
                <span ><img src="${thumbnailUri(64)}"/></span>
                <span class="truncate-element">
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<b><span>(Gelöscht)</span></b>&nbsp;)}
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
							(<span data-property="issueType">${CL([issueType])}</span>)&nbsp;
							<span data-property="identifier">${get([identifier])}</span>,&nbsp;
							<span data-property="title">${get([title])}</span>
					</a>
				</br>
					Reporter:&nbsp;<span data-property="hasReporter">${objectProperty(${get([hasReporter])})}</span>,&nbsp;
					Priorität:&nbsp;<span data-property="priority">${CL([priority])}</span>,&nbsp;
					Status:&nbsp;<span data-property="status">${CL([status])}</span>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version">${get([emf:version])}</span>
					)}
					${if(${get([references])}<>null).then(<br />Verweise:&nbsp;<span data-property="references">${objectProperty(${get([references])})}</span>)}
                </span>)}]]>
			</value>
			<value lang="bg"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
                <span ><img src="${thumbnailUri(64)}"/></span>
                <span class="truncate-element">
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<b><span>(Deleted)</span></b>&nbsp;)}
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
							(<span data-property="issueType">${CL([issueType])}</span>)&nbsp;
							<span data-property="identifier">${get([identifier])}</span>,&nbsp;
							<span data-property="title">${get([title])}</span>
					</a>
				</br>
					Докладван&nbsp;от<span data-property="hasReporter">${objectProperty(${get([hasReporter])})}</span>,&nbsp;
					Приоритет:&nbsp;<span data-property="priority">${CL([priority])}</span>,&nbsp;
					Статус:&nbsp;<span data-property="status">${CL([status])}</span>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version">${get([emf:version])}</span>
					)}
					${if(${get([references])}<>null).then(<br />Препраща&nbsp;към:&nbsp;<span data-property="references">${objectProperty(${get([emf:references])})}</span>)}
                </span>)}]]>
			</value>
			<value lang="da"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
                <span ><img src="${thumbnailUri(64)}"/></span>
                <span class="truncate-element">
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<b><span>(Slettet)</span></b>&nbsp;)}
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
						(<span data-property="issueType">${CL([issueType])}</span>)&nbsp;
						<span data-property="identifier">${get([identifier])}</span>,&nbsp;
						<span data-property="title">${get([title])}</span>
					</a>
				</br>
					Rapportør:&nbsp;<span data-property="hasReporter">${objectProperty(${get([hasReporter])})}</span>,&nbsp;
					Prioritet:&nbsp;<span data-property="priority">${CL([priority])}</span>,&nbsp;
					Status:&nbsp;<span data-property="status">${CL([status])}</span>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version">${get([emf:version])}</span>
					)}
					${if(${get([references])}<>null).then(<br />Referencer:&nbsp;<span data-property="references">${objectProperty(${get([references])})}</span>)}
                </span>)}]]>
			</value>
		</label>
		<label id="ISSUET_COMPACT_HEADER">
			<value lang="en"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
                <span ><img src="${thumbnailUri(16)}"/></span>
                ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
				<span class="truncate-element">
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<b><span>(Deleted)</span></b>&nbsp;)}
							(<span data-property="issueType">${CL([issueType])}</span>)&nbsp;
							<span data-property="identifier">${get([identifier])}</span>,&nbsp;
							<span data-property="title">${get([title])}</span>
					</a>
						${if(${var.isVersion}).then(
							&nbsp;<span data-property="emf:version">${get([emf:version])}</span>
						)}
				</span>)}]]>
			</value>
			<value lang="de"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
                <span ><img src="${thumbnailUri(16)}"/></span>
                ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
				<span class="truncate-element">
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<b><span>(Gelöscht)</span></b>&nbsp;)}
							(<span data-property="issueType">${CL([issueType])}</span>)&nbsp;
							<span data-property="identifier">${get([identifier])}</span>,&nbsp;
							<span data-property="title">${get([title])}</span>
					</a>
						${if(${var.isVersion}).then(
							&nbsp;<span data-property="emf:version">${get([emf:version])}</span>
						)}
				</span>)}]]>
			</value>
			<value lang="bg"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
                <span ><img src="${thumbnailUri(16)}"/></span>
                ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
				<span class="truncate-element">
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<b><span>(Deleted)</span></b>&nbsp;)}
							(<span data-property="issueType">${CL([issueType])}</span>)&nbsp;
							<span data-property="identifier">${get([identifier])}</span>,&nbsp;
							<span data-property="title">${get([title])}</span>
					</a>
						${if(${var.isVersion}).then(
							&nbsp;<span data-property="emf:version">${get([emf:version])}</span>
						)}
				</span>)}]]>
			</value>
			<value lang="da"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
                <span ><img src="${thumbnailUri(16)}"/></span>
                ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
				<span class="truncate-element">
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<b><span>(Slettet)</span></b>&nbsp;)}
						(<span data-property="issueType">${CL([issueType])}</span>)&nbsp;
						<span data-property="identifier">${get([identifier])}</span>,&nbsp;
						<span data-property="title">${get([title])}</span>
					</a>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version">${get([emf:version])}</span>
					)}
				</span>)}]]>
			</value>
		</label>
		<label id="ISSUE_BREADCRUMB_HEADER">
			<value lang="bg"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
                <span ><img src="${thumbnailUri(16)}"/></span>
                ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
 				<span>
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<b><span>(Deleted)</span></>&nbsp;)}
						(<span data-property="identifier">${get([identifier])}</span>)&nbsp;
						<span data-property="title">${get([title])}</span>
					</a>
				</span>)}]]>
			</value>
			<value lang="en"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
                <span ><img src="${thumbnailUri(16)}"/></span>
                ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
 				<span>
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<b><span>(Deleted)</span></>&nbsp;)}
						(<span data-property="identifier">${get([identifier])}</span>)&nbsp;
						<span data-property="title">${get([title])}</span>
					</a>
				</span>)}]]>
			</value>
			<value lang="de"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
                <span ><img src="${thumbnailUri(16)}"/></span>
                ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
 				<span>
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<b><span>(Gelöscht)</span></>&nbsp;)}
						(<span data-property="identifier">${get([identifier])}</span>)&nbsp;
						<span data-property="title">${get([title])}</span>
					</a>
				</span>)}]]>
			</value>
			<value lang="da"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
                <span ><img src="${thumbnailUri(16)}"/></span>
                ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
 				<span>
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<b><span>(Slettet)</span></>&nbsp;)}
						(<span data-property="identifier">${get([identifier])}</span>)&nbsp;
						<span data-property="title">${get([title])}</span>
					</a>
				</span>)}]]>
			</value>
		</label>
	</labels>
</definition>