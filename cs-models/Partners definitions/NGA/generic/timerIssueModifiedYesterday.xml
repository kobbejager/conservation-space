<?xml version="1.0"?>
<definition id="timerIssueModifiedYesterday" type="timer" isAbstract="false">
	<fields>
		<field name="timerIssueModifiedYesterday" type="an..200" displayType="system">
			<value><![CDATA[
					// process all objects
				    // ['IN_PROGRESS', 'ON_HOLD', 'OPEN', 'CLARIFY'];
					var arguments = new com.sirma.itt.seip.context.Context();
					arguments.put('todayMinus', 1);
					arguments.put('type', 'emf:Issue');
					arguments.put('statement', '{?instance emf\\:status \"IN_PROGRESS\" . } UNION { ?instance emf\\:status \"ON_HOLD\" . } UNION {?instance emf\\:status \"OPEN\" . } UNION {?instance emf\\:status \"CLARIFY\" . } ');
					var allObject = search.with(search.buildArgumentsForPredefinedQuery('ngaQueries/getModifiedIssueYesterday', arguments));
					var relatedUsersProps = ['hasWatcher','emf:hasWatcher','assignee', 'emf:hasAssignee', 'hasReporter', 'emf:hasReporter'];
				    var mapWithUsersObjects = {};
					
					for(var i=0; i < allObject.length; i++){
					    var object  = allObject[i];
						var recipients = tasks.getTaskAssignees(object, relatedUsersProps);
						for(var j=0; j < recipients.length; j++) {
							var recipient = recipients[j];
							var listOfObjects = mapWithUsersObjects[recipient];
							// check do we have any
							if (!listOfObjects) {
								// we don't have any dossiers yet so create a list
								listOfObjects = [];
							}
							// add new dossier to list
							listOfObjects.push(object);
							// update the map
							mapWithUsersObjects[recipient] = listOfObjects;
						}
					}	
					var listOfRecipients = Object.keys(mapWithUsersObjects);
					var subject ='(NGA) Updated issues';
					if(listOfRecipients.length > 0) {
						// loop by keys (recipients)
						for(var i=0; i < listOfRecipients.length; i++){
							// current recipient(user)
							var currentRecipient = listOfRecipients[i];
							// get list with agreements from map
							var listOfObjects = mapWithUsersObjects[currentRecipient];
							var recipients = [currentRecipient];
							//send the mail
							var context =  new com.sirma.itt.seip.context.Context();
							mail.sendNotifications(listOfObjects[0], subject, "email_update_issue_object", recipients, listOfObjects);
						}
					}
				]]>
			</value>
			<control id="schedulerConfiguration">
				<!-- To be executed each day at 00:00 -->
				<control-param id="config" name="cronExpression">0 1 0 1/1 * ? *</control-param>
				<control-param id="config" name="persistent">true</control-param>
			</control>
		</field>
	</fields>
</definition>