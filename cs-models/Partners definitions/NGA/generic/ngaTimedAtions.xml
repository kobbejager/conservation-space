<definition id="ngaTimedActions" type="timer">
	<fields>

		<!-- Frequently update cultural objects -->
		<field name="updateCulturalObjects" type="an..200" displayType="system">
			<value>
				<![CDATA[
                    // Java object types definition
                    var Calendar = Java.type('java.util.Calendar');
                    var GregorianCalendar = Java.type('java.util.GregorianCalendar');
                    var LinkedList = Java.type('java.util.LinkedList');
                    var Arrays = Java.type('java.util.Arrays');
                    var Locale = Java.type('java.util.Locale');
                    // Object initialization:
                    // Calendar initialization with specified locale - current locale US
                    var calendar = Calendar.getInstance(Locale.US);
                    // StartDate initialization - default current date
                    var from = Calendar.getInstance(Locale.US);
                    from.setTime(calendar.getTime());
                    // EndDate initialization - default current date. It is also customizable like startDate. The customization process is the same like startDate.
                    var to =  Calendar.getInstance(Locale.US);
                    to.setTime(calendar.getTime());
                   
                   
					// From startDate substract 1 day for setting the calendar date to yesterday.
                    // This is customizable. The user can set a week before with (-7 days), month before with (Calendar.MONTH - 1) and etc. 
                    from.add(Calendar.DAY_OF_MONTH, -1);
                    // Search arguments initialization.
                    var searchArguments = search.buildEmptySearchArguments();
                    // Batch size initialization. This variable is used to optimize updating process.
                    var batchSize = 25;
                    // Adding search arguments. Include thumbnails are set to false because they are auto generated by SEIP system.
                    searchArguments.getArguments().put('includeThumbnails', false);
                    searchArguments.getArguments().put('instantiateMissing', false);
                    // Include references are set to false because the SEIP updates only the modified object. 
                    searchArguments.getArguments().put('includeReferences', false);
                    // Setting batchSize optimize updating many objects.
                    searchArguments.setPageSize(batchSize);
                    // Setting context (external source system) from where SEIP will search and update modified objects. 
                    searchArguments.setContext('CMS');
					// Condition builder, the root of the search tree
                    var conditionBuilder = new com.sirma.itt.seip.domain.search.tree.ConditionBuilder();
                    // Setting search treen condition.
					// By default the conditon junction is AND
                    // conditionBuilder.setCondition(com.sirma.itt.seip.domain.search.tree.Condition.Junction.AND);
                    // Rule builder
                    var ruleBuilder = new com.sirma.itt.seip.domain.search.tree.RuleBuilder();
                    // Setting the fields in the tree rule builder - e.g "between" two dates for emf:modifiedOn
                    ruleBuilder.setOperation("between").setField("emf:modifiedOn").setValues(Arrays.asList(from.getTime(), to.getTime()));
                    // Building the rule
                    var rule = ruleBuilder.build();
                    // Adding the rule to the condition builder
                    conditionBuilder.addRule(rule);
					// Building the rule
					var condition = conditionBuilder.build();
                    // Adding he condition to searchArguments as the base tree node
                    searchArguments.setCondition(condition);
                    // Trigger external search with search arguments.
                    eaiScriptService.searchAndImport(searchArguments);
                   
				]]>
			</value>
			<control id="schedulerConfiguration">
                <!-- Cron expression can be generated in http://www.cronmaker.com/   -->
				<control-param id="config" name="cronExpression">0 1 0 1/1 * ? *</control-param>
			</control>
		</field>
	</fields>
</definition>