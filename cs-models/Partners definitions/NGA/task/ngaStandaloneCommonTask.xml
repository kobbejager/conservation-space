<?xml version="1.0" ?>
<definition id="ngaStandaloneCommonTask" parentId="baseTask" type="task">
	<fields>
		<field name="default_header" type="ANY" label="STANDALONE_TASK_DEFAULT_HEADER_NGA" />
		<field name="compact_header" type="ANY" label="STANDALONE_TASK_COMPACT_HEADER_NGA" />
		<field name="breadcrumb_header" type="ANY" label="STANDALONE_TASK_BREADCRUMB_HEADER_NGA" />
		<field name="tooltip_header" type="ANY" label="STANDALONE_TASK_TOOLTIP_HEADER_NGA" />
	
		<field name="title" type="an..1024" displayType="system" mandatory="false" >
			<value>Task</value>
		</field>
		<field name="uri" displayType="system" />
		<field name="poolAssignees" displayType="system" />
		<field name="assignees" displayType="system" />
	</fields>
	<regions>
		<region id="taskAssignment" order="100" displayType="editable" label="ngaStandaloneCommonTask.taskAssignment.label" >
			<fields>
				<field name="type" codelist="CL7" tooltip="nga.type.tooltip" order="10" >
					<value>NGATSK</value>
				</field>	
				<field name="subType" type="ANY" mandatory="true" displayType="editable" codelist="CL28" order="12" label="nga.subType.label" tooltip="nga.subType.tooltip" uri="nga:subClassification" >
					<condition id="readonlyFields" renderAs="READONLY">+[activityId]</condition>
				</field>
				<field name="purpose" type="ANY" displayType="editable" codelist="CL214"  tooltip="ngaDocument.purpose.tooltip" order="13" uri="nga:purpose" previewEmpty="false" />
				<field name="department" type="ANY" mandatory="true" codelist="CL245" label="nga.department.label" tooltip="nga.department.tooltip" displayType="editable" order="15" multiValued="true" uri="emf:departmentName" >
					<condition id="optionalField" renderAs="OPTIONAL">+[activityId]</condition>
					<control id="RELATED_FIELDS">
						<control-param type="related_field" id="fieldsToRerender" name="RERENDER">department</control-param>
						<control-param type="related_field" id="filterSource" name="FILTER_SOURCE">NGACDP24501,NGACDP24502,NGACDP24503,NGACDP24504,NGACDP24505,NGACDP24506,NGACDP24507,NGACDP24508,NGACDP24509</control-param>
						<control-param type="related_field" id="filterInclusive" name="INCLUSIVE">true</control-param>
						<control-param type="default_value_pattern" id="template" name="template">$[emf:createdBy.department]</control-param>
					</control>
				</field>
				<field name="assignee" label="nga.hasAssignee.label" tooltip="nga.assignee.tooltip" mandatory="true" order="20" >
					<condition id="readonlyFields" renderAs="READONLY">[status] NOTIN ('INIT','NEW')</condition>
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
						<control-param id="restrictions" name="restrictions">{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}</control-param>
					</control>
					<value>${currentUser.id}</value>
				</field>
				<field name="description" tooltip="nga.description.tooltip" order="25" previewEmpty="false" />
				<field name="nga:numberOfObjects" type="an..10" displayType="editable" tooltip="nga.numberOfObjects.tooltip" order="26" previewEmpty="false" uri="nga:numberOfObjects" />
				<field name="nga:relatedObjectClassification" type="ANY" displayType="editable" codelist="CL7" label="nga.type-classification.label" tooltip="nga.relatedObjectClassification.tooltip" order="27" multiValued="true" previewEmpty="false" uri="nga:relatedObjectClassification" >
					<control id="RELATED_FIELDS">
						<control-param type="related_field" id="fieldsToRerender" name="RERENDER">nga:relatedObjectClassification</control-param>
						<control-param type="related_field" id="filterSource" name="FILTER_SOURCE">NGACO7001,NGACO7002,NGACO7003,NGACO7004,NGACO7005,NGACO7006,NGACO7007,NGACO7008,NGACO7009,NGACO7010,NGACO7011,NGACO7012</control-param>
						<control-param type="related_field" id="filterInclusive" name="INCLUSIVE">true</control-param>
					</control>
				</field>
				<field name="nga:exhibitionDescription" type="an..1024" displayType="editable" tooltip="nga.exhibitionDescription.tooltip" order="30" previewEmpty="false" uri="nga:exhibitionDescription"  >
					<control id="RICHTEXT"/>
				</field>
				<field name="nga:exhibitionId" type="an..1024" displayType="editable" tooltip="NGAPR001.exhibitionId.tooltip" order="35" previewEmpty="false" uri="nga:exhibitionId"  />
				<field name="nga:loanId" type="an..1024" displayType="editable" tooltip="nga.loanId.tooltip" order="40" previewEmpty="false" uri="nga:loanId" />
				<field name="priority" tooltip="nga.priority.tooltip" order="45" ><value>0006-000084</value></field>
				<field name="plannedStartDate" type="date" label="nga.plannedStartDate.label" tooltip="nga.plannedStartDate.tooltip" order="48" >
					<value>${today}</value>
				</field>
				<field name="plannedEndDate" type="date" order="50" label="nga.plannedEndDate.label" tooltip="nga.plannedEndDate.tooltip" previewEmpty="false" />
				<field name="treatmentType" type="ANY" order="52" codelist="CL342" tooltip="nga.treatmentType.tooltip" displayType="hidden" previewEmpty="false" uri="nga:treatmentType">
					<condition id="visibleFields" renderAs="VISIBLE">[subType] IN ('NGA24336','NGA24337','NGA24338','NGA24339','NGA24340')</condition>
					<condition id="editableFields" renderAs="ENABLED">[subType] IN ('NGA24336','NGA24337','NGA24338','NGA24339','NGA24340')</condition>
				</field>	
				<field name="completedOn" order="53" tooltip="nga.completedOn.tooltip" >
					<condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('NOT_YET_STARTED','IN_PROGRESS','ON_HOLD','INIT') OR -[activityId]</condition>
				</field>
				<field name="outcome" order="54" tooltip="nga.outcome.tooltip" >
					<condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('NOT_YET_STARTED','IN_PROGRESS','ON_HOLD','INIT') OR -[activityId]</condition>
				</field>	
			</fields>
		</region> 
		<region id="systemInformation" order="500" displayType="editable" label="nga.systemInformation.region.label">
			<fields>
				<field name="identifier" tooltip="nga.identifier.tooltip" order="500" rnc="${eval(TC${seq({+tcSequence})})}" />
				<field name="status" order="505" tooltip="nga.status.tooltip" />
				<field name="emf:version" tooltip="nga.version.tooltip" order="510" />
				<field name="integrated" type="boolean" label="emf.integrated.label" displayType="hidden" order="512" uri="emf:integrated" />
				<field name="createdOn" tooltip="nga.createdOn.tooltip" order="515" />
				<field name="createdBy"	tooltip="nga.createdBy.tooltip" order="520" />
				<field name="modifiedOn" label="nga.modifiedOn.label" tooltip="nga.modifiedOn.tooltip" order="525" />
				<field name="modifiedBy" label="nga.modifiedBy.label" tooltip="nga.modifiedBy.tooltip" order="530" />
				<field name="lockedBy" tooltip="nga.lockedBy.tooltip" order="535" />
			</fields>
		</region>
		<region id="taskRelationships" order="700" displayType="editable" label="nga.relationships.region.label">
			<fields>
				<field name="processes" type="uri" label="nga.processes.label" tooltip="nga.processes.tooltip" displayType="editable" multiValued="true" order="7010" previewEmpty="false" uri="emf:processes" >
					<condition id="readonlyFields" renderAs="READONLY">+[activityId]</condition>
					<control id="PICKER">
						<control-param id="range" name="range">chc:CulturalObject,emf:Document</control-param>
					</control>
				</field>
				<field name="attachmentOf" type="uri" label="nga.attachmentOf.label" tooltip="nga.attachmentOf.tooltip" displayType="editable" multiValued="true" order="7012" previewEmpty="false" uri="chc:attachmentOf" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Image,emf:Task,emf:Project,chc:ConservationActivity,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="hasAttachment" type="uri" label="nga.hasAttachment.label" tooltip="nga.hasAttachment.tooltip" multiValued="true" displayType="editable" order="7014" previewEmpty="false" uri="chc:hasAttachment" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Image,emf:Task,emf:Project,chc:ConservationActivity,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="hasWatcher" label="nga.hasWatcher.label" tooltip="nga.hasWatcher.tooltip" order="7016" previewEmpty="false" />
				<field name="hasThumbnail" label="nga.hasThumbnail.label" tooltip="nga.hasThumbnail.tooltip" order="7018" />
				<field name="parentOf" tooltip="nga.parentOf.tooltip" order="7020" previewEmpty="false" />
				<field name="hasParent" label="nga.hasParent.label" tooltip="nga.hasParent.tooltip" order="7022" />
				<field name="emf:hasTemplate" order="7024" label="nga.hasTemplate.label" tooltip="nga.hasTemplate.tooltip" />
				<field name="partOf" displayType="readOnly" tooltip="nga.partOf.tooltip" order="7026" />
				<field name="hasChild" label="nga.hasChild.label" tooltip="nga.hasChild.tooltip" order="7028" previewEmpty="false" />
			</fields>
		</region>
	</regions>
	<transitions>
		<!--common transitions -->
		<transition id="create" label="create" purpose="create">
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[
						
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(New assignment) Task: ' + subType;

							//extract assignee
							var assignee = root.get('assignee');

							//add all users to recipients
							var recipients = [];
							recipients.push(assignee.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_assignee_object", recipients, context, null);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>		
		</transition> 
		<transition id="editDetails" order="10" actionPath="/actions" />
		<transition id="reassign" order="15" actionPath="/actions" >
			<fields>
				<field name="attachToConfig" type="json">
	 				<value>
	 					{
							"predefinedTypes" : ["emf:User"],
							"selection" : "single",
							"relation" : ["emf:hasAssignee"],
							"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						}
	 				</value>
	 				<control id="configuration" />
				</field>
				<field name="beforeReasing" type="an..200" displayType="system" >
					<value>
						<![CDATA[
							//add to context old assignee
							context.put('previousAsignee', root.get('assignee'));
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">before</control-param>
						<control-param id="async" name="async">false</control-param>
					</control>
				</field>
				<field name="onAssignTask" type="an..200" displayType="system" >
					<value>
						<![CDATA[
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Reassigned) Task: ' + subType;
							
							//extract watchers
							var recipients = [];
							var watchers = root.get('hasWatcher');
							if(watchers != null){
								for(var i = 0; i < watchers.length; i++){
								log.info("Watch " + watchers[i].toString());
								recipients.push(watchers[i].toString());
								}
							}
							//extract assignee, createdBy and old assignee
							recipients.push(root.get('assignee').toString());
							recipients.push(root.get('createdBy').toString());
							recipients.push(context.get('previousAsignee'));
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_reassigned_object", recipients, context, null);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="start" order="20" actionPath="/" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Started) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_start_object", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="suspend" order="25" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Suspended) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_suspend_object", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="restart" order="30" actionPath="/" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Restarted) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get("hasWatcher");
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_restart_object", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>	
		<transition id="stop" order="35"  label="stop.label" tooltip="stop.tooltip" purpose="transition" confirmation="confirmation.action" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Stopped) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get("hasWatcher");
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_stop_object", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="completeTask" order="40" actionPath="/" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Complete) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get("hasWatcher");
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_complate_object", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="createSubTask" order="45" label="nga.createSubTask.action.label" tooltip="nga.createSubTask.action.tooltip" purpose="createInstance">
			<fields>
				<field name="createSubTaskConfig" type="json">
					<value>
						{ 
							"predefinedTypes" : ["emf:Task"],
							"contextSelectorDisabled": true
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		
		<!--workflow transitions -->
		<transition id="approveAndPublish" order="50" label="nga.approveAndPublish.action.label" tooltip="nga.approveAndPublish.action.wf.tooltip" confirmation="complete.wf.task.confirm" purpose="bpmTransition" />
		<transition id="approve" order="51" label="nga.approve.action.label" tooltip="nga.approve.action.wf.tooltip" confirmation="complete.wf.task.confirm" purpose="bpmTransition" />
		<transition id="finalApprove" order="52" label="nga.finalApprove.action.label" tooltip="nga.finalApprove.action.wf.tooltip" confirmation="complete.wf.task.confirm" purpose="bpmTransition" />
		<transition id="implementRecommendations" order="53" label="nga.implementRecommendations.action.label" tooltip="nga.implementRecommendations.action.wf.tooltip" confirmation="complete.wf.task.confirm"  purpose="bpmTransition" />
		<transition id="finish" order="54" label="nga.finish.action.label" tooltip="nga.finish.action.wf.tooltip" confirmation="complete.wf.task.confirm"  purpose="bpmTransition" />
		<transition id="rejectMovement" order="55" label="nga.rejectMovement.action.label" tooltip="nga.rejectMovement.action.wf.tooltip" confirmation="complete.wf.task.confirm" purpose="bpmTransition" />
		<transition id="rejectTask" order="56" label="nga.rejectTask.action.label" tooltip="nga.rejectTask.action.wf.tooltip" confirmation="complete.wf.task.confirm"  purpose="bpmTransition" />
		<transition id="amendPhotos" order="57" label="nga.amendPhotos.action.label" tooltip="nga.amendPhotos.action.wf.tooltip" confirmation="complete.wf.task.confirm" purpose="bpmTransition" />
		<transition id="takeMoreSamples" order="58" label="nga.takeMoreSamples.action.label" tooltip="nga.takeMoreSamples.action.wf.tooltip" confirmation="complete.wf.task.confirm" purpose="bpmTransition" />
		<transition id="reject" order="59" label="nga.reject.action.label" tooltip="nga.reject.action.wf.tooltip" confirmation="complete.wf.task.confirm" purpose="bpmTransition" />
		
		<group id="add" order="65" label="add.group.label" type="menu" />
		<transition id="addAttachment" label="nga.addAttachment.action.label" tooltip="nga.addAttachment.action.tooltip" purpose="addRelation" group="add" >
			<fields>
				<field name="attachToConfig" type="json">
					<value>
						{
							"predefinedTypes" : ["emf:Project","chc:ConservationActivity","emf:Document","emf:Media","emf:Task","chc:CulturalObject","emf:Image","emf:Audio","emf:Video","chc:Sample","emf:BusinessProcess"],
							"selection" : "multiple",
							"relation" : ["chc:hasAttachment"]
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addThumbnail" group="add" />
		<transition id="addWatchers" group="add" >
			<fields>
				<field name="addAttachmentConfig" type="json">
					<value>
						{
							"predefinedTypes" : ["emf:User"],
							"selection" : "multiple",
							"relation" : ["emf:hasWatcher"],
							"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		
		<group id="exportAs" order="70" label="exportAs.group.label" type="menu" />
		<transition id="exportTabPDF" group="exportAs" />
		<transition id="exportTabWord" group="exportAs" />
		
		<transition id="printTab" order="75" />
		
		<group id="template" order="80" label="template.group.label" type="menu" />
		<transition id="saveAsTemplate" group="template"/>	
		<transition id="updateTemplate" tooltip="nga.updateTemplate.action.tooltip" group="template" />
		<transition id="changeTemplate" tooltip="nga.changeTemplate.action.tooltip" group="template" />
		
		<group id="more" order="85" label="more.group.label" type="menu" />
		<transition id="move" group="more" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Moved) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get("hasWatcher");
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_move_object", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="clone" label="clone.label" purpose="clone" tooltip="clone.tooltip" group="more" />
		<transition id="lock" group="more" />
		<transition id="unlock" actionPath="/" group="more" />
		<transition id="managePermissions" group="more" />
		
		<transition id="delete" order="100" confirmation="deleteCS.confirm" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Deleted) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get("hasWatcher");
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_delete_object", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
	</transitions>	
	
	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="NEW" />
		<stateTransition from="INIT" transition="clone" to="NEW"/>

		<stateTransition from="NEW" transition="create" to="NOT_YET_STARTED" />
		<stateTransition from="NEW" transition="clone" to="NOT_YET_STARTED"/>

		<!-- NOT_YET_STARTED-->		
		<stateTransition from="NOT_YET_STARTED" transition="editDetails" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="reassign" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="saveAsTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="changeTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="updateTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="addThumbnail" to="NOT_YET_STARTED" />	
		<stateTransition from="NOT_YET_STARTED" transition="addAttachment" to="NOT_YET_STARTED" />	
		<stateTransition from="NOT_YET_STARTED" transition="createSubTask" to="NOT_YET_STARTED"/> 

		<stateTransition from="NOT_YET_STARTED" transition="printTab" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportTabPDF" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportTabWord" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="clone" to="NOT_YET_STARTED" />

		<stateTransition from="NOT_YET_STARTED" transition="move" to="NOT_YET_STARTED"/>
		<stateTransition from="NOT_YET_STARTED" transition="lock" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="unlock" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="managePermissions" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="addWatchers" to="NOT_YET_STARTED"/> 

		<stateTransition from="NOT_YET_STARTED" transition="delete" to="NOT_YET_STARTED"/>
		<stateTransition from="NOT_YET_STARTED" transition="stop" to="STOPPED" />			
		<stateTransition from="NOT_YET_STARTED" transition="start" to="IN_PROGRESS" />
		<stateTransition from="NOT_YET_STARTED" transition="createInContext" to="NOT_YET_STARTED" />
		<!-- IN PROGRESS-->
		<stateTransition from="IN_PROGRESS" transition="editDetails" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="reassign" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="updateTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="saveAsTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="addThumbnail" to="IN_PROGRESS" />	
		<stateTransition from="IN_PROGRESS" transition="addAttachment" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="createSubTask" to="IN_PROGRESS"/> 
		<stateTransition from="IN_PROGRESS" transition="printTab" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportTabPDF" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportTabWord" to="IN_PROGRESS" /> 
		<stateTransition from="IN_PROGRESS" transition="clone" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="move" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="lock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="unlock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="managePermissions" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="addWatchers" to="IN_PROGRESS"/>

		<stateTransition from="IN_PROGRESS" transition="stop" to="STOPPED" />

		<stateTransition from="IN_PROGRESS" transition="suspend" to="ON_HOLD" />
		<stateTransition from="IN_PROGRESS" transition="completeTask" to="COMPLETED" />
		<stateTransition from="IN_PROGRESS" transition="createInContext" to="IN_PROGRESS" />

		<!-- ON HOLD-->
		<stateTransition from="ON_HOLD" transition="editDetails" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="reassign" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="saveAsTemplate" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="addThumbnail" to="ON_HOLD" />	
		<stateTransition from="ON_HOLD" transition="addAttachment" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="printTab" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportTabPDF" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportTabWord" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="clone" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="move" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="lock" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="unlock" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="managePermissions" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="addWatchers" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="stop" to="STOPPED"  />

		<stateTransition from="ON_HOLD" transition="restart" to="IN_PROGRESS" />
		<!-- STOPPED-->
		<stateTransition from="STOPPED" transition="printTab" to="STOPPED" />
		<stateTransition from="STOPPED" transition="exportTabPDF" to="STOPPED" />
		<stateTransition from="STOPPED" transition="exportTabWord" to="STOPPED" /> 
		<stateTransition from="STOPPED" transition="clone" to="STOPPED" />
		<stateTransition from="STOPPED" transition="saveAsTemplate" to="STOPPED" />
		<stateTransition from="STOPPED" transition="managePermissions" to="STOPPED" />

		<!-- complate-->
		<stateTransition from="COMPLETED" transition="printTab" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportTabPDF" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportTabWord" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="clone" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="saveAsTemplate" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="managePermissions" to="COMPLETED" />
		
		<stateTransition from="*" transition="stop" to="STOPPED" />

	</stateTransitions>
	
	<allowedChildren>
		<child type="document" id="all"/>
		<child type="object" id="NGASAMPLE"/>
		<child type="object" id="ngaAudio"/>
		<child type="object" id="ngaVideo"/>
		<child type="object" id="NGAIT211001"/>
		<child type="object" id="NGAIT211002"/>
		<child type="object" id="NGAIT211003"/>
		<child type="task" id="all"/>
	</allowedChildren>

	<labels>
		<label id="STANDALONE_TASK_TOOLTIP_HEADER_NGA">
			<value lang="en"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-type="${CL([type])}">${CL([type])}</span> 
                        </a>
                    </span>
					 <span class="tooltip-row">
                        <label>Sub-type: </label>
                        <span data-property="subType">${CL([subType])}</span>
                    </span>
					${if(${get([department])}<>null).then(
						<span class="tooltip-row">
							<label>Department: </label>
							<span data-property="department">${CL([department])}</span>
						</span>
					)}	
					<span class="tooltip-row">
                        <label>Status: </label>
                        <span data-property="status">${CL([status])}</span>
                    </span>
					${if(${get([priority])}<>null).then(
						<span class="tooltip-row">
							<label>Priority: </label>
							<span data-property="priority">${CL([priority])}</span>
						</span>
					)}	
					${if(${get([plannedStartDate])}<>null).then(
						<span class="tooltip-row">
							<label>Start date: </label>
							<span data-property="plannedStartDate">${date([plannedStartDate])}</span>
						</span>
					)}	
					${if(${get([plannedEndDate])}<>null).then(
						<span class="tooltip-row">
							<label>End date: </label>
							<span data-property="plannedEndDate">${date([plannedEndDate])}</span>
						</span>
					)}
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>                      
						</span>
					)}
                </span>
            )}]]></value>
		</label>
		<label id="STANDALONE_TASK_DEFAULT_HEADER_NGA">
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span><img src="${thumbnailUri(64)}"/></span>
			<span>
				${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
				<span class="truncate-element">
					Priority:&nbsp;<span data-property="priority">${CL([priority])}</span>&nbsp;
					${if(${get([status])} <> NEW).then((<span data-property="status">${CL([status])}</span>))}
				</span>
				<br />
				<span class="truncate-element">
					<b>
						<a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
							${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
								<span data-property="subType">${CL([subType])}</span>
						</a>
					</b>	
					${if(${get([plannedEndDate])} <> null).then(,&nbsp;End date: <span>${date([plannedEndDate])}</span>)}
				</span>	
				<br />
				<span class="truncate-element">
					Assigned to: <span data-property="assignee">${if(${get([assignee])} == null).then(Unclaimed).else(${objectProperty(${get([assignee])})})}</span>
					${if(${var.isVersion}).then(
						&nbsp;<span class="document-version version badge">${get([emf:version])}</span>
					)}
				</span>
			</span>)}]]></value>
		</label>
		<label id="STANDALONE_TASK_COMPACT_HEADER_NGA">
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span><img src="${thumbnailUri(16)}"/></span>
            <span>
				${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
				<span>
					<span class="truncate-element">
						<a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
							${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
							<span data-property="subType">${CL([subType])}</span>
						</a>&nbsp;
						${if(${get([status])} <> NEW).then((<span data-property="status">${CL([status])}</span>))}
						${if(${var.isVersion}).then(
							&nbsp;<span class="document-version version badge">${get([emf:version])}</span>
						)}
					</span>
				</span>
			</span>)}]]></value>
		</label>	
		<label id="STANDALONE_TASK_BREADCRUMB_HEADER_NGA">
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
			<span><img src="${thumbnailUri(16)}"/></span>
			<span>
				${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
				<a class="${get([status])} task-state-${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
					<span data-property="subType">${CL([subType])}</span>
				</a>
			</span>)}]]></value>
		</label>		
	</labels>		
</definition>
