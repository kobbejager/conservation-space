<?xml version="1.0"?>
<definition id="ciaProject" parentId="baseProject" type="project">
	<fields>
		<field name="default_header" type="ANY" label="PROJECT_DEFAULT_HEADER_CIA" />
	   	<field name="compact_header" type="ANY" label="PROJECT_COMPACT_HEADER_CIA" />
	    <field name="breadcrumb_header" type="ANY" label="PROJECT_BREADCRUMB_HEADER_CIA" />
		<field name="tooltip_header" type="ANY" label="PROJECT_TOOLTIP_HEADER_CIA" />		
		
		<!-- system fieds -->
		<field name="priority" displayType="system"/>
		<field name="outcome" displayType="system"/>
		<field name="actualStartDate" displayType="system"/>
		<field name="actualEndDate" displayType="system"/>
		<field name="actualEffortHours" displayType="system"/>
		<field name="accumulatedEstimatedEffortHours" displayType="system"/>
		<field name="accumulatedActualEffortHours" displayType="system"/>
		<field name="duration" displayType="system"/>
		<field name="completedOn" displayType="system" />
		<field name="uri" displayType="system" />
		<field name="emailAddress" displayType="system" />
		<field name="ownedBy" displayType="system" />
	</fields>
	<regions>
		<region id="projectDetails" order="10" displayType="editable" label="cia.generalProjectInformation.region.label">
			<fields>
				<field name="title" type="an..1000" tooltip="cia.title.tooltip" />
				<field name="description" type="an..1024" tooltip="cia.description.tooltip" />
				<field name="activityCode" type="an..50" displayType="editable" label="cia.activityCode.label" tooltip="cia.activityCode.tooltip" previewEmpty="false" uri="cia:activityCode" />
				<field name="activityYear" type="an..180" displayType="editable" tooltip="cia.activityYear.tooltip" previewEmpty="false" uri="cia:activityYear" />
				<field name="hasAssignedConservator" type="uri" displayType="editable" mandatory="true" label="cia.hasAssignedConservator.label" tooltip="cia.hasAssignedConservator.tooltip" multiValued="true" previewEmpty="false" uri="cia:hasAssignedConservator" >
					<condition id="readonlyField" renderAs="READONLY">[identifier] NOTIN ('NO_ID')</condition>
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
						<control-param id="restrictions" name="restrictions">{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}</control-param>
					</control>
					<value>${currentUser.id}</value>
				</field>
				<field name="hasSupervisor" type="uri" displayType="editable" label="cia.hasSupervisor.label" tooltip="cia.hasSupervisor.tooltip" previewEmpty="false" multiValued="true" uri="chc:hasSupervisor">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User,emf:Group</control-param>
						<control-param id="restrictions" name="restrictions">{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}</control-param>
					</control>
				</field>
				<field name="hasParticipant" type="uri" displayType="editable" label="cia.hasParticipant.label" tooltip="cia.hasParticipant.tooltip" previewEmpty="false" multiValued="true" uri="ptop:hasParticipant">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User,emf:Group</control-param>
						<control-param id="restrictions" name="restrictions">{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}</control-param>
					</control>
				</field>
				<field name="plannedStartDate" type="date" tooltip="cia.plannedStartDate.tooltip" uri="emf:plannedStartDate">
					<value>${today}</value>
				</field>
				<field name="plannedEndDate" type="date" tooltip="cia.plannedEndDate.tooltip" uri="emf:plannedEndDate"/>
				<field name="estimatedEffortHours" tooltip="cia.estimatedEffortHours.tooltip" />
				<field name="materialCost" type="an..1024" displayType="editable" tooltip="cia.materialCost.tooltip" previewEmpty="false" uri="cia:materialCost" />
			</fields>
		</region>
		<region id="systemData" order="20" displayType="editable" label="cia.systemData.region.label">
			<fields>
				<field name="type" codelist="CL7" tooltip="cia.type.tooltip" ><value>FC236001</value></field>
				<field name="identifier" tooltip="cia.identifier.tooltip" rnc="${eval(PRJ${seq({+prjSequence})})}" />
				<field name="status" tooltip="cia.status.tooltip" />
				<field name="emf:version" tooltip="cia.version.tooltip" /> 
				<field name="integrated" type="boolean" displayType="hidden" uri="emf:integrated"/>
				<!-- object properties (relationships) -->
				<field name="createdOn" tooltip="cia.createdOn.tooltip" />
				<field name="createdBy" tooltip="cia.createdBy.tooltip" />
				<field name="modifiedOn" label="cia.modifiedOn.label" tooltip="cia.modifiedOn.tooltip" />
				<field name="modifiedBy" label="cia.modifiedBy.label" tooltip="cia.modifiedBy.tooltip" />
				<field name="lockedBy" tooltip="cia.lockedBy.tooltip" />
				<field name="hasThumbnail" label="cia.hasThumbnail.label" tooltip="cia.hasThumbnail.tooltip" />
				<field name="attachmentOf" type="uri" displayType="editable" label="cia.attachmentOf.label" tooltip="cia.attachmentOf.tooltip" multiValued="true" previewEmpty="false" uri="chc:attachmentOf" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,cia:Survey,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="hasAttachment" type="uri" displayType="editable" label="cia.hasAttachment.label" tooltip="cia.hasAttachment.tooltip" multiValued="true" previewEmpty="false" uri="chc:hasAttachment" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,cia:Survey,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="hasWatcher" label="cia.hasWatcher.label" tooltip="cia.hasWatcher.tooltip" />
				<field name="parentOf" tooltip="cia.parentOf.tooltip" previewEmpty="false" />
				<field name="hasParent" tooltip="cia.hasParent.tooltip" />
				<field name="emf:hasTemplate" label="cia.hasTemplate.label" tooltip="cia.hasTemplate.tooltip" />
				<field name="partOf" displayType="readOnly" tooltip="cia.partOf.tooltip" />
				<field name="hasChild" tooltip="cia.hasChild.tooltip" previewEmpty="false" />
			</fields>
		</region>
	</regions> 

	<transitions>
		<transition id="create" label="create" purpose="create">
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[

							function includes(arr, k) {
                              return arr.indexOf(k) > -1;
                            }
							var title = root.get('title');
							var subject = '(New assignment) Project: ' + title;

							//extract assignee, supervisors, participants and createdBy
							var hasAssignedConservator = root.get('hasAssignedConservator');
							var supervisors = root.get('hasSupervisor');
							var participants = root.get('hasParticipant');
							var createdBy = root.get('createdBy');

							//add all users to recipients
							var recipients = [];
							var i = 0;
							if (supervisors != null) {
							 for(i = 0; i < supervisors.length; i++) {
							  	recipients.push(supervisors[i].toString());
							   }
							 }

							if(participants != null) {
							   for (i = 0; i < participants.length; i++) {
							   recipients.push(participants[i].toString());
							   }
							}
							
							if(hasAssignedConservator != null) {
							   for (i = 0; i < hasAssignedConservator.length; i++) {
							   recipients.push(hasAssignedConservator[i].toString());
							   }
							}
							
							if(!includes(recipients, createdBy.toString())){
								recipients.push(createdBy.toString());
							}

							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_assignee_object_cia", recipients, context, null);
						]]>
					</value>
					<control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                    </control>
				</field> 
			</fields>
		</transition> 
		<transition id="editDetails" order="10" actionPath="/actions" />
		<transition id="reassign" order="15" label="reassign.label" tooltip="reassign.tooltip" purpose="addRelation" actionPath="/" >
			<fields>
				<field name="attachToConfig" type="json">
					<value>
						{
							"predefinedTypes" : ["emf:User"],
							"selection" : "multiple",
							"relation" : ["cia:hasAssignedConservator"],
							"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						}
					</value>
					<control id="configuration" />
				</field>
				<field name="afterReasing" type="an..200" displayType="system" >
					<value>
						<![CDATA[
							var title = root.get("title");
							var subject = '(Reassigned) Project: ' + title;
							
							//extract watchers, assignee, createdBy and old assignee
							var recipients = [];
							var watchers = root.get('hasWatcher');
							if(watchers != null){
								for(var i = 0; i < watchers.length; i++){
								recipients.push(watchers[i].toString());
								}
							}
							var assignedConservator = root.get('hasAssignedConservator');
							if(assignedConservator != null){
								for(var i = 0; i < assignedConservator.length; i++){
								recipients.push(assignedConservator[i].toString());
								}
							}
							recipients.push(root.get('createdBy').toString());
							//recipients.push(context.get('previousAsignee'));
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_reassigned_object_cia", recipients, context, null);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition> 
		<transition id="complete" order="20" label="complete.label" tooltip="complete.tooltip" purpose="transition" confirmation="complete.confirm" actionPath="/" >
			<fields>
                <field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[
							var title = root.get("title");
							var subject = '(Complete) Project: ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_complete_object_cia", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                    </control>
                </field>
            </fields>
		</transition>
		<transition id="reopen" order="25" label="reopen.action.label" tooltip="cia.reopen.action.tooltip" purpose="transition" confirmation="reopen.confirm" actionPath="/" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var title = root.get("title");
							var subject = '(Reopened) Project: ' + title;
							
							//extract warchers and createdBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_reopen_object_cia", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="createDocument" order="35" label="cia.createDocument.action.label" tooltip="cia.createDocument.action.tooltip" purpose="createInstance" actionPath="/" >
      		<fields>
				<field name="createDocConfig" type="json">
					<value>
   						{ 
							"predefinedTypes" : ["emf:Document"],  
							"contextSelectorDisabled": true
    					}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		<transition id="createTask" order="40" label="cia.createTask.action.label" tooltip="cia.createSubTask.action.tooltip" purpose="createInstance">
      		<fields>
				<field name="createDocConfig" type="json">
					<value>
						{ 
							"predefinedTypes" : ["emf:Task"],
							"contextSelectorDisabled": true
						}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		<transition id="initiateMultipleAssigneeWorkflow" order="45" label="cia.initiateMultipleAssigneeWorkflow.action.label" tooltip="cia.initiateMultipleAssigneeWorkflow.action.tooltip" purpose="createInstance">
      		<fields>
				<field name="createDocConfig" type="json">
					<value>
						{ 
							"predefinedTypes" : ["emf:BusinessProcess"],
							"predefinedSubTypes" : ["CIAWFLTYPE02"],
							"contextSelectorDisabled": true
						}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		
		<group id="add" order="50" label="add.group.label" type="menu" />
		<transition id="addAttachment" label="cia.addAttachment.action.label" tooltip="cia.addAttachment.action.tooltip" purpose="addRelation" group="add">
			<fields>
				<field name="attachToConfig" type="json">
					<value>
						{
							"predefinedTypes" : ["emf:Project","cia:Survey","emf:Document","emf:Task","chc:CulturalObject","emf:Image","emf:Audio","emf:Video","chc:Sample","emf:BusinessProcess"],
							"selection" : "multiple",
							"relation" : ["chc:hasAttachment"]
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addThumbnail" group="add" />
		<transition id="addWatchers" label="addWatchers.label" tooltip="addWatchers.tooltip" purpose="addRelation" group="add" >
			<fields>
				<field name="addWatcherConfig" type="json">
					<value>						
						{
							"predefinedTypes" : ["emf:User"],
							"selection" : "multiple",
							"relation" : ["emf:hasWatcher"],
							"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		
		<group id="exportAs" order="55" label="exportAs.group.label" type="menu" />
		<transition id="exportTabPDF" group="exportAs" />
		<transition id="exportPDF" group="exportAs" />
		<transition id="exportTabWord" group="exportAs" />
		<transition id="exportWord" group="exportAs" />
		
		<group id="print" order="60" label="print.group.label" type="menu" />
		<transition id="printTab" group="print" />
		<transition id="print" group="print" />
		
		<group id="template" order="61" label="template.group.label" type="menu" />
		<transition id="saveAsTemplate" group="template" />	
		<transition id="updateTemplate" label="updateTemplate.label" tooltip="cia.updateTemplate.action.tooltip"  purpose="updateTemplate" confirmation="confirmation.update_template" group="template" />
		<transition id="changeTemplate" label="changeTemplate.label" tooltip="cia.changeTemplate.action.tooltip" purpose="changeTemplate" group="template" />
		
		<group id="more" order="65" label="more.group.label" type="menu" />
		<transition id="move" group="more" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[	
							var title = root.get("title");
							var subject = '(Moved) Project: '+ title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_move_object_cia", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                    </control>
                </field>
			</fields>
		</transition>
		<transition id="clone" group="more" />
		<transition id="lock" group="more" />
		<transition id="unlock" group="more" actionPath="/" />
		<transition id="managePermissions" group="more" />
			
		<transition id="delete" order="100" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[	
							var title = root.get('title');
							var subject = '(Deleted) Project: ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_delete_object_cia", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
	</transitions>	 

	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="IN_PROGRESS"/>
		<stateTransition from="INIT" transition="clone" to="IN_PROGRESS"/>
		
		<stateTransition from="IN_PROGRESS" transition="editDetails" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="complete" to="COMPLETED"/>
		<stateTransition from="IN_PROGRESS" transition="reassign" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="addAttachment" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="print" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="printTab" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="exportTabPDF" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="exportPDF" to="IN_PROGRESS"/>	
		<stateTransition from="IN_PROGRESS" transition="exportWord" to="IN_PROGRESS"/>	
		<stateTransition from="IN_PROGRESS" transition="exportTabWord" to="IN_PROGRESS"/>	
		<stateTransition from="IN_PROGRESS" transition="move" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="clone" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="lock" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="unlock" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="addWatchers" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="addThumbnail" to="IN_PROGRESS"/>	
		<stateTransition from="IN_PROGRESS" transition="saveAsTemplate" to="IN_PROGRESS"/>		
		<stateTransition from="IN_PROGRESS" transition="changeTemplate" to="IN_PROGRESS"/>		
		<stateTransition from="IN_PROGRESS" transition="updateTemplate" to="IN_PROGRESS"/>		
		<stateTransition from="IN_PROGRESS" transition="managePermissions" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="createDocument" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="createTask" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="initiateMultipleAssigneeWorkflow" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="createInContext" to="IN_PROGRESS"/>
		
		<stateTransition from="IN_PROGRESS" transition="delete" to="IN_PROGRESS"/>

		<stateTransition from="COMPLETED" transition="reopen" to="IN_PROGRESS" />
		<stateTransition from="COMPLETED" transition="print" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="printTab" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="exportTabPDF" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="exportPDF" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="exportWord" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="exportTabWord" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="managePermissions" to="COMPLETED"/>
	</stateTransitions>		
	
	<allowedChildren>
		<child type="document" id="all"/>
		<child type="object" id="ciaSample"/>
		<child type="object" id="ciaAudio"/>
		<child type="object" id="ciaVideo"/>
		<child type="object" id="ciaImage"/>
		<child type="task" id="all"/>
		<child type="workflow" id="CIAWFLTYPE02"/>
		<child type="object" id="DataImportSource"/>
	</allowedChildren>
	
	<labels>
		<label id="PROJECT_TOOLTIP_HEADER_CIA">
			<value lang="en"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-title="${get([title])}">${get([title])}</span> 
                        </a>
                    </span>
					 <span class="tooltip-row">
                        <label>Type: </label>
                        <span data-property="type">${CL([type])}</span>
                    </span>
					<span class="tooltip-row">
                        <label>Status: </label>
                        <span data-property="status">${CL([status])}</span>
                    </span>
					${if(${get([plannedStartDate])}<>null).then(
						<span class="tooltip-row">
							<label>Planned start date: </label>
							<span data-property="plannedStartDate">${date([plannedStartDate])}</span>
						</span>
					)}
					${if(${get([plannedEndDate])}<>null).then(
						<span class="tooltip-row">
							<label>Planned end date: </label>
							<span data-property="plannedEndDate">${date([plannedEndDate])}</span>
						</span>
					)}
					<span class="tooltip-row">
                        <label>System modified by: </label>
                        <span data-property="modifiedBy">${objectProperty(${get([modifiedBy])})}</span>
                    </span>
					<span class="tooltip-row">
                        <label>System modified on: </label>
                        <span data-property="modifiedOn">${date([modifiedOn])}</span>
                    </span>
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>                      
						</span>
					)}
                </span>)}]]>
			</value>
		</label>	
        <label id="PROJECT_DEFAULT_HEADER_CIA">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(64)}"/></span>
				<span>
					<span class="truncate-element">
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
						<span data-property="type">${CL([type])}</span>&nbsp;
						(<span data-property="status">${CL([status])}</span>)
					</span>
					<br />
					<b>
						<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
							${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
							<span data-property="title">${get([title])}</span>
						</a>
					</b>	
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
				</span>)}]]>
			</value>
		</label>
        <label id="PROJECT_COMPACT_HEADER_CIA">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(16)}"/></span>
				<span class="truncate-element">
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}" style="vertical-align:baseline;">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						<span data-property="title">${get([title])}</span>
					</a>&nbsp;
					(<span data-property="status">${CL([status])}</span>)
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
				</span>)}]]>
			</value>
		</label>
		<label id="PROJECT_BREADCRUMB_HEADER_CIA">
            <value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						<span data-property="title">${get([title])}</span>
					</a>	
				</span>		
            )}]]></value>
		</label>
	</labels>	
</definition>
