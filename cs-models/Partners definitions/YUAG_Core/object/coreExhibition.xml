<?xml version="1.0"?>
<definition id="coreExhibition" parentId="entity" type="object" isAbstract="true" >
	<configuration>
		<fields>
			<field name="existingInContext" >
				<value>WITHOUT_CONTEXT</value>
			</field>
		</fields>
	</configuration>
	<fields>
		<field name="default_header" type="ANY" label="EXHIBITION_DEFAULT_HEADER_CORE" displayType="system" />
		<field name="compact_header" type="ANY" label="EXHIBITION_COMPACT_HEADER_CORE" displayType="system" />
		<field name="breadcrumb_header" type="ANY" label="EXHIBITION_BREADCRUMB_HEADER_CORE" displayType="system" />
		<field name="tooltip_header" type="ANY" label="EXHIBITION_TOOLTIP_HEADER_CORE" displayType="system"/>

		<field name="rdf:type" >
            <value>http://www.sirma.com/ontologies/2016/02/culturalHeritageConservation#Exhibition</value>
        </field>
	</fields>
	<regions>
		<region id="generalData" displayType="editable" order="10" label="core.generalData.region.label">
			<fields>
				<field name="title" type="an..180" tooltip="core.title.tooltip" />
				<field name="description" tooltip="core.description.tooltip" />
				<field name="chc:exhibitionVenue" type="an..180" displayType="editable" uri="chc:exhibitionVenue" />
				<field name="chc:exhibitionOrganizer" type="an..180" displayType="editable" uri="chc:exhibitionOrganizer" />
				<field name="chc:hasCulturalObjectExhibited" type="uri" displayType="editable" label="core.hasCulturalObjectExhibited.label" tooltip="core.hasCulturalObjectExhibited.tooltip" multiValued="true" uri="chc:hasCulturalObjectExhibited" >
					<control id="PICKER">
						<control-param id="range" name="range">chc:CulturalObject</control-param>
						<control-param id="restrictions" name="restrictions">{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["CURRENT"]}</control-param>
					</control>
				</field>	
				<field name="chc:exhibitionID" type="an..50" displayType="editable" uri="chc:exhibitionID" />
				<field name="plannedStartDate" type="date" displayType="editable" label="core.plannedStartDate.label" tooltip="core.plannedStartDate.tooltip" uri="emf:plannedStartDate" >
					<value>${today}</value>
				</field>
				<field name="plannedEndDate" type="date" displayType="editable" label="core.plannedEndDate.label" tooltip="core.plannedEndDate.tooltip" uri="emf:plannedEndDate" />
			</fields>
		</region>
		<region id="systemData" order="20" displayType="editable" label="core.systemData.region.label">
			<fields>
				<field name="type" tooltip="core.type.tooltip" ><value>FC236014</value></field>
				<field name="identifier" type="an..50" displayType="readOnly" tooltip="core.identifier.tooltip" rnc="${eval(EX${seq({+exSequence})})}" uri="dcterms:identifier"/>
				<field name="status" codelist="CL112" tooltip="core.status.tooltip" />
				<field name="emf:version" tooltip="core.version.tooltip" /> 
				<field name="integrated" type="boolean" displayType="hidden" label="emf.integrated.label" uri="emf:integrated"/>
				<!-- object properties (relationships) -->
				<field name="createdOn" tooltip="core.createdOn.tooltip" />
				<field name="createdBy" tooltip="core.createdBy.tooltip" />
				<field name="modifiedOn" label="core.modifiedOn.label" tooltip="core.modifiedOn.tooltip" />
				<field name="modifiedBy" label="core.modifiedBy.label" tooltip="core.modifiedBy.tooltip" />
				<field name="lockedBy" tooltip="core.lockedBy.tooltip" />
				<field name="hasAttachment" type="uri" displayType="editable" label="core.hasAttachment.label" tooltip="core.hasAttachment.tooltip" multiValued="true" uri="emf:hasAttachment" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,chc:Sample,emf:Image,emf:Audio,emf:Video,emf:Task,chc:ConservationActivity,emf:Project</control-param>
					</control>
				</field>
				<field name="attachmentOf" type="uri" displayType="editable" label="core.attachmentOf.label" tooltip="core.attachmentOf.tooltip" multiValued="true" uri="emf:isAttachedTo" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Project,chc:ConservationActivity</control-param>
					</control>
				</field>
				<field name="hasWatcher" label="core.hasWatcher.label" tooltip="core.hasWatcher.tooltip" />
				<field name="hasThumbnail" label="core.hasThumbnail.label" tooltip="core.hasThumbnail.tooltip" />
				<field name="parentOf" tooltip="core.parentOf.tooltip" previewEmpty="false" />
				<field name="hasParent" tooltip="core.hasParent.tooltip" />				
				<field name="partOf" tooltip="core.partOf.tooltip" />
				<field name="hasChild" tooltip="core.hasChild.tooltip" />
				<field name="emf:hasTemplate" label="core.hasTemplate.label" tooltip="core.hasTemplate.tooltip" />
			</fields>
		</region>
	</regions> 
	<transitions>
		<transition id="editDetails" order="10" actionPath="/actions" />
		<transition id="start" order="15" label="start.label" tooltip="core.exhibitionStart..action.tooltip" purpose="transition" actionPath="/" confirmation="start.exhibition.confirm" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[
							var title = root.get('title');
							var subject = '(Started) Exhibition - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_start_object_core", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="complete" order="20" label="complete.label" tooltip="core.exhibitionCpmplete.action.tooltip" purpose="transition" confirmation="complete.exhibition.confirm" actionPath="/" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[
							var title = root.get('title');
							var subject = '(Complete) Exhibition - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_complete_object_core", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		
		<group id="create" order="30" label="create.group.label" type="menu" />
		<transition id="createDocument" label="core.createDocument.action.label" tooltip="core.createDocument.action.tooltip" purpose="createInstance" actionPath="/" group="create" >
      		<fields>
				<field name="createDocumentConfig" type="json">
					<value>
   						{ 
							"predefinedTypes" : ["emf:Document"],  
							"contextSelectorDisabled": true
    					}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		<transition id="createConservationActivity" label="core.createConservationActivity.action.label" tooltip="core.createConservationActivity.action.tooltip" purpose="createInstance" actionPath="/" group="create" >
      		<fields>
				<field name="createDocumentConfig" type="json">
					<value>
   						{ 
							"predefinedTypes" : ["chc:ConservationActivity"],  
							"contextSelectorDisabled": true
    					}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		<transition id="createTask" label="core.createTask.action.label" tooltip="core.createTask.action.tooltip" purpose="createInstance" actionPath="/" group="create" >
      		<fields>
				<field name="createDocumentConfig" type="json">
					<value>
   						{ 
							"predefinedTypes" : ["emf:Task"],  
							"contextSelectorDisabled": true
    					}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		
		<group id="add" order="35" label="add.group.label" type="menu" />
		<transition id="addCulturalObject" label="core.addCulturalObject.action.label" tooltip="core.addCulturalObject.action.tooltip" purpose="addRelation" actionPath="/" group="add" >
			<fields>
				<field name="addCOToConfig" type="json">
					<value>
						{
							"predefinedTypes" : ["chc:CulturalObject"],
							"selection" : "multiple",
							"relation" : ["chc:hasCulturalObjectExhibited"],
							"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["CURRENT"]}
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addAttachment" label="core.addAttachment.action.label" tooltip="core.addAttachment.action.tooltip" purpose="addRelation" group="add" >
			<fields>
				<field name="addAttachmentConfig" type="json">
					<value>
							{
								"predefinedTypes" : ["emf:Document","chc:Sample","emf:Image","emf:Audio","emf:Video","emf:Task","chc:ConservationActivity","emf:Project"],
								"selection" : "multiple",
								"relation" : ["emf:hasAttachment"]
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addThumbnail" group="add" />	
		<transition id="addWatchers" label="addWatchers.label" tooltip="addWatchers.tooltip" purpose="addRelation" group="add" >
			<fields>
				<field name="addWatcherConfig" type="json">
					<value>						
							{
								"predefinedTypes" : ["emf:User"],
								"selection" : "multiple",
								"relation" : ["emf:hasWatcher"],
								"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>

		<group id="exportAs" order="40" label="exportAs.group.label" type="menu" />
		<transition id="exportTabPDF" group="exportAs" />
		<transition id="exportTabWord" group="exportAs" />

		<group id="print" order="45" label="print.group.label" type="menu" />
		<transition id="printTab" group="print" />
		
		<group id="template" order="50" label="template.group.label" type="menu" />
		<transition id="saveAsTemplate" group="template" />
		<transition id="updateTemplate" label="updateTemplate.label" tooltip="core.updateTemplate.action.tooltip" purpose="updateTemplate" confirmation="confirmation.update_template" group="template" />
		<transition id="changeTemplate" label="changeTemplate.label" tooltip="core.changeTemplate.action.tooltip" purpose="changeTemplate" group="template" />
		
		<group id="more" order="55" label="more.group.label" type="menu" />
		<transition id="clone" confirmation="clone.confirm" group="more" />
		<transition id="lock" group="more" />
		<transition id="unlock" group="more" actionPath="/" />
		<transition id="managePermissions" group="more" />
		
		<transition id="delete" order="100" tooltip="core.delete.tooltip" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[
							var title = root.get('title');
							var subject = '(Deleted) Exhibition - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_delete_object_core", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
	</transitions>	 

	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="UPCOMING"/>
		<stateTransition from="INIT" transition="clone" to="UPCOMING"/>
		
		<stateTransition from="UPCOMING" transition="editDetails" to="UPCOMING"/>
		<stateTransition from="UPCOMING" transition="start" to="CURRENT"/>
		<stateTransition from="UPCOMING" transition="createDocument" to="UPCOMING"/>
		<stateTransition from="UPCOMING" transition="createConservationActivity" to="UPCOMING"/>
		<stateTransition from="UPCOMING" transition="createTask" to="UPCOMING"/>
		<stateTransition from="UPCOMING" transition="addCulturalObject" to="UPCOMING"/>
		<stateTransition from="UPCOMING" transition="addAttachment" to="UPCOMING" />
		<stateTransition from="UPCOMING" transition="addThumbnail" to="UPCOMING"/>	
		<stateTransition from="UPCOMING" transition="addWatchers" to="UPCOMING" />
		<stateTransition from="UPCOMING" transition="exportTabPDF" to="UPCOMING"/>
		<stateTransition from="UPCOMING" transition="exportTabWord" to="UPCOMING" />
		<stateTransition from="UPCOMING" transition="printTab" to="UPCOMING"/>
		<stateTransition from="UPCOMING" transition="saveAsTemplate" to="UPCOMING"/>	
		<stateTransition from="UPCOMING" transition="updateTemplate" to="UPCOMING"/>		
		<stateTransition from="UPCOMING" transition="changeTemplate" to="UPCOMING"/>
		<stateTransition from="UPCOMING" transition="clone" to="UPCOMING"/>
		<stateTransition from="UPCOMING" transition="lock" to="UPCOMING"/>
		<stateTransition from="UPCOMING" transition="unlock" to="UPCOMING"/>
		<stateTransition from="UPCOMING" transition="managePermissions" to="UPCOMING"/>
		<stateTransition from="UPCOMING" transition="delete" to="UPCOMING"/>
		<stateTransition from="UPCOMING" transition="createInContext" to="UPCOMING"/>
		
		<stateTransition from="CURRENT" transition="editDetails" to="CURRENT"/>
		<stateTransition from="CURRENT" transition="complete" to="PAST"/>
		<stateTransition from="CURRENT" transition="createDocument" to="CURRENT"/>
		<stateTransition from="CURRENT" transition="createConservationActivity" to="CURRENT"/>
		<stateTransition from="CURRENT" transition="createTask" to="CURRENT"/>
		<stateTransition from="CURRENT" transition="addCulturalObject" to="CURRENT"/>
		<stateTransition from="CURRENT" transition="addAttachment" to="CURRENT" />
		<stateTransition from="CURRENT" transition="addThumbnail" to="CURRENT"/>	
		<stateTransition from="CURRENT" transition="addWatchers" to="CURRENT" />
		<stateTransition from="CURRENT" transition="exportTabPDF" to="CURRENT"/>
		<stateTransition from="CURRENT" transition="exportTabWord" to="CURRENT" />
		<stateTransition from="CURRENT" transition="printTab" to="CURRENT"/>
		<stateTransition from="CURRENT" transition="saveAsTemplate" to="CURRENT"/>	
		<stateTransition from="CURRENT" transition="updateTemplate" to="CURRENT"/>		
		<stateTransition from="CURRENT" transition="changeTemplate" to="CURRENT"/>
		<stateTransition from="CURRENT" transition="clone" to="CURRENT"/>
		<stateTransition from="CURRENT" transition="lock" to="CURRENT"/>
		<stateTransition from="CURRENT" transition="unlock" to="CURRENT"/>
		<stateTransition from="CURRENT" transition="managePermissions" to="CURRENT"/>
		<stateTransition from="CURRENT" transition="delete" to="CURRENT"/>
		<stateTransition from="CURRENT" transition="createInContext" to="CURRENT"/>
	
		<stateTransition from="PAST" transition="exportTabPDF" to="PAST" />
		<stateTransition from="PAST" transition="exportTabWord" to="PAST" />
		<stateTransition from="PAST" transition="printTab" to="PAST" />
		<stateTransition from="PAST" transition="clone" to="PAST" />
		<stateTransition from="PAST" transition="managePermissions" to="PAST"/>
	</stateTransitions>

	<allowedChildren>
		<child type="project" id="all"/>
		<child type="object" id="coreConservationActivity"/>
		<child type="document" id="all"/>
		<child type="object" id="Sample"/>
		<child type="object" id="coreAudio"/>
		<child type="object" id="coreVideo"/>
		<child type="object" id="coreImage"/>
		<child type="task" id="all"/>
	</allowedChildren>
	
	<labels>
		<label id="EXHIBITION_TOOLTIP_HEADER_CORE">
    		<value lang="en"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							<span data-property="title">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
						<label>Status: </label>
						<span data-property="status">${CL([status])}</span>
					</span>
					${if(${get([chc:exhibitionVenue])}<>null).then(
						<span class="tooltip-row">
							<label>Venue: </label>
							<span data-property="chc:exhibitionVenue">${get([chc:exhibitionVenue])}</span>
						</span>
					)}
					${if(${get([chc:exhibitionOrganizer])}<>null).then(
						<span class="tooltip-row">
							<label>Organizer: </label>
							<span data-property="chc:exhibitionOrganizer">${get([chc:exhibitionOrganizer])}</span>
						</span>
					)}
					${if(${get([chc:exhibitionID])}<>null).then(
						<span class="tooltip-row">
							<label>Exhibition ID: </label>
							<span data-property="chc:exhibitionID">${get([chc:exhibitionID])}</span>
						</span>
					)}
					${if(${get([plannedStartDate])}<>null).then(
						<span class="tooltip-row">
							<label>Start date: </label>
							<span data-property="plannedStartDate">${date([plannedStartDate])}</span>
						</span>
					)}
					${if(${get([plannedEndDate])}<>null).then(
						<span class="tooltip-row">
							<label>End date: </label>
							<span data-property="plannedEndDate">${date([plannedEndDate])}</span>
						</span>
					)}
					<span class="tooltip-row">
						<label>System modified by: </label>
						<span data-property="modifiedBy">${objectProperty(${get([modifiedBy])})}</span>
					</span>
					<span class="tooltip-row">
						<label>System modified on: </label>
						<span data-property="modifiedOn">${date([modifiedOn])}</span>
					</span>
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>                      
						</span>
					)}	
				</span>
			)})}]]></value>
    	</label>
		<label id="EXHIBITION_DEFAULT_HEADER_CORE">
			<value lang="en">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(64)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<span data-property="type">${CL([type])}</span>&nbsp;
					(<span data-property="status">${CL([status])}</span>)
					<br>
					<span class="truncate-element">
						<b>
							<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
								<span data-property="title">${get([title])}</span>
							</a>
						</b>	
					</span>
					&nbsp;<span data-property="chc:exhibitionVenue">${get([chc:exhibitionVenue])}</span>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
				</span>
			)}]]></value>
		</label>
		<label id="EXHIBITION_COMPACT_HEADER_CORE">
			<value lang="en">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					<span class="truncate-element">
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
						<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}" style="vertical-align:baseline;">
							${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
							<span data-property="title">${get([title])}</span> 
						</a>&nbsp;
						${if(${get([status])} <> NEW).then((<span data-property="status">${CL([status])}</span>))}
						${if(${var.isVersion}).then(
							&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
						)}
					</span>
				</span>
			)}]]></value>
		</label>	
		<label id="EXHIBITION_BREADCRUMB_HEADER_CORE">
			<value lang="en">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						<span data-property="title">${get([title])}</span> 
					</a>
				</span>		
            )}]]></value>
		</label>		
	</labels>		
</definition>
