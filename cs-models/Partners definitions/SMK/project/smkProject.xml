<?xml version="1.0"?>
<definition id="smkProject" parentId="genericProject" type="project">
	<fields>
		<field name="default_header" type="ANY" label="PROJECT_DEFAULT_HEADER_SMK" />
		<field name="compact_header" type="an..4096" label="PROJECT_COMPACT_HEADER_SMK" />
		<field name="breadcrumb_header" type="an..4096" label="PROJECT_BREADCRUMB_HEADER_SMK" />
		<field name="tooltip_header" type="ANY" label="PROJECT_TOOLTIP_HEADER_SMK" />

		<field name="rdf:type" type="URI" displayType="system" uri="rdf:type" >
			<value>http://ittruse.ittbg.com/ontology/enterpriseManagementFramework#Project</value>
		</field>		

		<!-- system fieds -->
		<field name="identifier" type="an..50" displayType="system"/>
		<field name="description" type="an..1024" displayType="system"/>
		<field name="type" type="an..180" displayType="system" />
		<field name="title" type="an..50"  displayType="system" />
		<field name="status" type="an..50" displayType="system"/>
		<field name="priority" 	type="an..20" displayType="system"/>
		<field name="createdOn" type="datetime" displayType="system" />
		<field name="createdBy" type="uri" displayType="system"/>
		<field name="modifiedOn" type="datetime" displayType="system"/>
		<field name="modifiedBy" type="uri" displayType="system"/>
		<field name="hasParent" type="uri" displayType="system"/>
		<field name="hasThumbnail" type="uri" displayType="system"/>
		<field name="owner" type="uri" displayType="system"/>
		<field name="outcome" type="an..50" displayType="system"/>
		<field name="plannedStartDate" type="date" displayType="system"/>
		<field name="plannedEndDate"   type="date" displayType="system"/>
		<field name="actualStartDate" type="date" displayType="system"/>
		<field name="actualEndDate" type="date" displayType="system"/>
		<field name="actualEffortHours" type="n..10" displayType="system"/>
		<field name="accumulatedEstimatedEffortHours" displayType="system"/>
		<field name="accumulatedActualEffortHours" type="n..10" displayType="system"/>
		<field name="duration" type="n..10"  displayType="system"/>
		<field name="estimatedEffortHours" type="n..10" displayType="system"/>
		<field name="completedOn" type="datetime" displayType="system" />
		<field name="integrated" type="boolean" displayType="system" />
		<field name="uri" type="an..50" displayType="system" />
		<field name="partOf" type="uri" displayType="system" />
		<field name="emf:hasTemplate" type="uri" displayType="system" />
		<field name="lockedBy" type="uri" displayType="system" />
		<field name="emf:version" type="an..10" displayType="system" />
		<field name="emailAddress" type="an..255" displayType="system" />
		<field name="ownedBy" type="uri" displayType="system" />
		<field name="parentOf" type="uri" displayType="system" />
		<field name="hasChild" type="uri" displayType="system" />
		<field name="hasWatcher" type="uri" displayType="system" override="true"  />
	</fields>
	<regions>
		<region id="generalData" displayType="editable" order="10" label="smk.generalData.region.label">
			<fields>
				<field name="subType" type="an..180" mandatory="true" displayType="editable" codelist="CL2" label="smk.subType.label" tooltip="smk.subType.tooltip" uri="smk:subType" >
					<value>SMKPR001</value>
				</field>
				<field name="departmentName" type="an..180" mandatory="true" displayType="editable" codelist="CL245" multiValued="true" label="smk.departmentName.label" tooltip="smk.departmentName.tooltip" uri="emf:departmentName" >
					<control id="RELATED_FIELDS">
						<control-param type="default_value_pattern" id="template" name="template">$[emf:createdBy.department]</control-param>

						<control-param id="fieldsToRerender" name="RERENDER">activityPurpose</control-param>
						<control-param id="filterSource" name="FILTER_SOURCE">extra1</control-param>
						<control-param id="filterInclusive" name="INCLUSIVE">true</control-param>
					</control>
				</field>
				<field name="activityPurpose" type="an..180" mandatory="true" displayType="editable" codelist="CL241" label="smk.activityPurpose.label" tooltip="smk.activityPurpose.tooltip" uri="chc:activityPurpose" />
				<field name="title" type="an..1024" mandatory="true" displayType="editable" label="smk.title.label" tooltip="smk.title.tooltip" uri="dcterms:title" />
				<field name="description" type="an..1024" displayType="editable" label="smk.description.label" tooltip="smk.description.tooltip" previewEmpty="false" uri="dcterms:description" />
				<field name="assignee" type="uri" displayType="editable" label="smk.assignee.label" tooltip="smk.assignee.tooltip" mandatory="true" previewEmpty="false" uri="emf:hasAssignee">
					<condition id="readonlyField" renderAs="READONLY">[identifier] NOTIN ('NO_ID')</condition>
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
						<control-param id="restrictions" name="restrictions">
							{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						</control-param>
					</control>
					<value>${currentUser.id}</value>
				</field>
				<field name="hasParticipant" type="uri" displayType="editable" label="smk.hasParticipant.label" tooltip="smk.hasParticipant.tooltip" previewEmpty="false" multiValued="true" uri="ptop:hasParticipant">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User,emf:Group</control-param>
						<control-param id="restrictions" name="restrictions">
							{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						</control-param>
					</control>
				</field>
				<field name="priority" type="an..20" displayType="editable" codelist="CL29" label="smk.priority.label" tooltip="smk.priority.tooltip" previewEmpty="false" rnc="${to.dmsConvert(CL29,value,extra1)}|${from.dmsConvert(CL29,extra1,value)}" uri="emf:priority"><value>0006-000084</value></field>
				<field name="plannedStartDate" type="date" displayType="editable"  label="smk.plannedStartDate.label" tooltip="smk.plannedStartDate.tooltip"  previewEmpty="false" uri="emf:plannedStartDate" />
				<field name="actualStartDate"  type="date" displayType="editable" label="smk.actualStartDate.label" tooltip="smk.actualStartDate.tooltip" previewEmpty="false" uri="emf:actualStartDate" />
				<field name="plannedEndDate"   type="date" displayType="editable" label="smk.plannedEndDate.label"  tooltip="smk.plannedEndDate.tooltip" previewEmpty="false" uri="emf:plannedEndDate" />
				<field name="actualEndDate"    type="date" displayType="editable" label="smk.actualEndDate.label" tooltip="smk.actualEndDate.tooltip" previewEmpty="false" uri="emf:actualEndDate" />
			</fields>
		</region>
		<region id="systemData" order="20" displayType="editable" label="smk.systemData.region.label">
			<fields>
				<field name="type" type="an..50" displayType="readonly" codelist="CL7" label="smk.type.label" tooltip="smk.type.tooltip" uri="emf:type" ><value>FC236001</value></field>
				<field name="identifier" type="an..50" displayType="readOnly" label="smk.identifier.label" tooltip="smk.identifier.tooltip" rnc="${eval(PRJ${seq({+prjSequence})})}" uri="dcterms:identifier"/>
				<field name="status" type="an..50" displayType="readOnly" codelist="CL1" label="smk.status.label" tooltip="smk.status.tooltip" previewEmpty="false" uri="emf:status" >
					<condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('INIT')</condition>
				</field>
				<field name="emf:version" type="an..10" displayType="readOnly" label="smk.version.label" tooltip="smk.version.tooltip" uri="emf:version"/> 
				<field name="integrated" type="boolean" displayType="hidden" uri="emf:integrated"/>
				<!-- object properties (relationships) -->
				<field name="createdOn" type="dateTime" displayType="readOnly" label="smk.createdOn.label" tooltip="smk.createdOn.tooltip" uri="emf:createdOn" />
				<field name="createdBy" type="uri" displayType="readOnly" label="smk.createdBy.label" tooltip="smk.createdBy.tooltip" uri="emf:createdBy" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="modifiedOn" type="datetime" displayType="readOnly" label="smk.modifiedOn.label" tooltip="smk.modifiedOn.tooltip" previewEmpty="false" uri="emf:modifiedOn"/>
				<field name="modifiedBy" type="uri" displayType="readOnly" label="smk.modifiedBy.label" tooltip="smk.modifiedBy.tooltip" previewEmpty="false" uri="emf:modifiedBy">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="lockedBy" type="uri" displayType="readonly" label="smk.lockedBy.label" tooltip="smk.lockedBy.tooltip" previewEmpty="false">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>	
				<field name="hasThumbnail" type="uri" displayType="readOnly" label="smk.hasThumbnail.label" tooltip="smk.hasThumbnail.tooltip" previewEmpty="false" uri="emf:hasThumbnail" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Image</control-param>
					</control>
				</field>
				<field name="hasAttachment" type="uri" displayType="editable" label="smk.hasAttachment.label" tooltip="smk.hasAttachment.tooltip" multiValued="true" previewEmpty="false" uri="chc:hasAttachment" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,emf:Case,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,chc:Exhibition,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="attachmentOf" type="uri" displayType="editable" label="smk.attachmentOf.label" tooltip="smk.attachmentOf.tooltip" multiValued="true" previewEmpty="false" uri="chc:attachmentOf" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,emf:Case,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,chc:Exhibition,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="hasWatcher" type="uri" displayType="editable" label="smk.hasWatcher.label" tooltip="smk.hasWatcher.tooltip" multiValued="true" previewEmpty="false" uri="emf:hasWatcher" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
						<control-param id="restrictions" name="restrictions">
							{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						</control-param>
					</control>
				</field>
				<field name="parentOf" type="uri" displayType="readOnly" label="smk.parentOf.label" tooltip="smk.parentOf.tooltip" multiValued="true" previewEmpty="false" uri="emf:parentOf" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="hasParent" type="uri" displayType="readOnly" label="smk.hasParent.label" tooltip="smk.hasParent.tooltip" previewEmpty="false" uri="emf:hasParent" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="emf:hasTemplate" type="uri" label="smk.hasTemplate.label" tooltip="smk.hasTemplate.tooltip" displayType="readOnly" previewEmpty="true" uri="emf:hasTemplate" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Template</control-param>
					</control>
				</field>
				<field name="partOf" type="uri" displayType="readOnly" label="smk.partOf.label" tooltip="smk.partOf.tooltip"  multiValued="true" previewEmpty="false" uri="ptop:partOf" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="hasChild" type="uri" displayType="readOnly" label="smk.hasChild.label" tooltip="smk.hasChild.tooltip"  multiValued="true" previewEmpty="false" uri="emf:hasChild" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
			</fields>
		</region>
	</regions> 
	<transitions>	
		<transition id="create" eventId="create" purpose="create">
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[
							function includes(arr, k) {
                              return arr.indexOf(k) > -1;
                            }
							var subType = codelist.getDescription(2, root.get('subType'), 'da');
							var title = root.get('title');
							var subject = '(Ny arbejdsopgave) Projekt: ' + subType + " - " + title;

							//extract assignee, participants and createdBy
							var assignee = root.get('assignee');
							var participants = root.get('hasParticipant');
							var createdBy = root.get('createdBy');

							//add all users to recipients
							var recipients = [];
							var i = 0;
							 if(participants != null) {
							   for (i = 0; i < participants.length; i++) {
							   recipients.push(participants[i].toString());
							   }
							 }

							if(!includes(recipients, assignee.toString())){
								recipients.push(assignee.toString());
							}
							if(!includes(recipients, createdBy.toString())){
								recipients.push(createdBy.toString());
							}

							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_assignee_object_smk", recipients, context, null);
						]]>
					</value>
					<control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                    </control>
				</field>
			</fields>		
		</transition> 
	
		<transition id="editDetails" order="10" actionPath="/actions" />
		<transition id="reassign" order="15" label="reassign.label" tooltip="smk.reassign.tooltip" eventId="reassign" purpose="addRelation" confirmation="reassign.confirm" >
			<fields>
				<field name="attachToConfig" type="json">
					<value>
						{
						"predefinedTypes" : ["emf:User"],
						"selection" : "single",
						"relation" : ["emf:hasAssignee"],
						"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						}
					</value>
					<control id="configuration" />
				</field>
				<field name="beforeReasing" type="an..200" displayType="system" >
					<value>
						<![CDATA[
							//add to context old assignee
							context.put('previousAsignee', root.get('assignee'));
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">before</control-param>
						<control-param id="async" name="async">false</control-param>
					</control>
				</field>
				<field name="onAssignTask" type="an..200" displayType="system" >
					<value>
						<![CDATA[
							var subType = codelist.getDescription(2, root.get('subType'), 'da');
							var title = root.get('title');
							var subject = '(Overdraget) Projekt: ' + subType + ' - ' + title;
							
							//extract watchers
							var recipients = [];
							var watchers = root.get('hasWatcher');
							if(watchers != null){
								for(var i = 0; i < watchers.length; i++){
								log.info("Watch " + watchers[i].toString());
								recipients.push(watchers[i].toString());
								}
							}
							//extract assignee, createdBy and old assignee
							recipients.push(root.get('assignee').toString());
							recipients.push(root.get('createdBy').toString());
							recipients.push(context.get('previousAsignee'));
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_reassigned_object_smk", recipients, context, null);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="suspend" order="20" tooltip="smk.suspend.action.tooltip" confirmation="suspend.confirm" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[						
							var subType = codelist.getDescription(2, root.get('subType'), 'da');
							var title = root.get('title');
							var subject = '(Suspenderet) Projekt: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_suspend_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>		
		<transition id="restart" order="25" tooltip="smk.restart.action.tooltip" confirmation="restart.confirm" actionPath="/" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(2, root.get('subType'), 'da');
							var title = root.get('title');
							var subject = '(Genstarte) Projekt: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_restart_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="reopen" order="30" label="reopen.label" tooltip="smk.reopen.action.tooltip" eventId="reopen" purpose="transition" immediate="true" confirmation="reopen.confirm" actionPath="/" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(2, root.get('subType'), 'da');
							var title = root.get('title');
							var subject = '(Genåbnet) Projekt: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_reopen_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="complete" order="35" label="complete.label" tooltip="smk.complete.tooltip" eventId="complete" purpose="transition" immediate="true" confirmation="complete.confirm" actionPath="/" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(2, root.get('subType'), 'da');
							var title = root.get('title');
							var subject = '(Afsluttet) Projekt: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_complete_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		
		<group id="create" order="40" label="create.group.label" type="menu" />
		<transition id="createDocument" label="smk.createDocument.action.label" tooltip="smk.createDocument.action.tooltip" eventId="createDocument" purpose="createInstance" actionPath="/" group="create" >
      		<fields>
				<field name="createDocumentConfig" type="json">
					<value>
   						{ 
							"predefinedTypes" : ["emf:Document"],  
							"contextSelectorDisabled": true
    					}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		<transition id="createCase" label="smk.createCase.action.label" tooltip="smk.createCase.action.tooltip" eventId="createCase" purpose="createInstance" actionPath="/" group="create" >
      		<fields>
				<field name="createCaseConfig" type="json">
					<value>
						{ 
							"predefinedTypes" : ["emf:Case"],
							"contextSelectorDisabled": true
						}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		<transition id="createTask" label="smk.createTask.action.label" tooltip="smk.createSubTask.action.tooltip" eventId="createTask" purpose="createInstance" group="create" >
      		<fields>
				<field name="createTaskConfig" type="json">
					<value>
						{ 
							"predefinedTypes" : ["emf:Task"],
							"contextSelectorDisabled": true
						}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>		
		
		<group id="add" order="45" label="add.group.label" type="menu" />		
		<transition id="addAttachment" label="smk.addAttachment.action.label"  tooltip="smk.addAttachment.action.tooltip" eventId="addAttachment" purpose="addRelation" actionPath="/"  group="add" >
			<fields>
				<field name="addAttachmentConfig" type="json">
					<value>
							{
								"predefinedTypes" : ["emf:Project","emf:Case","emf:Document","emf:Task","chc:CulturalObject","emf:Image","emf:Audio","emf:Video","chc:Sample","chc:Exhibition","emf:BusinessProcess"],
								"selection" : "multiple",
								"relation" : ["chc:hasAttachment"]
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addThumbnail" group="add" />	
		<transition id="addWatchers" label="addWatchers.label" tooltip="addWatchers.tooltip" eventId="addWatchers" purpose="addRelation" group="add" >
			<fields>
				<field name="addWatcherConfig" type="json">
					<value>						
							{
								"predefinedTypes" : ["emf:User"],
								"selection" : "multiple",
								"relation" : ["emf:hasWatcher"],
								"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>

		<group id="exportAs" order="50" label="exportAs.group.label" type="menu" />
		<transition id="exportTabPDF" group="exportAs" />
		<transition id="exportPDF" group="exportAs" />
		<transition id="exportTabWord" group="exportAs" />
		<transition id="exportWord" group="exportAs" />

		<group id="print" order="55" label="print.group.label" type="menu" />
		<transition id="printTab" group="print" />
		<transition id="print" group="print" />
		
		<group id="template" order="56" label="template.group.label" type="menu" />
		<transition id="saveAsTemplate" group="template" />
		<transition id="updateTemplate" label="updateTemplate.label" tooltip="smk.updateTemplate.action.tooltip" eventId="updateTemplate" purpose="updateTemplate" confirmation="confirmation.update_template" group="template" />
		<transition id="changeTemplate" label="changeTemplate.label" tooltip="smk.changeTemplate.action.tooltip" eventId="changeTemplate" purpose="changeTemplate" group="template" />
		
		<group id="more" order="60" label="more.group.label" type="menu" />
		<transition id="move" confirmation="move.confirm" group="more" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(2, root.get('subType'), 'da');
							var title = root.get('title');
							var subject = '(Flyttet) Projekt: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_move_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="clone" confirmation="clone.confirm" group="more" />
		<transition id="lock" group="more" />
		<transition id="unlock" group="more" />
		<transition id="managePermissions" group="more" />
		
		<transition id="delete" order="65" tooltip="smk.delete.tooltip" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[	
							var subType = codelist.getDescription(2, root.get('subType'), 'da');
							var title = root.get('title');
							var subject = '(Slettet) Projekt: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_delete_object_smk", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
	</transitions>	 

	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="IN_PROGRESS"/>
		<stateTransition from="INIT" transition="clone" to="IN_PROGRESS"/>
		
		<stateTransition from="IN_PROGRESS" transition="editDetails" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="suspend" to="ON_HOLD"/>
		<stateTransition from="IN_PROGRESS" transition="complete" to="COMPLETED"/>		
		<stateTransition from="IN_PROGRESS" transition="reassign" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="addAttachment" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="addThumbnail" to="IN_PROGRESS"/>	
		<stateTransition from="IN_PROGRESS" transition="addWatchers" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="createDocument" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="print" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="printTab" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="exportTabPDF" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="exportPDF" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="exportWord" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportTabWord" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="move" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="clone" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="lock" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="unlock" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="saveAsTemplate" to="IN_PROGRESS"/>	
		<stateTransition from="IN_PROGRESS" transition="changeTemplate" to="IN_PROGRESS"/>		
		<stateTransition from="IN_PROGRESS" transition="updateTemplate" to="IN_PROGRESS"/>		
		<stateTransition from="IN_PROGRESS" transition="managePermissions" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="createCase" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="createTask" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="createInContext" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="delete" to="IN_PROGRESS"/>

		<!-- on hold-->
		<stateTransition from="ON_HOLD" transition="editDetails" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="restart" to="IN_PROGRESS" />
		<stateTransition from="ON_HOLD" transition="reassign" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="addAttachment" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="addThumbnail" to="ON_HOLD" />	
		<stateTransition from="ON_HOLD" transition="addWatchers" to="ON_HOLD"/> 
		<stateTransition from="ON_HOLD" transition="print" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="printTab" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="exportTabPDF" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="exportPDF" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="exportWord" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="exportTabWord" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="move" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="clone" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="lock" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="unlock" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="managePermissions" to="ON_HOLD" />	
		<stateTransition from="ON_HOLD" transition="createDocument" to="ON_HOLD" />	
		<stateTransition from="ON_HOLD" transition="createCase" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="createTask" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="createInContext" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="saveAsTemplate" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="changeTemplate" to="ON_HOLD"/>		
		<stateTransition from="ON_HOLD" transition="updateTemplate" to="ON_HOLD"/>		

		<stateTransition from="COMPLETED" transition="reopen" to="IN_PROGRESS" />
		<stateTransition from="COMPLETED" transition="print" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="printTab" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportTabPDF" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportPDF" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportWord" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportTabWord" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="clone" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="managePermissions" to="COMPLETED"/>
	</stateTransitions>

	<allowedChildren>
		<child type="case" id="all"/>
		<child type="document" id="all"/>
		<child type="object" id="SMKSAMPLE"/>
		<child type="object" id="smkAudio"/>
		<child type="object" id="smkVideo"/>
		<child type="object" id="smkImage"/>
		<child type="task" id="all"/>
		<child type="object" id="DataImportSource"/>
	</allowedChildren>
	
	<labels>
		<label id="PROJECT_TOOLTIP_HEADER_SMK">
    		<value lang="en"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							<span data-property="title">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
						<label>Sub-type: </label>
						<span data-property="subType">${CL([subType])}</span>
					</span>
					<span class="tooltip-row">
                        <label>Department: </label>
                        <span data-property="departmentName">${CL([departmentName])}</span>
                    </span>
					<span class="tooltip-row">
						<label>Purpose: </label>
						<span data-property="activityPurpose">${CL([activityPurpose])}</span>
					</span>
					<span class="tooltip-row">
						<label>Status: </label>
						<span data-property="status">${CL([status])}</span>
					</span>
					${if(${get([plannedStartDate])}<>null).then(
					<span class="tooltip-row">
                        <label>Planned start date: </label>
                        <span data-property="plannedStartDate">${date([plannedStartDate]).format(dd.MM.yyyy)}</span>
                    </span>
					)}
					${if(${get([plannedEndDate])}<>null).then(
					<span class="tooltip-row">
                        <label>Planned end date: </label>
                        <span data-property="plannedEndDate">${date([plannedEndDate]).format(dd.MM.yyyy)}</span>
                    </span>
					)}
					${if(${get([estimatedEffortHours])}<>null).then(
					<span class="tooltip-row">
                        <label>Estimated effort hours: </label>
                        <span data-property="estimatedEffortHours">${get([estimatedEffortHours])}</span>
                    </span>
					)}
					<span class="tooltip-row">
						<label>System modified by: </label>
						<span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
					</span>
					<span class="tooltip-row">
						<label>System modified on: </label>
						<span data-property="modifiedOn">${date([modifiedOn]).format(dd.MM.yyyy, HH:mm)}</span>
					</span>
				</span>
			)})}]]></value>
    		<value lang="da"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							<span data-property="title">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
						<label>Undertype: </label>
						<span data-property="subType">${CL([subType])}</span>
					</span>
					<span class="tooltip-row">
                        <label>Afdeling/enhed: </label>
                        <span data-property="departmentName">${CL([departmentName])}</span>
                    </span>
					<span class="tooltip-row">
						<label>Formål: </label>
						<span data-property="activityPurpose">${CL([activityPurpose])}</span>
					</span>
					<span class="tooltip-row">
						<label>Status: </label>
						<span data-property="status">${CL([status])}</span>
					</span>
					${if(${get([plannedStartDate])}<>null).then(
					<span class="tooltip-row">
                        <label>Planlagt startdato: </label>
                        <span data-property="plannedStartDate">${date([plannedStartDate]).format(dd.MM.yyyy)}</span>
                    </span>
					)}
					${if(${get([plannedEndDate])}<>null).then(
					<span class="tooltip-row">
                        <label>Planlagt slutdato: </label>
                        <span data-property="plannedEndDate">${date([plannedEndDate]).format(dd.MM.yyyy)}</span>
                    </span>
					)}
					${if(${get([estimatedEffortHours])}<>null).then(
					<span class="tooltip-row">
                        <label>Estimeret timeforbrug: </label>
                        <span data-property="estimatedEffortHours">${get([estimatedEffortHours])}</span>
                    </span>
					)}
					<span class="tooltip-row">
						<label>Opdateret af: </label>
						<span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
					</span>
					<span class="tooltip-row">
						<label>Opdateret: </label>
						<span data-property="modifiedOn">${date([modifiedOn]).format(dd.MM.yyyy, HH:mm)}</span>
					</span>
				</span>
			)})}]]></value>
    	</label>
		<label id="PROJECT_DEFAULT_HEADER_SMK">
			<value lang="en">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(64)}"/></span>
				<span>
					<span class="truncate-element">
						<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
							<span data-property="title">${get([title])}</span>
						</a>&nbsp;
						(<span data-property="status">${CL([status])}</span>)
					</span>
					<br />
					<span data-property="type">${CL([type])}</span>:&nbsp;
					<span data-property="subType">${CL([subType])}</span>&nbsp;-&nbsp;
					<span data-property="activityPurpose">${CL([activityPurpose])}</span>,&nbsp;
					Department:&nbsp;<span data-property="departmentName">${CL([departmentName])}</span>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
					${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}		
				</span>
			)}]]></value>
			<value lang="da">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(64)}"/></span>
				<span>
					<span class="truncate-element">
						<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
							<span data-property="title">${get([title])}</span>
						</a>&nbsp;
						(<span data-property="status">${CL([status])}</span>)
					</span>
					<br />
					<span data-property="type">${CL([type])}</span>:&nbsp;
					<span data-property="subType">${CL([subType])}</span>&nbsp;-&nbsp;
					<span data-property="activityPurpose">${CL([activityPurpose])}</span>,&nbsp;
					Afdeling/enhed:&nbsp;<span data-property="departmentName">${CL([departmentName])}</span>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
					${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}		
				</span>
			)}]]></value>
		</label>
		<label id="PROJECT_COMPACT_HEADER_SMK">
			<value lang="en">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					<span class="truncate-element">
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
						<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}" style="vertical-align:baseline;">
							${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
							<span data-property="title">${get([title])}</span> 
						</a>&nbsp;
						<span data-property="activityPurpose">${CL([activityPurpose])}</span>&nbsp;
						${if(${get([status])} <> NEW).then((<span data-property="status">${CL([status])}</span>))}
						${if(${var.isVersion}).then(
							&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
						)}
					</span>
				</span>
			)}]]></value>
			<value lang="da">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					<span class="truncate-element">
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
						<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}" style="vertical-align:baseline;">
							${if(${get([emf:isDeleted])} == true).then(<span>(Slettet)</span>&nbsp;)}
							<span data-property="title">${get([title])}</span> 
						</a>&nbsp;
						<span data-property="activityPurpose">${CL([activityPurpose])}</span>&nbsp;
						${if(${get([status])} <> NEW).then((<span data-property="status">${CL([status])}</span>))}
						${if(${var.isVersion}).then(
							&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
						)}
					</span>
				</span>
			)}]]></value>
		</label>	
		<label id="PROJECT_BREADCRUMB_HEADER_SMK">
			<value lang="en">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						<span data-property="title">${get([title])}</span> 
					</a>
				</span>		
            )}]]></value>
			<value lang="da">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						${if(${get([emf:isDeleted])} == true).then(<span>(Slettet)</span>&nbsp;)}
						<span data-property="title">${get([title])}</span> 
					</a>
				</span>		
            )}]]></value>
		</label>		
	</labels>		
</definition>
