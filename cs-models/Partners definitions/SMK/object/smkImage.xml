<?xml version="1.0"?>
<definition id="smkImage" parentId="baseImage" type="object">
	<fields>
		<field name="default_header" type="ANY" label="IMAGE_DEFAULT_HEADER_SMK" />
		<field name="compact_header" type="ANY" label="IMAGE_COMPACT_HEADER_SMK" />
		<field name="breadcrumb_header" type="ANY" label="IMAGE_BREADCRUMB_HEADER_SMK" />
		<field name="tooltip_header" type="ANY" label="IMAGE_TOOLTIP_HEADER_SMK" />

		<!-- all properties from the generic definition will be organized in regions --> 
		<field name="outcome" displayType="system" />
		<field name="completedOn" displayType="system" />
		<field name="uri" displayType="system" />
		<field name="hasRevision" displayType="system" />
		<field name="isRevisionOf" displayType="system" />
		<field name="lastPublishedRevision" displayType="system" />
		<field name="lastRevision" displayType="system" />
		<field name="nextRevision" displayType="system" />
		<field name="previousRevision" displayType="system" />
	</fields>	
	<regions>	
		<region id="generalData" displayType="editable" order="10" label="smk.generalData.region.label">
			<fields>
				<field name="subType" type="ANY" displayType="editable" codelist="CL211" label="smk.subType.label" tooltip="smk.subType.tooltip" mandatory="true" previewEmpty="false" uri="smk:subType" >
					<condition id="readOnlyField" renderAs="READONLY">[integrated] IN ('true')</condition>
				</field>	
				<field name="title" type="an..1000" tooltip="smk.title.tooltip" >
					<control id="DEFAULT_VALUE_PATTERN">
						<control-param type="default_value_pattern" id="template" name="template">$[chc:depicts.objectId]/$[emf:createdOn]/$[smk:subType]</control-param>
					</control>
					<condition id="readOnlyField" renderAs="READONLY">[integrated] IN ('true')</condition>
				</field>
				<field name="description" displayType="editable" tooltip="smk.description.tooltip" >
					<condition id="readOnlyField" renderAs="READONLY">[integrated] IN ('true')</condition>
				</field>
				<field name="widthOfSubject" tooltip="smk.widthOfSubject.tooltip" previewEmpty="false" >
					<condition id="readOnlyField" renderAs="READONLY">[integrated] IN ('true')</condition>
				</field>
				<field name="heightOfSubject" label="smk.heightOfSubject.label" tooltip="smk.heightOfSubject.tooltip" previewEmpty="false" >
					<condition id="readOnlyField" renderAs="READONLY">[integrated] IN ('true')</condition>
				</field>
				<field name="dimensionUnit" label="smk.dimensionUnit.label" tooltip="smk.dimensionUnit.tooltip" previewEmpty="false" >
					<condition id="readOnlyField" renderAs="READONLY">[integrated] IN ('true')</condition>
				</field>
			</fields>
		</region>
		<region id="systemData" displayType="editable" order="20" label="smk.systemData.region.label">
			<fields>
				<field name="type" tooltip="smk.type.tooltip" ><value>FC236009</value></field>
				<field name="identifier" tooltip="smk.identifier.tooltip" rnc="${eval(IMG${seq({+imgSequence})})}" />
				<field name="name" tooltip="smk.name.tooltip" />
				<field name="mimetype" />
				<field name="size" label="smk.size.label" tooltip="smk.size.tooltip" />
				<field name="status" codelist="CL114" tooltip="smk.status.tooltip" />
				<field name="emf:version" tooltip="smk.version.tooltip" /> 
				<field name="integrated" type="boolean" displayType="hidden" uri="emf:integrated">
					<value>false</value>
				</field>
				<!-- specific integration fields -->
				<field name="sourceSystemId" type="ANY" displayType="readOnly" codelist="CL250" label="smk.sourceSystemId.label" tooltip="smk.sourceSystemId.tooltip" uri="chc:sourceSystemId" >
					<value>SMKSR25001</value>
				</field>
				<field name="objectId" type="an..50" mandatory="false" displayType="hidden" label="smk.objectId.label" tooltip="smk.objectId.tooltip" previewEmpty="false" uri="emf:externalID" >
					<condition id="readonlyFields" renderAs="READONLY">[integrated] IN ('true')</condition>
					<condition id="optionalField" renderAs="MANDATORY">[integrated] IN ('true')</condition>
				</field>
				<field name="externalCreatedOn" type="dateTime" displayType="hidden" label="smk.externalCreatedOn.label" tooltip="smk.externalCreatedOn.tooltip" previewEmpty="false" uri="chc:externalCreatedOn" >
					<condition id="readonlyFields" renderAs="READONLY">[integrated] IN ('true')</condition>
				</field>
				<field name="references" type="an..1200" displayType="system" label="smk.reference.label"  />
				<field name="integratedSystemId" type="an..1024" displayType="system" uri="chc:integratedSystemId"/>
				<field name="fingerprint" type="an..120" displayType="system" label="smk.fingerprint.label"  uri="chc:fingerprint" />
				
				<!-- object properties (relationships) -->
				<field name="createdOn" tooltip="smk.createdOn.tooltip" />
				<field name="createdBy" tooltip="smk.createdBy.tooltip" />
				<field name="modifiedOn" label="smk.modifiedOn.label" tooltip="smk.modifiedOn.tooltip" />
				<field name="modifiedBy" label="smk.modifiedBy.label" tooltip="smk.modifiedBy.tooltip" />
				<field name="lockedBy" tooltip="smk.lockedBy.tooltip" />
				<field name="isPrimaryImageOf" type="uri" displayType="editable" label="smk.isPrimaryImageOf.label" tooltip="smk.isPrimaryImageOf.tooltip" multiValued="true" previewEmpty="false" uri="emf:isPrimaryImageOf" >
					<control id="PICKER">
						<control-param id="range" name="range">chc:CulturalObject</control-param></control>
				</field>
				<field name="depicts" type="uri" displayType="editable" label="smk.depicts.label" tooltip="smk.depicts.tooltip" multiValued="true" previewEmpty="false" uri="chc:depicts" >
					<control id="PICKER">
						<control-param id="range" name="range">chc:CulturalObject,chc:Sample</control-param>
					</control>
					<condition id="mandatoryFields" renderAs="MANDATORY">[subType] NOTIN ('SMKIT211007')</condition>
					<condition id="readOnlyFields" renderAs="READONLY">[integrated] IN ('true')</condition>
				</field>
				
				<field name="hasThumbnail" label="smk.hasThumbnail.label" tooltip="smk.hasThumbnail.tooltip" />
				<field name="hasAttachment" type="uri" displayType="editable" label="smk.hasAttachment.label" multiValued="true" previewEmpty="false" uri="chc:hasAttachment" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,emf:Case,chc:Exhibition,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="attachmentOf" type="uri" displayType="editable" label="smk.attachmentOf.label" multiValued="true" previewEmpty="false" uri="chc:attachmentOf" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,chc:CulturalObject,chc:Sample,emf:Task,emf:Project,emf:Case,chc:Exhibition,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="hasWatcher" label="smk.hasWatcher.label" tooltip="smk.hasWatcher.tooltip" />
				<field name="isThumbnailOf" displayType="readOnly" label="smk.isThumbnailOf.label" tooltip="smk.isThumbnailOf.tooltip" />
				<field name="parentOf" tooltip="smk.parentOf.tooltip" previewEmpty="false" />
				<field name="hasParent" tooltip="smk.hasParent.tooltip" />
				<field name="emf:hasTemplate" label="smk.hasTemplate.label" tooltip="smk.hasTemplate.tooltip" />
				<field name="partOf" displayType="readonly" tooltip="smk.partOf.tooltip" />
				<field name="hasChild" tooltip="smk.hasChild.tooltip" previewEmpty="false" />
			</fields>
		</region>
	</regions>
	<transitions>	
		<transition id="editDetails" order="10" actionPath="/actions" />
		<transition id="uploadNewVersion" order="15" />
		
		<group id="add" order="20" label="add.group.label" type="menu" />	
		<transition id="addAttachment" label="smk.addAttachment.action.label"  tooltip="smk.addAttachment.action.tooltip" purpose="addRelation" group="add" >
			<fields>
				<field name="addAttachmentConfig" type="json">
					<value>
							{
								"predefinedTypes" : ["emf:Project","emf:Case","emf:Document","emf:Task","chc:CulturalObject","emf:Image","emf:Audio","emf:Video","chc:Sample","chc:Exhibition","emf:BusinessProcess"],
								"selection" : "multiple",
								"relation" : ["chc:hasAttachment"]
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addThumbnail" group="add" />	
		<transition id="addWatchers" label="addWatchers.label" tooltip="addWatchers.tooltip" purpose="addRelation" group="add" >
			<fields>
				<field name="addWatcherConfig" type="json">
					<value>						
							{
								"predefinedTypes" : ["emf:User"],
								"selection" : "multiple",
								"relation" : ["emf:hasWatcher"],
								"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		
		<transition id="download" order="25" actionPath="/" />
		
		<group id="exportAs" order="30" label="exportAs.group.label" type="menu" />
		<transition id="exportTabPDF" group="exportAs" />
		<transition id="exportPDF" group="exportAs" />
		<transition id="exportTabWord" group="exportAs" />
		<transition id="exportWord" group="exportAs" />
		
		<group id="print" order="35" label="print.group.label" type="menu" />
		<transition id="print" group="print" />
		<transition id="printTab" group="print" />
		
		<group id="template" order="36" label="template.group.label" type="menu" />
		<transition id="saveAsTemplate" group="template" />	
		<transition id="updateTemplate" tooltip="smk.updateTemplate.action.tooltip" group="template" />
		<transition id="changeTemplate" tooltip="smk.changeTemplate.action.tooltip" group="template" />
		
		<group id="more" order="40" label="more.group.label" type="menu" />
		<transition id="move" confirmation="move.confirm" group="more" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[	
							var subType = codelist.getDescription(211, root.get('subType'), 'da');
							var title = root.get('title');
							var subject = '(Flyttet) Image: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_move_object_smk", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                    </control>
                </field>
			</fields>
		</transition>
		<transition id="clone" confirmation="clone.confirm" group="more" />
		<transition id="lock" group="more" />
		<transition id="unlock" group="more" />
		<transition id="managePermissions" group="more" />
		
		<transition id="delete" order="45" tooltip="smk.delete.tooltip" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[	
							var subType = codelist.getDescription(211, root.get('subType'), 'da');
							var title = root.get('title');
							var subject = '(Slettet) Image: ' + subType + ' - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_delete_object_smk", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
	</transitions>
	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="DRAFT"/>
		<stateTransition from="INIT" transition="clone" to="DRAFT"/>

		<stateTransition from="DRAFT" transition="editDetails" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="uploadNewVersion" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="addAttachment" to="DRAFT" />
		<stateTransition from="DRAFT" transition="addThumbnail" to="DRAFT" />
		<stateTransition from="DRAFT" transition="addWatchers" to="DRAFT" />
		<stateTransition from="DRAFT" transition="print" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="printTab" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="exportPDF" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="exportTabPDF" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="exportWord" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="exportTabWord" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="download" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="clone" to="DRAFT"/>	
		<stateTransition from="DRAFT" transition="move" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="lock" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="unlock" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="saveAsTemplate" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="changeTemplate" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="updateTemplate" to="DRAFT"/>
		<stateTransition from="DRAFT" transition="managePermissions" to="DRAFT" />
		<stateTransition from="DRAFT" transition="createInContext" to="DRAFT" />
		<stateTransition from="DRAFT" transition="delete" to="DRAFT"/>
	</stateTransitions>
	
	<allowedChildren>
		<child type="document" id="all"/>
	</allowedChildren>
	
	<labels>
		<label id="IMAGE_TOOLTIP_HEADER_SMK">
			<value lang="en">
				<![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							 <span data-title="${get([title])}">${get([title])}
						</a>
					</span>
					<span class="tooltip-row">
						<label>Type: </label>
						<span data-property="type">${CL([type])}</span>
					</span>
					<span class="tooltip-row">
						<label>Version: </label>
						<span data-property="emf:version">${get([emf:version])}</span>
					</span>
					<span class="tooltip-row">
						<label>System modified by: </label>
						<span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
					</span>
					<span class="tooltip-row">
						<label>System modified on: </label>
						<span data-property="modifiedOn">${date([modifiedOn])}</span>
					</span>
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>                      
						</span>
					)}
			</span>)})}]]></value>
			<value lang="da">
				<![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							 <span data-title="${get([title])}">${get([title])}
						</a>
					</span>
					<span class="tooltip-row">
						<label>Type: </label>
						<span data-property="type">${CL([type])}</span>
					</span>
					<span class="tooltip-row">
						<label>Version: </label>
						<span data-property="emf:version">${get([emf:version])}</span>
					</span>
					<span class="tooltip-row">
						<label>Opdateret af: </label>
						<span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
					</span>
					<span class="tooltip-row">
						<label>Opdateret: </label>
						<span data-property="modifiedOn">${date([modifiedOn])}</span>
					</span>
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>                      
						</span>
					)}
			</span>)})}]]></value>
		</label>	
		<label id="IMAGE_DEFAULT_HEADER_SMK">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(64)}"/></span>
				<span>
					<span class="truncate-element">
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
						<b>
							<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
								${if(${get([title])}<>${get([name])}).then(<span data-property="title">${get([title])}</span>&nbsp;/&nbsp;)}
								<span data-property="name">${get([name])}</span>
							</a>
						</b>	
					</span>
					<br />
					<span data-property="type">${CL([type])}</span>:&nbsp;
					<span data-property="subType">${CL([subType])}</span>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
					${if(${get([isPrimaryImageOf])}<>null).then(<br />Primary&nbsp;image&nbsp;of:<span data-property="isPrimaryImageOf">${objectProperty(${get([isPrimaryImageOf])})}</span>)}
					${if(${get([depicts])}<>null).then(<br />Depicts:&nbsp;<span data-property="depicts">${objectProperty(${get([depicts])})}</span>)}	
				</span>
			)}]]></value>
			<value lang="da"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(64)}"/></span>
				<span>
					<span class="truncate-element">
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
						<b>
							<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
								${if(${get([title])}<>${get([name])}).then(<span data-property="title">${get([title])}</span>&nbsp;/&nbsp;)}
								<span data-property="name">${get([name])}</span>
							</a>
						</b>	
					</span>
					<br />
					<span data-property="type">${CL([type])}</span>:&nbsp;
					<span data-property="subType">${CL([subType])}</span>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
					${if(${get([isPrimaryImageOf])}<>null).then(<br />Primært&nbsp;billede&nbsp;af:<span data-property="isPrimaryImageOf">${objectProperty(${get([isPrimaryImageOf])})}</span>)}
					${if(${get([depicts])}<>null).then(<br />Afbilder:&nbsp;<span data-property="depicts">${objectProperty(${get([depicts])})}</span>)}	
				</span>
			)}]]></value>
		</label>

		<label id="IMAGE_COMPACT_HEADER_SMK">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(16)}"/></span>
				<span class="truncate-element">
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}" style="vertical-align:baseline;">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						${if(${get([title])}<>${get([name])}).then(<span data-property="title">${get([title])}</span>&nbsp;/&nbsp;)}
						<span data-property="name">${get([name])}</span>
					</a>&nbsp;
					<span data-property="subType">${CL([subType])}</span>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
				</span>
			)}]]></value>
			<value lang="da"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(16)}"/></span>
				<span class="truncate-element">
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}" style="vertical-align:baseline;">
						${if(${get([emf:isDeleted])} == true).then(<span>(Slettet)</span>&nbsp;)}
						${if(${get([title])}<>${get([name])}).then(<span data-property="title">${get([title])}</span>&nbsp;/&nbsp;)}
						<span data-property="name">${get([name])}</span>
					</a>&nbsp;
					<span data-property="subType">${CL([subType])}</span>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
				</span>
			)}]]></value>
		</label>
		<label id="IMAGE_BREADCRUMB_HEADER_SMK">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						<span data-property="name">${get([name])}</span>
					</a>
				</span>		
            )}]]></value>
			<value lang="da"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						${if(${get([emf:isDeleted])} == true).then(<span>(Slettet)</span>&nbsp;)}
						<span data-property="name">${get([name])}</span>
					</a>
				</span>		
            )}]]></value>
		</label>		
	</labels>
</definition>