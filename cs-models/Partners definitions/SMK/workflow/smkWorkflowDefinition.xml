<?xml version="1.0" encoding="UTF-8"?>
<definition id="smkWorkflow" parentId="baseWorkflow" isAbstract="true" type="workflow">
	<fields>
		<!-- headers and tooltip -->
		<field name="default_header" type="ANY" label="WORKFLOW_DEFAULT_HEADER_SMK" />
		<field name="compact_header" type="ANY" label="WORKFLOW_COMPACT_HEADER_SMK" />
		<field name="breadcrumb_header" type="ANY" label="WORKFLOW_BREADCRUMB_HEADER_SMK" />
		<field name="tooltip_header" type="ANY" label="WORKFLOW_TOOLTIP_HEADER_SMK" />

		<field name="title" type="an..1024" mandatory="false" displayType="system" >
			<control id="DEFAULT_VALUE_PATTERN">
				<control-param type="default_value_pattern" id="template" name="template">$[emf:type]</control-param>
			</control>
		</field>
	</fields>
	<regions>
		<region id="generalWorkflowInformation" order="10" displayType="editable" label="smkWorkflow.generalWorkflowInformation.region.label">
			<fields>
				<field name="type" order="110" codelist="CL7" tooltip="smk.type.tooltip" >
					<value>FC236004</value>
				</field>
				<field name="department" type="ANY" mandatory="true" codelist="CL245" order="111" label="smk.departmentName.label" tooltip="smk.department.tooltip" multiValued="true" displayType="editable" previewEmpty="false" uri="emf:departmentName" >
					 <control id="DEFAULT_VALUE_PATTERN">
						<control-param type="default_value_pattern" id="template" name="template">$[emf:createdBy.department]</control-param>
					</control>
				</field>	
				<field name="description" type="an..1000" order="112" tooltip="smk.description.tooltip" previewEmpty="false" />
				<field name="priority" order="116" tooltip="smk.priority.tooltip" >
					<value>0006-000084</value>
				</field>
				<field name="plannedStartDate" order="117" tooltip="smk.plannedStartDate.tooltip" >
					<condition id="readonlyField" renderAs="READONLY">[status] IN ('IN_PROGRESS')</condition>
				</field>
				<field name="plannedEndDate" type="date" order="118" tooltip="smk.plannedEndDate.tooltip" previewEmpty="false" >
					<condition id="readonlyField" renderAs="READONLY">[status] IN ('IN_PROGRESS')</condition>
				</field>
				<field name="stopReason" order="119" displayType="hidden" label="smk.stopReason.label" tooltip="smk.stopReason.tooltip" previewEmpty="false" />
			</fields>
		</region>
		<region id="systemData" order="30" label="smk.systemData.region.label">
			<fields>
				<field name="identifier" order="300" tooltip="smk.identifier.tooltip" rnc="${eval(WF${seq({+wfSequence})})}" />
				<field name="status" order="305" tooltip="smk.status.tooltip" />
				<field name="emf:version" order="310" tooltip="smk.version.tooltip" />
				<field name="integrated" type="boolean" displayType="hidden" order="311" uri="emf:integrated"/>
				<field name="createdOn" order="315" tooltip="smk.createdOn.tooltip" />
				<field name="createdBy" order="320" tooltip="smk.createdBy.tooltip" />
				<field name="modifiedOn" order="325" label="smk.modifiedOn.label" tooltip="smk.modifiedOn.tooltip" />
				<field name="modifiedBy" order="330" label="smk.modifiedBy.label" tooltip="smk.modifiedBy.tooltip" />
				<field name="lockedBy" tooltip="smk.lockedBy.tooltip" />
			</fields>
		</region>
		<region id="smkActivityDefinitionRelationships" order="40" displayType="editable" label="smk.relationships.region.label">
			<fields>
				<field name="attachmentOf" type="uri" label="smk.attachmentOf.label" displayType="editable" multiValued="true" order="400" previewEmpty="false" uri="chc:attachmentOf" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Project,chc:ConservationActivity,emf:Document,emf:Media,emf:Task,chc:CulturalObject,emf:Image,emf:Audio,emf:Video,chc:Sample,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="hasAttachment" type="uri" label="smk.hasAttachment.label" displayType="editable" multiValued="true" order="402" previewEmpty="false" uri="chc:hasAttachment" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Project,chc:ConservationActivity,emf:Document,emf:Media,emf:Task,chc:CulturalObject,emf:Image,emf:Audio,emf:Video,chc:Sample,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="hasWatcher" label="smk.hasWatcher.label" tooltip="smk.hasWatcher.tooltip" order="404" previewEmpty="false" />
				<field name="hasThumbnail" label="smk.hasThumbnail.label" tooltip="smk.hasThumbnail.tooltip" order="406" />
				<field name="parentOf" tooltip="smk.parentOf.tooltip" order="408" previewEmpty="false" />
				<field name="hasParent" order="410" tooltip="smk.hasParent.tooltip" />
				<field name="emf:hasTemplate" order="415" label="smk.hasTemplate.label" tooltip="smk.hasTemplate.tooltip" />
				<field name="partOf" displayType="readonly" order="420" tooltip="smk.partOf.tooltip" />
				<field name="hasChild" order="450" tooltip="smk.hasChild.tooltip" previewEmpty="false" />
			</fields>
		</region>
	</regions>
	<transitions>
		<transition id="editDetails" order="10" actionPath="/actions" />
		<transition id="start" order="15" label="start.label" tooltip="smk.start.wf.action.tooltip" purpose="bpmStart" actionPath="/" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var type = codelist.getDescription(10, root.get('type'), 'da');
							var subject = '(PÃ¥begyndt) Workflow: ' + type;
							
							//extract warchers and crearedBy users
							var watchers = root.get("hasWatcher");
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_start_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="stop" order="20" label="stop.label" tooltip="smk.stop.wf.action.tooltip"  purpose="bpmStop" confirmation="confirmation.action" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var type = codelist.getDescription(10, root.get('type'), 'da');
							var subject = '(Afbrudt) Workflow: ' + type;
							
							//extract warchers and crearedBy users
							var watchers = root.get("hasWatcher");
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_stop_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>

		<group id="add" order="25" label="add.group.label" type="menu" />	
		<transition id="addThumbnail" group="add"  />	
		<transition id="addWatchers" label="addWatchers.label" tooltip="addWatchers.tooltip" purpose="addRelation" group="add"  >
			<fields>
				<field name="addAttachmentConfig" type="json">
					<value>						
						{
							"predefinedTypes" : ["emf:User"],
							"selection" : "multiple",
							"relation" : ["emf:hasWatcher"],
							"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addAttachment" label="smk.addAttachment.action.label" tooltip="smk.addAttachment.action.tooltip" purpose="addRelation" group="add" >
			<fields>
				<field name="attachToConfig" type="json">
					<value>
						{
							"predefinedTypes" : ["emf:Project","chc:ConservationActivity","emf:Document","emf:Media","emf:Task","chc:CulturalObject","emf:Image","emf:Audio","emf:Video","chc:Sample","emf:BusinessProcess"],
							"selection" : "multiple",
							"relation" : ["chc:hasAttachment"]
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		
		<group id="exportAs" order="30" label="exportAs.group.label" type="menu" />
		<transition id="exportTabPDF" group="exportAs" />
		<transition id="exportPDF" group="exportAs" />
		<transition id="exportTabWord" label="exportTabWord.label" purpose="exportTabWord" tooltip="exportTabWord.tooltip" group="exportAs" />
		<transition id="exportWord" label="exportWord.label" purpose="exportWord" tooltip="exportWord.tooltip" group="exportAs"  />

		<group id="print" order="35" label="print.group.label" type="menu" />
		<transition id="printTab" group="print" />
		<transition id="print" label="print.label" purpose="print" tooltip="print.tooltip" group="print" />

		<group id="template" order="36" label="template.group.label" type="menu" />
		<transition id="saveAsTemplate" group="template" />	
		<transition id="updateTemplate" tooltip="smk.updateTemplate.action.tooltip" label="updateTemplate.label" purpose="updateTemplate" confirmation="confirmation.update_template" group="template" />
		<transition id="changeTemplate" tooltip="smk.changeTemplate.action.tooltip" label="changeTemplate.label" purpose="changeTemplate" group="template" />
		
		<group id="more" order="40" label="more.group.label" type="menu" />
		<transition id="move" label="move.label" purpose="move" tooltip="move.tooltip" group="more" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var type = codelist.getDescription(10, root.get('type'), 'da');
							var subject = '(Flyttet) Workflow: ' + type;
							
							//extract warchers and crearedBy users
							var watchers = root.get("hasWatcher");
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_move_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="lock" group="more" />
		<transition id="unlock" group="more" />
		<transition id="managePermissions" group="more" />
		
		<transition id="delete" order="45" confirmation="project_delete.confirm" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var type = codelist.getDescription(10, root.get('type'), 'da');
							var subject = '(Slettet) Workflow: ' + type;
							
							var targetID = root.get("processes");
							var instances = [];
							for(i = 0; i < targetID.length; i++) {
								var ins = instance.load(targetID[i]);
								instances.push(ins);
							}
							context.put('processes', instances);
						  
							//extract warchers and crearedBy users
							var watchers = root.get("hasWatcher");
							var createdBy = root.get('createdBy');
							
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_delete_object_smk", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">false</control-param>
					</control>
				</field>
			</fields>
		</transition>
	</transitions>
	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="NOT_YET_STARTED" />

		<stateTransition from="NOT_YET_STARTED" transition="editDetails" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="start" to="IN_PROGRESS" />
		<stateTransition from="NOT_YET_STARTED" transition="addAttachment" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="printTab" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="print" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportTabPDF" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportPDF" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportTabWord" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportWord" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="move" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="lock" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="unlock" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="addWatchers" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="addThumbnail" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="saveAsTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="changeTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="updateTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="managePermissions" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="createInContext" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="delete" to="NOT_YET_STARTED" />

		<stateTransition from="IN_PROGRESS" transition="editDetails" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="stop" to="STOPPED">
			<condition id="requiredFields" renderAs="REQUIRED">[stopReason]</condition>
		</stateTransition>
		<stateTransition from="IN_PROGRESS" transition="addAttachment" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="updateTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="printTab" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="print" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportTabPDF" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportPDF" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportTabWord" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportWord" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="move" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="lock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="unlock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="addThumbnail" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="saveAsTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="managePermissions" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="createInContext" to="IN_PROGRESS" />

		<stateTransition from="STOPPED" transition="printTab" to="STOPPED" />
		<stateTransition from="STOPPED" transition="print" to="STOPPED" />
		<stateTransition from="STOPPED" transition="exportTabPDF" to="STOPPED" />
		<stateTransition from="STOPPED" transition="exportPDF" to="STOPPED" />
		<stateTransition from="STOPPED" transition="exportTabWord" to="STOPPED" />
		<stateTransition from="STOPPED" transition="exportWord" to="STOPPED" />
		<stateTransition from="STOPPED" transition="managePermissions" to="STOPPED" />

		<stateTransition from="COMPLETED" transition="printTab" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="print" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportTabPDF" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportPDF" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportWord" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportTabWord" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="managePermissions" to="COMPLETED" />
	</stateTransitions>
	
	<allowedChildren>
		<child type="task" id="all"/>
		<child type="document" id="all"/>
		<child type="object" id="smkAudio"/>
		<child type="object" id="smkVideo"/>
		<child type="object" id="smkImage"/>
	</allowedChildren>
	
	<labels>
		<label id="WORKFLOW_TOOLTIP_HEADER_SMK">
			<value lang="en"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-type="${get([type])}">${CL([type])}</span> 
                        </a>
                    </span>
					<span class="tooltip-row">
                        <label>Status: </label>										
                        <span data-property="status">${CL([status])}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>System Created by: </label>
                        <span data-property="createdBy">${user(${get([createdBy])})}</span>
                    </span>
                    ${if(${get([plannedEndDate])}<>null).then(
						<span class="tooltip-row">
							<label>Planned end date: </label>
							<span data-property="plannedEndDate">${date([plannedEndDate])}</span>
						</span>
					)}
					${if(${get([stopReason])}<>null).then(
						<span class="tooltip-row">
							<label>Stop Reason: </label>
							<span data-property="stopReason">${get([stopReason])}</span>
						</span>
					)}
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>                      
						</span>
					)}
                </span>
            )}]]></value>
			<value lang="da"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-type="${get([type])}">${CL([type])}</span> 
                        </a>
                    </span>
					<span class="tooltip-row">
                        <label>Status: </label>										
                        <span data-property="status">${CL([status])}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>Oprettet af: </label>
                        <span data-property="createdBy">${user(${get([createdBy])})}</span>
                    </span>
                    ${if(${get([plannedEndDate])}<>null).then(
						<span class="tooltip-row">
							<label>Planlagt slutdato: </label>
							<span data-property="plannedEndDate">${date([plannedEndDate])}</span>
						</span>
					)}
					${if(${get([stopReason])}<>null).then(
						<span class="tooltip-row">
							<label>Ãrsag til afbrydelse: </label>
							<span data-property="stopReason">${get([stopReason])}</span>
						</span>
					)}
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>                      
						</span>
					)}
                </span>
            )}]]></value>
		</label>
		<label id="WORKFLOW_DEFAULT_HEADER_SMK">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(64)}"/></span>
				<span>
					<span class="truncate-element">
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
						<b>
							<a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
								${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
								<span data-property="type">${CL([type])}</span>&nbsp;
							</a>
						</b>	
						${if(${get([status])} <> NEW).then((<span data-property="status">${CL([status])}</span>))}
					</span>
					<br />
					<span class="truncate-element">
						${if(${get([plannedEndDate])} <> null).then(Planned end date: <span>${date([plannedEndDate])}</span>,&nbsp;)}
						Priority:&nbsp;<span data-property="priority">${CL([priority])}</span>
						${if(${var.isVersion}).then(
							&nbsp;<span class="document-version version badge">${get([emf:version])}</span>
						)}
					</span>
				</span>
			)}]]></value>
			<value lang="da"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(64)}"/></span>
				<span>
					<span class="truncate-element">
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
						<b>
							<a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
								${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
								<span data-property="type">${CL([type])}</span>&nbsp;
							</a>
						</b>	
						${if(${get([status])} <> NEW).then((<span data-property="status">${CL([status])}</span>))}
					</span>
					<br />
					<span class="truncate-element">
						${if(${get([plannedEndDate])} <> null).then(Planlagt&nbsp;slutdato:&nbsp;<span>${date([plannedEndDate])}</span>,&nbsp;)}
						Prioritet:&nbsp;<span data-property="priority">${CL([priority])}</span>
						${if(${var.isVersion}).then(
							&nbsp;<span class="document-version version badge">${get([emf:version])}</span>
						)}
					</span>
				</span>
			)}]]></value>
		</label>		
		<label id="WORKFLOW_COMPACT_HEADER_SMK">	
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				<span><img src="${thumbnailUri(16)}"/></span>
				<span class="truncate-element">
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}" style="vertical-align:baseline;">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						<span data-property="type">${CL([type])}</span>&nbsp;
					</a>&nbsp;
					(<span data-property="status">${CL([status])}</span>)
					${if(${var.isVersion}).then(
						&nbsp;<span class="document-version version badge">${get([emf:version])}</span>
					)}
				</span>
			)}]]></value>
			<value lang="da"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				<span><img src="${thumbnailUri(16)}"/></span>
				<span class="truncate-element">
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}" style="vertical-align:baseline;">
						${if(${get([emf:isDeleted])} == true).then(<span>(Slettet)</span>&nbsp;)}
						<span data-property="type">${CL([type])}</span>&nbsp;
					</a>&nbsp;
					(<span data-property="status">${CL([status])}</span>)
					${if(${var.isVersion}).then(
						&nbsp;<span class="document-version version badge">${get([emf:version])}</span>
					)}
				</span>
			)}]]></value>
		</label>
		<label id="WORKFLOW_BREADCRUMB_HEADER_SMK">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						<span data-property="type">${CL([type])}</span>
					 </a>
				</span>
			)}]]></value>
			<value lang="da"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						${if(${get([emf:isDeleted])} == true).then(<span>(Slettet)</span>&nbsp;)}
						<span data-property="type">${CL([type])}</span>
					 </a>
				</span>
			)}]]></value>
		</label>		
	</labels>
</definition>
