<?xml version="1.0" encoding="UTF-8"?>
<definition id="yulWorkflow" parentId="workflowBase" isAbstract="true" type="workflow">
	<fields>
		<!-- headers and tooltip -->
		<field name="default_header" type="ANY" label="WORKFLOW_DEFAULT_HEADER_YUL" />
		<field name="compact_header" type="an..4096" label="WORKFLOW_COMPACT_HEADER_YUL" />
		<field name="breadcrumb_header" type="an..4096" label="WORKFLOW_BREADCRUMB_HEADER_YUL" />
		<field name="tooltip_header" type="ANY" label="WORKFLOW_TOOLTIP_HEADER_YUL" />

		<field name="identifier" displayType="system" />
		<field name="type" displayType="system" />
		<field name="title" type="an..1024" mandatory="false" displayType="system" >
			<control id="DEFAULT_VALUE_PATTERN">
				<control-param type="default_value_pattern" id="template" name="template">$[emf:type]</control-param>
			</control>
		</field>
		<field name="status" displayType="system" />
		<field name="description" displayType="system" />
		<field name="createdOn" displayType="system" />
		<field name="createdBy" displayType="system" />
		<field name="modifiedOn" displayType="system" />
		<field name="modifiedBy" displayType="system" />
		<field name="emf:version" displayType="system" />
		<field name="emf:revisionNumber" displayType="system" />
		<field name="assignee" type="uri" displayType="system" />
		<field name="hasParent" type="uri" displayType="system" />
		<field name="partOf" type="uri" displayType="system" />
		<field name="hasThumbnail" type="uri" displayType="system" />
		<field name="plannedEndDate" type="date" displayType="system" />
		<field name="plannedStartDate" type="date" displayType="system" />
		<field name="emf:hasTemplate" type="uri" displayType="system" />
		<field name="lockedBy" type="uri" displayType="system" />
		<field name="hasWatcher" type="uri" displayType="system" />
		<field name="parentOf" type="uri" displayType="system"/>
		<field name="hasChild" type="uri" displayType="system"/>
		<!-- workflow fields -->
		<field name="priority" displayType="system" />
		<field name="stopReason" displayType="system" />
	</fields>
	<regions>
		<region id="generalWorkflowInformation" order="10" displayType="editable" label="yulWorkflow.generalWorkflowInformation.region.label">
			<fields>
				<field name="type" type="an..50" displayType="readonly" codelist="CL7" label="yul.type.label" tooltip="yul.type.tooltip" dmsType="emf:type" >
					<value>yulWF</value>
				</field>
				<field name="department" type="an..50" mandatory="true" displayType="editable" codelist="CL245" label="yul.department.label" tooltip="yul.department.tooltip" multiValued="true" uri="emf:departmentName" >
					<control id="DEFAULT_VALUE_PATTERN">
						<control-param type="default_value_pattern" id="template" name="template">$[emf:createdBy.department]</control-param>
					</control>
				</field>
				<field name="description" type="an..1000" displayType="editable" label="yul.description.label" tooltip="yul.description.tooltip" dmsType="cm:description" uri="dcterms:description" />
				<field name="priority" type="an..20" mandatory="false" displayType="editable" codelist="CL29" label="priority.label" tooltip="yul.priority.tooltip" dmsType="bpm:priority" rnc="${to.dmsConvert(CL29,value,extra1)}|${from.dmsConvert(CL29,extra1,value)}" uri="emf:priority">
					<value>0006-000084</value>
				</field>
				<field name="plannedStartDate" type="date" displayType="editable" label="yul.plannedStartDate.label" tooltip="yul.plannedStartDate.tooltip" dmsType="FORBIDDEN" uri="emf:plannedStartDate">
					<condition id="readonlyField" renderAs="READONLY">[status] NOTIN ('NOT_YET_STARTED')</condition>
					<value>${today}</value>
				</field>
				<field name="plannedEndDate" type="date" displayType="editable" label="yul.plannedEndDate.label" tooltip="yul.plannedEndDate.tooltip" dmsType="bpm:dueDate" uri="emf:plannedEndDate">
					<condition id="readonlyField" renderAs="READONLY">[status] NOTIN ('NOT_YET_STARTED')</condition>
				</field>
				<field name="stopReason" type="an..250" displayType="hidden" label="yul.stopReason.label" tooltip="yul.stopReason.tooltip" previewEmpty="false" uri="emf:stopReason" />
			</fields>
		</region>
		<region id="systemInformation" order="30" label="yul.systemData.region.label">
			<fields>
				<field name="identifier" type="an..50" displayType="readOnly" label="yul.identifier.label" tooltip="yul.identifier.tooltip" dmsType="emf:identifier" rnc="${eval(WF${seq({+wfSequence})})}" uri="dcterms:identifier">
					<condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('NEW')</condition>
				</field>
				<field name="status" type="an..50" displayType="readOnly" codelist="CL9" label="yul.status.label" tooltip="yul.status.tooltip" dmsType="emf:status" uri="emf:status" />
				<field name="emf:version" type="an..10" displayType="readOnly" label="object.version" tooltip="yul.version.tooltip" dmsType="FORBIDDEN" uri="emf:version"/>
				<field name="createdOn" type="dateTime" displayType="readOnly" label="yul.createdOn.label" tooltip="yul.createdOn.tooltip" dmsType="-cm:created" uri="emf:createdOn" />
				<field name="createdBy" type="uri" displayType="readOnly" label="yul.createdBy.label" tooltip="yul.createdBy.tooltip" dmsType="-cm:creator" uri="emf:createdBy" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="modifiedOn" type="datetime" displayType="readOnly" label="yul.modifiedOn.label" tooltip="yul.modifiedOn.tooltip" dmsType="-cm:modified" uri="emf:modifiedOn" />
				<field name="modifiedBy" type="uri" displayType="readOnly" label="yul.modifiedBy.label" tooltip="yul.modifiedBy.tooltip" dmsType="-cm:modifier" uri="emf:modifiedBy">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="lockedBy" type="uri" displayType="readOnly" label="yul.lockedBy.label" tooltip="yul.lockedBy.tooltip" dmsType="FORBIDDEN" previewEmpty="false">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
			</fields>
		</region>
		<region id="yulActivityDefinitionRelationships" order="40" displayType="editable" label="yul.relationships.region.label">
			<fields>
				<field name="attachmentOf" type="uri" displayType="editable" label="yul.attachmentOf.label" tooltip="yul.attachmentOf.tooltip" multiValued="true" uri="chc:attachmentOf" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Project,yul:Activity,emf:Document,emf:Task,chc:CulturalObject,emf:Image,emf:Audio,emf:Video,chc:Sample,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="hasAttachment" type="uri" displayType="editable" label="yul.hasAttachment.label" tooltip="yul.hasAttachment.tooltip" multiValued="true" uri="chc:hasAttachment" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Project,yul:Activity,emf:Document,emf:Task,chc:CulturalObject,emf:Image,emf:Audio,emf:Video,chc:Sample,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="hasWatcher" type="uri" displayType="editable" label="yul.hasWatcher.label" tooltip="yul.hasWatcher.tooltip" multiValued="true" uri="emf:hasWatcher" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
						<control-param id="restrictions" name="restrictions">
							{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						</control-param>
					</control>
				</field>
				<field name="hasThumbnail" type="uri" displayType="readOnly" label="yul.hasThumbnail.label" tooltip="yul.hasThumbnail.tooltip" uri="emf:hasThumbnail" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Image</control-param>
					</control>
				</field>
				<field name="parentOf" type="uri" displayType="readOnly" label="yul.parentOf.label" tooltip="yul.parentOf.tooltip" multiValued="true" uri="emf:parentOf" >
					<control id="PICKER">
						<control-param id="range" name="range"/>
					</control>
				</field>
				<field name="hasParent" type="uri" displayType="readOnly" label="yul.hasParent.label" tooltip="yul.hasParent.tooltip" uri="emf:hasParent" >
					<control id="PICKER">
						<control-param id="range" name="range" />
					</control>
				</field>
				<field name="emf:hasTemplate" displayType="readOnly" type="uri" label="yul.hasTemplate.label" tooltip="yul.hasTemplate.tooltip" uri="emf:hasTemplate" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Template</control-param>
					</control>
				</field>
				<field name="partOf" type="uri" displayType="readOnly" label="yul.partOf.label" tooltip="yul.partOf.tooltip" multiValued="true" uri="ptop:partOf" >
					<control id="PICKER">
						<control-param id="range" name="range"/>
					</control>
				</field>
				<field name="hasChild" type="uri" displayType="readOnly" label="yul.hasChild.label" tooltip="yul.hasChild.tooltip" multiValued="true" uri="emf:hasChild" >
					<control id="PICKER">
						<control-param id="range" name="range"/>
					</control>
				</field>
			</fields>
		</region>
	</regions>
	<transitions>
		<transition id="editDetails" order="10" actionPath="/actions" />
		<transition id="start" order="15" tooltip="yul.start.wf.action.tooltip" actionPath="/" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var type = codelist.getDescription(10, root.getProperties().get('type'), 'en');
							var subject = '(Started) Workflow: ' + type;
							
							//extract warchers and crearedBy users
							var watchers = root.get("hasWatcher");
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_start_object_yul", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="stop" order="20" tooltip="yul.stop.wf.action.tooltip" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var type = codelist.getDescription(10, root.getProperties().get('type'), 'en');
							var subject = '(Stopped) Workflow: ' + type;
							
							//extract warchers and crearedBy users
							var watchers = root.get("hasWatcher");
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_stop_object_yul", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
			</fields>
		</transition>
		
		<group id="add" order="25" label="add.group.label" type="menu" />
		<transition id="addAttachment" label="yul.addAttachment.action.label" tooltip="yul.addAttachment.action.tooltip" eventId="addAttachment" purpose="addRelation" group="add" >
			<fields>
				<field name="attachToConfig" type="an10">
					<value>
						{
							"predefinedTypes" : ["emf:Project","chc:ConservationActivity","emf:Document","emf:Media","emf:Task","chc:CulturalObject","emf:Image","emf:Audio","emf:Video","chc:Sample","emf:BusinessProcess"],
							"selection" : "multiple",
							"relation" : ["chc:hasAttachment"]
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addThumbnail" group="add" />	
		<transition id="addWatchers" group="add" >
			<fields>
				<field name="addAttachmentConfig" type="an10">
					<value>						
						{
							"predefinedTypes" : ["emf:User"],
							"selection" : "multiple",
							"relation" : ["emf:hasWatcher"],
							"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		
		<group id="exportAs" order="30" label="exportAs.group.label" type="menu" />
		<transition id="exportTabPDF" group="exportAs" />
		<transition id="exportPDF" group="exportAs" />
		<transition id="exportTabWord" label="exportTabWord.label" eventId="exportTabWord" purpose="exportTabWord" tooltip="exportTabWord.tooltip" group="exportAs" />
		<transition id="exportWord" label="exportWord.label" eventId="exportWord" purpose="exportWord" tooltip="exportWord.tooltip" group="exportAs" />

		<group id="print" order="35" label="print.group.label" type="menu" />
		<transition id="printTab" group="print" />
		<transition id="print" group="print" />
		
		<group id="template" order="40" label="template.group.label" type="menu" />
		<transition id="saveAsTemplate" group="template" />
		<transition id="updateTemplate" label="updateTemplate.label" eventId="updateTemplate" purpose="updateTemplate" tooltip="updateTemplate.tooltip" confirmation="confirmation.update_template" group="template" />
		<transition id="changeTemplate" label="changeTemplate.label" eventId="changeTemplate" purpose="changeTemplate" tooltip="changeTemplate.tooltip" group="template" />
		
		<group id="more" order="60" label="more.group.label" type="menu" />
		<transition id="move" group="more" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var type = codelist.getDescription(10, root.getProperties().get('type'), 'en');
							var subject = '(Moved) Workflow: ' + type;
							
							//extract warchers and crearedBy users
							var watchers = root.get("hasWatcher");
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_move_object_yul", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="lock" group="more" />
		<transition id="unlock" actionPath="/" group="more"  />
		<transition id="managePermissions" group="more" />
		
		<transition id="delete" order="100" tooltip="yul.delete.tooltip" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var type = codelist.getDescription(10, root.getProperties().get('type'), 'en');
							var subject = '(Deleted) Workflow: ' + type;
							
							
							var targetID = root.get("processes");
							var instances = [];
							for(i = 0; i < targetID.length; i++) {
								var ins = instance.load(targetID[i]);
								instances.push(ins);
							}
							context.put('processes', instances);
						  
							//extract warchers and crearedBy users
							
							var watchers = root.get("hasWatcher");
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_delete_object_yul", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
						<control-param id="persistent" name="persistent">false</control-param>
					</control>
				</field>
			</fields>
		</transition>
	</transitions>
	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="NOT_YET_STARTED" />
		
		<!-- NOT_YET_STARTED -->
		<stateTransition from="NOT_YET_STARTED" transition="editDetails" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="start" to="IN_PROGRESS" />
		<stateTransition from="NOT_YET_STARTED" transition="addAttachment" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="addThumbnail" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="addWatchers" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportTabPDF" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportPDF" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportTabWord" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="exportWord" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="printTab" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="print" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="saveAsTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="changeTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="updateTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="move" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="lock" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="unlock" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="managePermissions" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="delete" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="createInContext" to="NOT_YET_STARTED" />
		
		<!-- IN_PROGRESS -->
		<stateTransition from="IN_PROGRESS" transition="editDetails" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="stop" to="STOPPED">
			<condition id="requiredFields" renderAs="REQUIRED">[stopReason]</condition>
		</stateTransition>
		<stateTransition from="IN_PROGRESS" transition="addAttachment" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="addThumbnail" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="addWatchers" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportTabPDF" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportPDF" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportTabWord" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="exportWord" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="printTab" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="print" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="saveAsTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="updateTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="move" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="lock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="unlock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="managePermissions" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="createInContext" to="IN_PROGRESS" />
		
		<!-- STOPPED -->
		<stateTransition from="STOPPED" transition="exportTabPDF" to="STOPPED" />
		<stateTransition from="STOPPED" transition="exportPDF" to="STOPPED" />
		<stateTransition from="STOPPED" transition="exportTabWord" to="STOPPED" />
		<stateTransition from="STOPPED" transition="exportWord" to="STOPPED" />
		<stateTransition from="STOPPED" transition="printTab" to="STOPPED" />
		<stateTransition from="STOPPED" transition="print" to="STOPPED" />
		<stateTransition from="STOPPED" transition="updateTemplate" to="STOPPED" />
		<stateTransition from="STOPPED" transition="managePermissions" to="STOPPED" />

		<!-- COMPLETED -->
		<stateTransition from="COMPLETED" transition="exportTabPDF" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportPDF" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportTabWord" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="exportWord" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="printTab" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="print" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="updateTemplate" to="COMPLETED" />
		<stateTransition from="COMPLETED" transition="managePermissions" to="COMPLETED" />
	</stateTransitions>
	
	<allowedChildren>
		<child type="task" id="all"/>
		<child type="document" id="all"/>
		<child type="object" id="yulSample"/>
		<child type="object" id="yulAudio"/>
		<child type="object" id="yulVideo"/>
		<child type="object" id="yulImage"/>		
	</allowedChildren>
	
	<labels>
		<label id="WORKFLOW_TOOLTIP_HEADER_YUL">
			<value lang="en"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-type="${get([type])}">${CL([type])}</span> 
                        </a>
                    </span>
					<span class="tooltip-row">
                        <label>Status: </label>										
                        <span data-property="status">${CL([status])}</span>
                    </span>
                    <span class="tooltip-row">
                        <label>System created by: </label>
                        <span data-property="createdBy">${objectProperty(${get([createdBy])})}</span>
                    </span>
                    ${if(${get([plannedEndDate])}<>null).then(
						<span class="tooltip-row">
							<label>Planned end date: </label>
							<span data-property="plannedEndDate">${date([plannedEndDate]).format(dd.MM.yyyy)}</span>
						</span>
					)}
					${if(${get([stopReason])}<>null).then(
						<span class="tooltip-row">
							<label>Stop reason: </label>
							<span data-property="stopReason">${get([stopReason])}</span>
						</span>
					)}
                </span>
            )}]]></value>
		</label>
		<label id="WORKFLOW_DEFAULT_HEADER_YUL">
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span><img src="${thumbnailUri(64)}"/></span>
			<span>
				<span class="truncate-element">
					Priority:&nbsp;<span data-property="priority">${CL([priority])}</span>&nbsp;
					${if(${get([status])} <> NEW).then((<span data-property="status">${CL([status])}</span>))}
				</span>
				<br />
				<span class="truncate-element">
					<a class="${get([status])} instance-link task-state-${get([status])} ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
							<span data-property="type">${CL([type])}</span>
					</a>
					${if(${get([plannedEndDate])} <> null).then(,&nbsp;Planned end date: <span>${date([plannedEndDate]).format(dd.MM.yyyy)}</span>)}
					${if(${var.isVersion}).then(
						&nbsp;<span class="document-version version badge">${get([emf:version])}</span>
					)}
				</span>	
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
			</span>)}]]></value>
		</label>		
		<label id="WORKFLOW_COMPACT_HEADER_YUL">	
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			<span><img src="${thumbnailUri(16)}"/></span>
			<span class="truncate-element">
				${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
				<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}" style="vertical-align:baseline;">
					${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
					<span data-property="type">${CL([type])}</span>&nbsp;
				</a>&nbsp;
				(<span data-property="status">${CL([status])}</span>)
			</span>
		)}]]></value>
		</label>
		<label id="WORKFLOW_BREADCRUMB_HEADER_YUL">
			<value lang="en"><![CDATA[${eval(
            ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			<span><img src="${thumbnailUri(16)}"/></span>
			<span>
				${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
				<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
					<span data-property="type">${CL([type])}</span>
				 </a>
			</span>	)}]]></value>
		</label>		
	</labels>
</definition>