<?xml version="1.0"?>
<definition id="template" parentId="baseTemplate" isAbstract="false" type="object">
    <fields>
		<field name="default_header" type="ANY" label="YUL_TEMPLATE_DEFAULT_HEADER" />
		<field name="tooltip_header" type="ANY" label="YUL_TEMPLATE_TOOLTIP_HEADER" />
		<field name="compact_header" type="ANY" label="YUL_TEMPLATE_COMPACT_HEADER" />
		<field name="breadcrumb_header" type="ANY" label="YUL_TEMPLATE_BREADCRUMB_HEADER" />
	
		<field name="hasThumbnail" type="uri" displayType="system" />
		<field name="outcome" type="ANY" displayType="system" />
		<field name="completedOn" type="datetime" displayType="system" />
		<field name="integrated" type="boolean" displayType="system" />
		<field name="uri" type="an..50" displayType="system" />
		<field name="hasRevision" type="uri" displayType="system" />
		<field name="isRevisionOf" type="uri" displayType="system" />
		<field name="lastPublishedRevision" type="uri" displayType="system" />
		<field name="lastRevision" type="uri" displayType="system" />
		<field name="nextRevision" type="uri" displayType="system" />
		<field name="previousRevision" type="uri" displayType="system" />
		<field name="emf:hasTemplate" type="uri" displayType="system" />
    </fields>
	
	<regions>
		<region id="systemData" order="1" displayType="editable" label="yul.systemData.region.label">
			<fields>
				<field name="title" type="an..500" mandatory="true" displayType="editable" label="yul.title.label" tooltip="yul.title.tooltip" unique="true" uri="dcterms:title"/>
				<field name="forObjectTypeLabel" type="an..256" mandatory="false" displayType="readonly" label="template.forObjectType" tooltip="yul.forObjectType.tooltip" uri="emf:forObjectTypeLabel" />
				<field name="templatePurpose" type="ANY" mandatory="true" displayType="readonly" codelist="CL31" label="template.templatePurpose" tooltip="yul.templatePurpose.tooltip" uri="emf:templatePurpose"/>
				<field name="isPrimaryTemplate" type="boolean" displayType="readonly" label="template.isPrimaryTemplate" tooltip="yul.isPrimaryTemplate.tooltip" uri="emf:isPrimaryTemplate"/>
				<field name="description" type="an..1024" displayType="editable" label="yul.description.label" tooltip="yul.description.tooltip" uri="dcterms:description"/>
				<field name="templateRuleDescription" type="an..1024" displayType="readonly" label="template.ruleDescription" tooltip="yul.templateRuleDescription.tooltip" uri="emf:templateRuleDescription"/>
				<field name="type" type="ANY" displayType="readOnly" codelist="CL7" label="type.label" uri="emf:type">
					<value>TEMPLATE</value>
				</field> 
				<field name="identifier" type="an..50" displayType="readOnly" label="yul.identifier.label" tooltip="yul.identifier.tooltip" rnc="${eval(TMP${seq({+tmpSequence})})}" uri="dcterms:identifier"/>
				<field name="emf:version" type="an..10" displayType="readOnly" label="object.version" tooltip="yul.version.tooltip" uri="emf:version"/> 
				<field name="status" type="ANY" displayType="readOnly" codelist="CL17" label="status.label" tooltip="yul.status.tooltip" uri="emf:status" />
				<field name="createdOn" type="dateTime" displayType="readOnly" label="yul.createdOn.label" tooltip="yul.createdOn.tooltip" uri="emf:createdOn" />
				<field name="createdBy" type="uri" displayType="readOnly" label="yul.createdBy.label" tooltip="yul.createdBy.tooltip" uri="emf:createdBy" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="modifiedOn" type="datetime" displayType="readOnly" label="yul.modifiedOn.label" tooltip="yul.modifiedOn.tooltip" uri="emf:modifiedOn"/>
				<field name="modifiedBy" type="uri" displayType="readOnly" label="yul.modifiedBy.label" tooltip="yul.modifiedBy.tooltip" uri="emf:modifiedBy">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="lockedBy" type="uri" displayType="readOnly" label="yul.lockedBy.label" tooltip="yul.lockedBy.tooltip" previewEmpty="false">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="parentOf" type="uri" displayType="readOnly" label="yul.parentOf.label" tooltip="yul.parentOf.tooltip" multiValued="true" uri="emf:parentOf" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="hasParent" type="uri" displayType="readOnly" label="yul.hasParent.label" tooltip="yul.hasParent.tooltip" uri="emf:hasParent" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="partOf" type="uri" displayType="readOnly" label="yul.partOf.label" tooltip="yul.partOf.tooltip" multiValued="true" uri="ptop:partOf" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="hasChild" type="uri" displayType="readOnly" label="yul.hasChild.label" tooltip="yul.hasChild.tooltip" multiValued="true" uri="emf:hasChild" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
			</fields>
		</region>
	</regions>
	
	<transitions>
		<transition id="editDetails" order="5" actionPath="/" />
		<transition id="setTemplateAsPrimary" order="10" />
		<transition id="editTemplateRule" order="15" />
		<transition id="activateTemplate" order="20" actionPath="/" />
		<transition id="deactivateTemplate" order="25" actionPath="/" />
		<transition id="reloadTemplate" order="30" />
		<transition id="updateExistingObjects" order="35" />
		
		<group id="more" order="40" label="more.group.label" type="menu" />
		<transition id="cloneTemplate" group="more" />
		<transition id="lock" group="more" />
		<transition id="unlock" group="more" actionPath="/" />
		<transition id="managePermissions" group="more" />
		
		<transition id="delete" order="100" />
	</transitions>
	
	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="DRAFT" />

		<stateTransition from="DRAFT" transition="activateTemplate" to="ACTIVE" />
		<stateTransition from="DRAFT" transition="editDetails" to="DRAFT" />
		<stateTransition from="DRAFT" transition="lock" to="DRAFT" />
		<stateTransition from="DRAFT" transition="unlock" to="DRAFT" />
		<stateTransition from="DRAFT" transition="managePermissions" to="DRAFT" />
		<stateTransition from="DRAFT" transition="reloadTemplate" to="DRAFT" />
		<stateTransition from="DRAFT" transition="editTemplateRule" to="DRAFT" />
		<stateTransition from="DRAFT" transition="cloneTemplate" to="DRAFT" />
		<stateTransition from="DRAFT" transition="delete" to="DRAFT" />
		<stateTransition from="DRAFT" transition="setTemplateAsPrimary" to="DRAFT">
			<condition renderAs="PROPERTY" id="isPrimaryTemplate">false</condition>
		</stateTransition>

		<stateTransition from="ACTIVE" transition="editDetails" to="UPDATED" />
		<stateTransition from="ACTIVE" transition="lock" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="unlock" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="managePermissions" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="reloadTemplate" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="editTemplateRule" to="UPDATED" />
		<stateTransition from="ACTIVE" transition="cloneTemplate" to="ACTIVE" />
		<stateTransition from="ACTIVE" transition="setTemplateAsPrimary" to="ACTIVE">
			<condition renderAs="PROPERTY" id="isPrimaryTemplate">false</condition>
		</stateTransition>
		<stateTransition from="ACTIVE" transition="deactivateTemplate" to="INACTIVE">
			<condition renderAs="PROPERTY" id="isPrimaryTemplate">false</condition>
		</stateTransition>
		<stateTransition from="ACTIVE" transition="updateExistingObjects" to="ACTIVE" />

		<stateTransition from="UPDATED" transition="activateTemplate" to="ACTIVE" />
		<stateTransition from="UPDATED" transition="editDetails" to="UPDATED" />
		<stateTransition from="UPDATED" transition="lock" to="UPDATED" />
		<stateTransition from="UPDATED" transition="unlock" to="UPDATED" />
		<stateTransition from="UPDATED" transition="managePermissions" to="UPDATED" />
		<stateTransition from="UPDATED" transition="reloadTemplate" to="UPDATED" />
		<stateTransition from="UPDATED" transition="editTemplateRule" to="UPDATED" />
		<stateTransition from="UPDATED" transition="cloneTemplate" to="UPDATED" />
		<stateTransition from="UPDATED" transition="setTemplateAsPrimary" to="UPDATED">
			<condition renderAs="PROPERTY" id="isPrimaryTemplate">false</condition>
		</stateTransition>
		<stateTransition from="UPDATED" transition="deactivateTemplate" to="INACTIVE">
			<condition renderAs="PROPERTY" id="isPrimaryTemplate">false</condition>
		</stateTransition>
		
		<stateTransition from="INACTIVE" transition="activateTemplate" to="ACTIVE" />
		<stateTransition from="INACTIVE" transition="editDetails" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="lock" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="unlock" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="managePermissions" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="reloadTemplate" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="editTemplateRule" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="cloneTemplate" to="INACTIVE" />
		<stateTransition from="INACTIVE" transition="setTemplateAsPrimary" to="INACTIVE">
			<condition renderAs="PROPERTY" id="isPrimaryTemplate">false</condition>
		</stateTransition>
	</stateTransitions>
	
	<labels>
		<label id="YUL_TEMPLATE_TOOLTIP_HEADER">
			<value lang="en"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							<span data-title="${get([title])}">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
                        <label>Type: </label>
                        <span data-property="type">${CL([type])}</span>
                    </span>
					${if(${get([forObjectTypeLabel])} <> null).then(
						<span class="tooltip-row">
							<label>For object type: </label>
							<span data-property="forObjectTypeLabel">${get([forObjectTypeLabel])}</span>
						</span>
					)}	
					<span class="tooltip-row">
                        <label>Status: </label>
                        <span data-property="status">${CL([status])}</span>
                    </span>
					${if(${get([isPrimaryTemplate])} <> null).then(
						<span class="tooltip-row">
							<label>Primary: </label>
							<span data-property="isPrimaryTemplate">${if(${get([isPrimaryTemplate])} == true).then(Yes).else(No)}</span>
						</span>
					)}
					<span class="tooltip-row">
						<label>Purpose: </label>
						<span data-property="templatePurpose">${CL([templatePurpose])}</span>
					</span>
					<span class="tooltip-row">
                        <label>Version: </label>
                        <span data-property="emf:version">${get([emf:version])}</span>
                    </span>
					<span class="tooltip-row">
                        <label>System modified by: </label>
                        <span data-property="modifiedBy">${objectProperty(${get([modifiedBy])})}</span>
                    </span>
					<span class="tooltip-row">
                        <label>System modified on: </label>
                        <span data-property="modifiedOn">${date([modifiedOn])}</span>
                    </span>
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>                      
						</span>
					)}
				</span>
			)})}]]></value>
		</label>	
	    <label id="YUL_TEMPLATE_DEFAULT_HEADER">
			<value lang="en"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			<span><img src="${thumbnailUri(64)}"/></span>
			${if(${get([status])}==INACTIVE).then(<span style=color:#a9a9a9;>).else(<span>)}
				<span class="truncate-element">
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<span data-property="type">${CL([type])}</span>&nbsp;
					(<span data-property="status">${CL([status])}</span>)
				</span>
				<br />
				<b>	
					<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
						${if(${get([status])}==INACTIVE).then(<span style=color:#a9a9a9; data-title="${get([title])}">${get([title])}</span>).else(<span data-title="${get([title])}">${get([title])}</span>)}
					</a>
				</b>	
				,&nbsp;Last&nbsp;modified&nbsp;by:&nbsp;<span data-property="modifiedBy">${objectProperty(${get([modifiedBy])})}</span>,&nbsp;${date([modifiedOn])}
				${if(${var.isVersion}).then(
					&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
				)}
            </span>)}]]></value>
		</label>
		 <label id="YUL_TEMPLATE_COMPACT_HEADER">
            <value lang="en"><![CDATA[${eval(
            ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
            <span ><img src="${thumbnailUri(16)}"/></span>
            <span>
				${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
				<span>
					<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
						<span data-title="${get([title])}">${get([title])}</span>
					</a>&nbsp;
					(<span data-property="status">${CL([status])}</span>)
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
				</span>
			</span>)}]]></value>
        </label>
		<label id="YUL_TEMPLATE_BREADCRUMB_HEADER">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				<span ><img src="${thumbnailUri(16)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
						<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						<span data-title="${get([title])}">${get([title])}</span>
					</a>
				</span>)}]]>
			</value>
        </label>
    </labels>
</definition>
