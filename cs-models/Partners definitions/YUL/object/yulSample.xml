<?xml version="1.0"?>
<definition id="yulSample" parentId="baseObject" type="object">
    <fields>
		<field name="default_header" type="ANY" label="SAMPLE_DEFAULT_HEADER_YUL" />
        <field name="compact_header" type="an..4096" label="SAMPLE_COMPACT_HEADER_YUL" />
		<field name="breadcrumb_header" type="an..4096" label="SAMPLE_BREADCRUMB_HEADER_YUL" />
		<field name="tooltip_header" type="ANY" label="SAMPLE_OBJECT_TOOLTIP_HEADER_YUL" />

		<field name="rdf:type" type="URI" displayType="system" uri="rdf:type" >
           <value>http://www.sirma.com/ontologies/2016/02/culturalHeritageConservation#Sample</value>
        </field>
		<field name="identifier" type="an..50" displayType="system" />
		<field name="type" type="an..50" displayType="system" />
		<field name="title" type="an..180" displayType="system"/>
		<field name="status" type="an..50" displayType="system" />		
		<field name="description" type="an..5000" displayType="system" />
		<field name="createdOn" type="dateTime" displayType="system"  />
    	<field name="createdBy" type="uri" displayType="system" />
        <field name="modifiedOn" type="dateTime" displayType="system"/>
        <field name="modifiedBy" type="uri" displayType="system" />		
		<field name="emf:version" type="an..10" displayType="system" />
		<field name="outcome" type="an..50" displayType="system" />
		<field name="completedOn" type="datetime" displayType="system" />
		<field name="hasParent" type="uri" displayType="system" />
		<field name="hasThumbnail" type="uri"  displayType="system" />
		<field name="integrated" type="boolean" displayType="system" />
		<field name="uri" type="an..50" displayType="system" />
		<field name="hasRevision" type="uri" displayType="system" />
		<field name="isRevisionOf" type="uri" displayType="system" />
		<field name="lastPublishedRevision" type="uri" displayType="system" />
		<field name="lastRevision" type="uri" displayType="system" />
		<field name="nextRevision" type="uri" displayType="system" />
		<field name="previousRevision" type="uri" displayType="system" />
		<field name="partOf" type="uri" displayType="system" />
		<field name="emf:hasTemplate" type="uri" displayType="system" />
		<field name="lockedBy" type="uri" displayType="system" />
		<field name="parentOf" type="uri" displayType="system" />
		<field name="hasChild" type="uri" displayType="system" />
		<field name="hasWatcher" type="uri" displayType="system" override="true"  />
    </fields>
	<regions>	
		<region id="generalData" order="20" displayType="editable" label="yul.generalData.region.label">
			<fields>
				<field name="title" type="an..180" mandatory="true" displayType="editable" label="yul.COtitle.label" tooltip="yul.title.tooltip" uri="dcterms:title"/>
				<field name="isTakenFrom" type="uri" displayType="editable" mandatory="true" label="yul.isTakenFrom.label" tooltip="yul.isTakenFrom.tooltip" uri="chc:isTakenFrom" >
					<control id="PICKER">
						<control-param id="range" name="range">chc:CulturalObject</control-param>
						<control-param id="restrictions" name="restrictions">
							{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["CURRENT"]}
						</control-param>
					</control>
				</field>
				<field name="sampleMaterial" type="an..180" displayType="editable" label="yul.sampleMaterial.label" tooltip="yul.sampleMaterial.tooltip" uri="yul:sampleMaterial" />
				<field name="dateCollected" type="date" displayType="editable" label="yul.dateCollected.label" tooltip="yul.dateCollected.tooltip" uri="yul:dateCollected" />
				<field name="collectedBy" type="uri" displayType="editable" label="yul.collectedBy.label" tooltip="yul.collectedBy.tooltip" multiValued="true" uri="yul:collectedBy" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
						<control-param id="restrictions" name="restrictions">
							{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						</control-param>
					</control>
				</field>
				<field name="locationHorizontal" type="an..180" displayType="editable" label="yul.locationHorizontal.label" tooltip="yul.locationHorizontal.tooltip" uri="yul:locationHorizontal" />
				<field name="locationVertical" type="an..180" displayType="editable" label="yul.locationVertical.label" tooltip="yul.locationVertical.tooltip" uri="yul:locationVertical" />
				<field name="color" type="an..180" displayType="editable" label="yul.color.label" tooltip="yul.color.tooltip" uri="yul:color" />
				<field name="weight" type="an..180" displayType="editable" label="yul.weight.label" tooltip="yul.sampleWeight.tooltip" uri="yul:weight" />
				<field name="preparation" type="an..1024" displayType="editable" label="yul.preparation.label" tooltip="yul.samplePreparation.tooltip" uri="yul:preparation" />
			</fields>
		</region>
		
		<region id="systemData" order="30" displayType="editable" label="yul.systemData.region.label">
			<fields>
				<field name="type" type="an..50" codelist="CL7" displayType="readonly" label="yul.type.label" tooltip="yul.type.tooltip" uri="emf:type">
					<value>FC236012</value>
				</field>			
				<field name="identifier" type="an..50" displayType="readOnly" label="yul.identifier.label" tooltip="yul.identifier.tooltip" rnc="${eval(SMP${seq({+smpSequence})})}" uri="dcterms:identifier"/>
				<field name="status" type="an..50" displayType="readOnly" codelist="CL116" label="yul.status.label" tooltip="yul.status.tooltip" uri="emf:status" />
				<field name="emf:version" type="an..10" displayType="readOnly" label="yul.version.label" tooltip="yul.version.tooltip" uri="emf:version"/> 
				
				<!-- object properties (relationships) -->
				<field name="createdOn" type="dateTime" displayType="readOnly"  label="yul.createdOn.label" tooltip="yul.createdOn.tooltip" uri="emf:createdOn" />
				<field name="createdBy" type="uri" displayType="readOnly" label="yul.createdBy.label" tooltip="yul.createdBy.tooltip" uri="emf:createdBy" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="modifiedOn" type="datetime" displayType="readOnly" label="yul.modifiedOn.label" tooltip="yul.modifiedOn.tooltip" uri="emf:modifiedOn"/>
				<field name="modifiedBy" type="uri" displayType="readOnly" label="yul.modifiedBy.label" tooltip="yul.modifiedBy.tooltip" uri="emf:modifiedBy">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="lockedBy" type="uri" displayType="readonly" label="yul.lockedBy.label"  tooltip="yul.lockedBy.tooltip" previewEmpty="false">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="hasThumbnail" type="uri" displayType="readOnly" label="yul.hasThumbnail.label" tooltip="yul.hasThumbnail.tooltip" uri="emf:hasThumbnail" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Image</control-param>
					</control>
				</field>
				<field name="hasDepiction" type="uri" displayType="editable" label="yul.hasDepiction.label" tooltip="yul.hasDepiction.tooltip" multiValued="true" uri="chc:hasDepiction" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Image</control-param>
					</control>
				</field>
				<field name="hasAttachment" type="uri" displayType="editable" label="yul.attachments.label" tooltip="yul.hasAttachment.tooltip" multiValued="true" uri="emf:hasAttachment" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Project,yul:Activity,emf:Document,emf:Task,chc:CulturalObject,emf:Image,emf:Audio,emf:Video,chc:Sample,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="attachmentOf" type="uri" displayType="editable" label="yul.attachmentOf.label" tooltip="yul.attachmentOf.tooltip" multiValued="true" uri="emf:isAttachedTo" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Project,yul:Activity,emf:Document,emf:Task,chc:CulturalObject,emf:Image,emf:Audio,emf:Video,chc:Sample,emf:BusinessProcess</control-param>
					</control>
				</field>
				<field name="hasWatcher" type="uri" displayType="editable" label="yul.hasWatcher.label" tooltip="yul.hasWatcher.tooltip" multiValued="true" uri="emf:hasWatcher" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
						<control-param id="restrictions" name="restrictions">
							{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						</control-param>
					</control>
				</field>				
				<field name="parentOf" type="uri" displayType="readonly" label="yul.parentOf.label" tooltip="yul.parentOf.tooltip" multiValued="true" uri="emf:parentOf" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="hasParent" type="uri" displayType="readonly" label="yul.hasParent.label" tooltip="yul.hasParent.tooltip" uri="emf:hasParent" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="partOf" type="uri" displayType="readOnly" label="yul.partOf.label" tooltip="yul.partOf.tooltip" multiValued="true" uri="ptop:partOf" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="hasChild" type="uri" displayType="readOnly" label="yul.hasChild.label" tooltip="yul.hasChild.tooltip" multiValued="true" uri="emf:hasChild" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="emf:hasTemplate" type="uri" label="yul.hasTemplate.label" tooltip="yul.hasTemplate.tooltip" displayType="readOnly" uri="emf:hasTemplate" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Template</control-param>
					</control>
				</field>
			</fields>
		</region>
	</regions>
	<transitions>
		<transition id="editDetails" order="10" />
		
		<group id="add" order="15" label="add.group.label" type="menu" />
		<transition id="addDepiction" label="yul.addDepiction.action.label" tooltip="yul.addDepiction.action.tooltip" eventId="addDepiction" purpose="addRelation" actionPath="/" group="add" >
			<fields>
				<field name="addDepictionConfig" type="json">
					<value>
						{
							"predefinedTypes" : ["emf:Image"],
							"selection" : "multiple",
							"relation" : ["chc:hasDepiction"]
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addAttachment" label="yul.addAttachment.action.label"  tooltip="yul.addAttachment.action.tooltip" eventId="addAttachment" purpose="addRelation" group="add" >
			<fields>
				<field name="addAttachmentConfig" type="json">
					<value>
							{
								"predefinedTypes" : ["emf:Project","yul:Activity","emf:Document","emf:Task","chc:CulturalObject","emf:Image","emf:Audio","emf:Video","chc:Sample","emf:BusinessProcess"],
								"selection" : "multiple",
								"relation" : ["emf:hasAttachment"]
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addThumbnail" group="add" />	
		<transition id="addWatchers" label="addWatchers.label" tooltip="addWatchers.tooltip" eventId="addWatchers" purpose="addRelation" group="add" >
			<fields>
				<field name="addWatcherConfig" type="json">
					<value>						
							{
								"predefinedTypes" : ["emf:User"],
								"selection" : "multiple",
								"relation" : ["emf:hasWatcher"],
								"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		
		<group id="create" order="20" label="create.group.label" type="menu" />
		<transition id="createDocument" label="yul.createDocument.action.label" tooltip="yul.createDocument.action.tooltip" eventId="createDocument" purpose="createInstance" actionPath="/" group="create" >
      		<fields>
				<field name="createDocumentConfig" type="json">
					<value>
   						{ 
							"predefinedTypes" : ["emf:Document"],  
							"contextSelectorDisabled": true
    					}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		
		<group id="exportAs" order="25" label="exportAs.group.label" type="menu" />
		<transition id="exportTabPDF" group="exportAs" />
		<transition id="exportPDF" group="exportAs" />
		<transition id="exportTabWord" group="exportAs" />
		<transition id="exportWord" group="exportAs" />
		
		<group id="print" order="30" label="print.group.label" type="menu" />
		<transition id="printTab" group="print" />
		<transition id="print" group="print" />
		
		<group id="template" order="31" label="template.group.label" type="menu" />
		<transition id="saveAsTemplate" group="template" />
		<transition id="updateTemplate" tooltip="yul.updateTemplate.action.tooltip" group="template" />
		<transition id="changeTemplate" tooltip="yul.changeTemplate.action.tooltip" group="template" />
		
		<group id="more" order="35" label="more.group.label" type="menu" />
		<transition id="move" confirmation="move.confirm" group="more" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var title = root.get('title');
							var subject = '(Moved) Sample - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_move_object_yul", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="clone" confirmation="clone.confirm" group="more" />	
		<transition id="lock" group="more" />
		<transition id="unlock" group="more" />
		<transition id="managePermissions" group="more"/>
		
		<transition id="revertVersion" order="40" tooltip="yul.revertVersion.action.tooltip" confirmation="revert.confirmation" />
		<transition id="delete" order="100" tooltip="yul.delete.tooltip" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[	
							var title = root.get('title');
							var subject = '(Deleted) Sample - ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_delete_object_yul", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
	</transitions>	
	<stateTransitions>			
		<stateTransition from="INIT" transition="create" to="CURRENT" />
		<stateTransition from="INIT" transition="clone" to="CURRENT"/>
	
		<stateTransition from="CURRENT" transition="editDetails" to="CURRENT" />	
		<stateTransition from="CURRENT" transition="createDocument" to="CURRENT" />		
		<stateTransition from="CURRENT" transition="addDepiction" to="CURRENT" />
        <stateTransition from="CURRENT" transition="addAttachment" to="CURRENT" />
		
		<stateTransition from="CURRENT" transition="addThumbnail" to="CURRENT" />
		<stateTransition from="CURRENT" transition="addWatchers" to="CURRENT" />	
		<stateTransition from="CURRENT" transition="print" to="CURRENT" />
		<stateTransition from="CURRENT" transition="printTab" to="CURRENT" />
		<stateTransition from="CURRENT" transition="exportPDF" to="CURRENT" />
        <stateTransition from="CURRENT" transition="exportTabPDF" to="CURRENT" />	
		<stateTransition from="CURRENT" transition="exportWord" to="CURRENT" />
        <stateTransition from="CURRENT" transition="exportTabWord" to="CURRENT" />
		<stateTransition from="CURRENT" transition="move" to="CURRENT" />
		<stateTransition from="CURRENT" transition="clone" to="CURRENT" />
		<stateTransition from="CURRENT" transition="lock" to="CURRENT" />
		<stateTransition from="CURRENT" transition="unlock" to="CURRENT" />
		<stateTransition from="CURRENT" transition="saveAsTemplate" to="CURRENT" />
		<stateTransition from="CURRENT" transition="changeTemplate" to="CURRENT" />
		<stateTransition from="CURRENT" transition="updateTemplate" to="CURRENT" />
		<stateTransition from="CURRENT" transition="revertVersion" to="CURRENT" />
		<stateTransition from="CURRENT" transition="managePermissions" to="CURRENT" />
		<stateTransition from="CURRENT" transition="createInContext" to="CURRENT" />
		
		<stateTransition from="CURRENT" transition="delete" to="CURRENT" />
   </stateTransitions>
    
	<allowedChildren>
		<child type="document" id="all"/>
		<child type="object" id="yulAudio"/>
		<child type="object" id="yulVideo"/>
		<child type="object" id="yulImage"/>
		<child type="task" id="all"/>
	</allowedChildren>
	
	<labels>
	  	<label id="SAMPLE_OBJECT_TOOLTIP_HEADER_YUL">
			<value lang="en"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							<span data-title="${get([title])}">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
						<label>Type: </label>
						<span data-property="type">${CL([type])}</span>
					</span>
					${if(${get([isTakenFrom])}<>null).then(
						<span class="tooltip-row">
							<label>Cultural object that the sample is taken from: </label>
							<span data-property="isTakenFrom">${objectProperty(${get([isTakenFrom])})}</span>
						</span>
					)}
					${if(${get([sampleMaterial])}<>null).then(
						<span class="tooltip-row">
							<label>Sample material: </label>
							<span data-property="sampleMaterial">${get([sampleMaterial])}</span>
						</span>
					)}
					${if(${get([collectedBy])}<>null).then(
						<span class="tooltip-row">
							<label>Collected by: </label>
							<span data-property="collectedBy">${user(${get([collectedBy])})}</span>
						</span>
					)}
					${if(${get([dateCollected])}<>null).then(
						<span class="tooltip-row">
							<label>Date collected: </label>
							<span data-property="dateCollected">${date([dateCollected]).format(MM/dd/yyyy)}</span>
						</span>
					)}
					<span class="tooltip-row">
						<label>System modified by: </label>
						<span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
					</span>
					<span class="tooltip-row">
						<label>System modified on: </label>
						<span data-property="modifiedOn">${date([modifiedOn]).format(MM/dd/yyyy, HH:mm)}</span>
					</span>
			</span>)})}]]></value>
    	</label>
   		<label id="SAMPLE_DEFAULT_HEADER_YUL">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				${var.newRow= ${or(${if(${get([dateCollected])} <> null).then(true).else(false)} OR ${if(${get([collectedBy])} <> null).then(true).else(false)})}}
				<span><img src="${thumbnailUri(64)}"/></span>
				<span>
					${if(${get([collectedBy])} <> null).then(Collected&nbsp;)}
					${if(${get([dateCollected])} <> null).then(on: <span>${date([dateCollected]).format(MM/dd/yyyy)}</span>&nbsp;)}
					${if(${user(${get([collectedBy])})}<>null).then(<span data-property="collectedBy">${objectProperty(${get([collectedBy])})}</span>)}
					${if(${var.newRow}).then(<br />)}
					<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						<span data-property="type">${CL([type])}</span>:&nbsp;
						<span data-property="title">${get([title])}</span>
					</a>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
					${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
				</span>
			)}]]></value>
		</label>
		<label id="SAMPLE_COMPACT_HEADER_YUL">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(16)}"/></span>
				<span class="truncate-element">
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}" style="vertical-align:baseline;">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						<span data-property="type">${CL([type])}</span>:&nbsp;
						<span data-property="title">${get([title])}</span>
					</a>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
				</span>
		)}]]></value>
		</label>		
		<label id="SAMPLE_BREADCRUMB_HEADER_YUL">
            <value lang="en"><![CDATA[${eval(
            ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
			<span><img src="${thumbnailUri(16)}"/></span>
			<span>
				${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
				<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
					<span data-property="type">${CL([type])}</span>:&nbsp;
					<span data-property="title">${get([title])}</span>
				</a>
			</span>		
            )}]]></value>
		</label>
    </labels>
</definition>
