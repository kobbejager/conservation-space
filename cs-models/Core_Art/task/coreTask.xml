<?xml version="1.0" ?>
<definition id="coreTask" parentId="baseTask" type="task">
	<fields>
		<field name="default_header" type="ANY" label="TASK_DEFAULT_HEADER_CORE" />
		<field name="compact_header" type="ANY" label="TASK_COMPACT_HEADER_CORE" />
		<field name="breadcrumb_header" type="ANY" label="TASK_BREADCRUMB_HEADER_CORE" />
		<field name="tooltip_header" type="ANY" label="TASK_TOOLTIP_HEADER_CORE" />

		<field name="title" type="an..1024" displayType="system" mandatory="false" >
			<value>Task</value>
		</field>	
		<field name="uri" displayType="system" />
		<field name="poolAssignees" displayType="system" />
	</fields>
	<regions>	
		<region id="generalData" displayType="editable" order="10" label="core.generalData.region.label">
			<fields>
				<field name="subType" type="ANY" displayType="editable" mandatory="true" codelist="CL28" uri="chcart:subClassification" >
					<condition id="readonlyFields" renderAs="READONLY">+[activityId]</condition>
				</field>
				<field name="departmentName" type="an..50" label="core.departmentName.label" tooltip="core.department.tooltip" displayType="editable" uri="emf:departmentName" >
					<control id="DEFAULT_VALUE_PATTERN">
						<control-param type="default_value_pattern" id="template" name="template">$[emf:createdBy.departmentName]</control-param>
					</control>
				</field>
				<field name="assignee" label="core.assignee.label" tooltip="core.assignee.tooltip" >
					<condition id="readonlyFields" renderAs="READONLY">+[assignee] AND [status] NOTIN ('NEW')</condition>
					<condition id="hideAssigneesPicker" renderAs="HIDDEN">[multiInstanceActivity] IN ('true')</condition> 
					<condition id="mandatoryAssigneesPicker" renderAs="MANDATORY">[status] IN ('NEW') AND [multiInstanceActivity] IN ('false')</condition>
					<value>${currentUser.id}</value>
				</field>
				<field name="assignees" type="uri" displayType="editable" label="core.assignees.label" tooltip="core.assignees.tooltip" multiValued="true" previewEmpty="false" override="true" >
					<condition id="hideAssigneesPicker" renderAs="HIDDEN">[status] NOTIN ('NEW') OR [multiInstanceActivity] IN ('false')</condition>
					<condition id="mandatoryAssigneesPicker" renderAs="MANDATORY">[status] IN ('NEW') AND [multiInstanceActivity] IN ('true')</condition>
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
						<control-param id="restrictions" name="restrictions">{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}</control-param>
					</control>
				</field>
				<field name="chc:documents" type="uri" mandatory="true" displayType="editable" label="core.documents.label" tooltip="core.documentsTask.tooltip" multiValued="true" uri="chc:documents" >
					<condition id="optional" renderAs="OPTIONAL">[subType] IN ('CORE28011','CORE28012','CORE28999') OR +[activityId]</condition>
					<condition id="hiddenField" renderAs="HIDDEN">([subType] IN ('CORE28011','CORE28012','CORE28999')) OR +[activityId]</condition>
					<control id="PICKER">
						<control-param id="range" name="range">chc:CulturalObject</control-param>
						<control-param id="restrictions" name="restrictions">{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["CURRENT"]}</control-param>
					</control>
				</field>
				<field name="description" tooltip="core.description.tooltip" uri="dcterms:description" />	
				<field name="priority" tooltip="core.priority.tooltip" rnc="${to.dmsConvert(CL29,value,extra1)}|${from.dmsConvert(CL29,extra1,value)}" >
					<value>0006-000084</value>
				</field>
				<field name="plannedStartDate" type="date" label="core.plannedStartDate.label" tooltip="core.plannedStartDate.tooltip" >
					<value>${today}</value>
				</field>
				<field name="plannedEndDate" type="date" label="core.plannedEndDate.label" tooltip="core.plannedEndDate.tooltip" />
			</fields>
		</region>
		<region id="systemData" displayType="editable" order="20" label="core.systemData.region.label">
			<fields>
				<field name="type" codelist="CL7" tooltip="core.type.tooltip" >
					<value>FC236003</value>
				</field>		
				<field name="identifier" tooltip="core.identifier.tooltip" rnc="${eval(TS${seq({+tsSequence})})}" >
					<condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('NEW')</condition>
				</field>
				<field name="completedOn" type="date" tooltip="core.completedOn.tooltip" >
					<condition id="hiddenFields" renderAs="HIDDEN">[status] NOTIN ('COMPLETED')</condition>
				</field>
				<field name="outcome" tooltip="core.outcome.tooltip" >
					<condition id="hiddenFields" renderAs="HIDDEN">[status] NOTIN ('COMPLETED')</condition>
				</field>
				<field name="status" tooltip="core.status.tooltip" />
				<field name="emf:version" tooltip="core.version.tooltip" /> 
				<field name="integrated" type="boolean" displayType="hidden" label="emf.integrated.label" uri="emf:integrated"/>
				<!-- object properties (relationships) -->
				<field name="createdOn" tooltip="core.createdOn.tooltip" />
				<field name="createdBy" tooltip="core.createdBy.tooltip" />
				<field name="modifiedOn" label="core.modifiedOn.label" tooltip="core.modifiedOn.tooltip" />
				<field name="modifiedBy" label="core.modifiedBy.label" tooltip="core.modifiedBy.tooltip" />
				<field name="lockedBy" tooltip="core.lockedBy.tooltip" />
				<field name="processes" type="uri" displayType="editable" label="core.processes.label" tooltip="core.processes.tooltip" multiValued="true" previewEmpty="false" uri="emf:processes" >
					<condition id="readonlyFields" renderAs="READONLY">+[activityId]</condition>
					<control id="PICKER">
						<control-param id="range" name="range">chc:CulturalObject,emf:Document</control-param>
					</control>
				</field>
				<field name="hasAttachment" type="uri" displayType="editable" label="core.hasAttachment.label" tooltip="core.hasAttachment.tooltip" multiValued="true" uri="emf:hasAttachment" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video,chc:Sample,ptop:Organization,chc:Person</control-param>
					</control>
				</field>
				<field name="attachmentOf" type="uri" displayType="editable" label="core.attachmentOf.label" tooltip="core.attachmentOf.tooltip" multiValued="true" uri="emf:isAttachedTo" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Project,chc:ConservationActivity,chc:Exhibition,emf:Task,emf:BusinessProcess,chc:CulturalObject,chc:Sample,emf:Document,emf:Image,emf:Audio,emf:Video,emf:Issue,ptop:Organization,chc:Person</control-param>
					</control>
				</field>
				<field name="hasWatcher" label="core.hasWatcher.label" tooltip="core.hasWatcher.tooltip" />
				<field name="hasThumbnail" label="core.hasThumbnail.label" tooltip="core.hasThumbnail.tooltip" />
				<field name="parentOf" tooltip="core.parentOf.tooltip" previewEmpty="false" />
				<field name="hasParent" tooltip="core.hasParent.tooltip" />
				<field name="partOf" displayType="readOnly" tooltip="core.partOf.tooltip" />
				<field name="hasChild" tooltip="core.hasChild.tooltip" previewEmpty="false" />
				<field name="emf:hasTemplate" label="core.hasTemplate.label" tooltip="core.hasTemplate.tooltip" />
			</fields>
		</region>
	</regions>
	<transitions>
		<transition id="create" label="create" purpose="create">
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(New assignment) Task: ' + subType;

							//extract assignee
							var assignee = root.get('assignee');

							//add all users to recipients
							var recipients = [];
							recipients.push(assignee.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_assignee_object_core", recipients, context, null);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition> 
	
		<transition id="editDetails" order="10" actionPath="/actions" />
		<transition id="reassign" order="15" actionPath="/" confirmation="reassign.confirm" >
			<fields>
				<field name="beforeReasing" type="an..200" displayType="system" >
					<value>
						<![CDATA[
							//add to context old assignee
							context.put('previousAsignee', root.get('assignee'));
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">before</control-param>
						<control-param id="async" name="async">false</control-param>
					</control>
				</field>
				<field name="onAssignTask" type="an..200" displayType="system" >
					<value>
						<![CDATA[
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Reassigned) Task: ' + subType;
							
							//extract watchers
							var recipients = [];
							var watchers = root.get('hasWatcher');
							if(watchers != null){
								for(var i = 0; i < watchers.length; i++){
								recipients.push(watchers[i].toString());
								}
							}
							//extract assignee, createdBy and old assignee
							recipients.push(root.get('assignee').toString());
							recipients.push(root.get('createdBy').toString());
							recipients.push(context.get('previousAsignee'));
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_reassigned_object_core", recipients, context, null);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="start" order="20" tooltip="core.start.tooltip" actionPath="/" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Started) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(root.get('createdBy').toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_start_object_core", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="suspend" order="25" tooltip="core.suspend.action.tooltip" confirmation="suspend.confirm" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[						
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Suspended) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(root.get('createdBy').toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_suspend_object_core", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="restart" order="30" tooltip="core.restart.action.tooltip" confirmation="restart.confirm" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Restarted) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(root.get('createdBy').toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_restart_object_core", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="stop" order="35" tooltip="core.stop.tooltip" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Stopped) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}
							recipients.push(root.get('createdBy').toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_stop_object_core", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="completeTask" order="40" tooltip="core.complete-task.tooltip" confirmation="complete.confirm" actionPath="/" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Completed) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}
							recipients.push(root.get('createdBy').toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_complete_object_core", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="createSubTask" order="45" label="core.createSubTask.action.label" tooltip="core.createTask.action.tooltip" purpose="createInstance">
      		<fields>
				<field name="createSubTaskConfig" type="json">
					<value>
						{ 
							"predefinedTypes" : ["emf:Task"],
							"contextSelectorDisabled": true
						}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
	
		<!-- workflow transitions -->
		<transition id="finish" order="46" label="core.finish.action.label" tooltip="core.finish.action.wf.tooltip" confirmation="complete.wf.task.confirm" purpose="bpmTransition" />
		<transition id="rejectMovement" order="47" label="core.rejectMovement.action.label" tooltip="core.rejectMovement.action.wf.tooltip" confirmation="complete.wf.task.confirm" purpose="bpmTransition" />
		<transition id="amendPhotos" order="48" label="core.amendPhotos.action.label" tooltip="core.amendPhotos.action.wf.tooltip" confirmation="complete.wf.task.confirm" purpose="bpmTransition" />
		<transition id="rejectTask" order="49" label="core.rejectTask.action.label" tooltip="core.rejectTask.action.wf.tooltip" confirmation="complete.wf.task.confirm"  purpose="bpmTransition" />
		<transition id="takeMoreSamples" order="50" label="core.takeMoreSamples.action.label" tooltip="core.takeMoreSamples.action.wf.tooltip" confirmation="complete.wf.task.confirm" purpose="bpmTransition" />
		<transition id="approveAndPublish" order="51" label="core.approveAndPublish.action.label" tooltip="core.approveAndPublish.action.wf.tooltip" confirmation="complete.wf.task.confirm" purpose="bpmTransition" />
		<transition id="implementRecommendations" order="65" label="core.implementRecommendations.action.label" tooltip="core.implementRecommendations.action.wf.tooltip" confirmation="complete.wf.task.confirm" purpose="bpmTransition" />

		<group id="add" order="100" label="add.group.label" type="menu" />	
		<transition id="addCulturalObject" label="core.addCulturalObject.action.label" tooltip="core.addCulturalObject.action.tooltip"  purpose="addRelation" actionPath="/" group="add">
			<fields>
				<field name="addCOConfig" type="json">
					<value>
							{
								"predefinedTypes" : ["chc:CulturalObject"],
								"selection" : "multiple",
								"relation" : ["chc:documents"],
								"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["CURRENT"]}
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addAttachment" label="core.addAttachment.action.label" tooltip="core.addAttachment.action.tooltip" purpose="addRelation" group="add" >
			<fields>
				<field name="addAttachmentConfig" type="json">
					<value>
							{
								"predefinedTypes" : ["emf:Document","emf:Image","emf:Audio","emf:Video","chc:Sample","ptop:Organization","chc:Person"],
								"selection" : "multiple",
								"relation" : ["emf:hasAttachment"]
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addThumbnail" group="add" />	
		<transition id="addWatchers" label="addWatchers.label" tooltip="addWatchers.tooltip"  purpose="addRelation" group="add" >
			<fields>
				<field name="addWatcherConfig" type="json">
					<value>						
							{
								"predefinedTypes" : ["emf:User"],
								"selection" : "multiple",
								"relation" : ["emf:hasWatcher"],
								"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		
		<group id="exportAs" order="105" label="exportAs.group.label" type="menu" />
		<transition id="exportTabPDF" group="exportAs" />
		<transition id="exportTabWord" group="exportAs" />
		
		<group id="print" order="110" label="print.group.label" type="menu" />
		<transition id="printTab" group="print" />
		
		<group id="template" order="111" label="template.group.label" type="menu" />
		<transition id="saveAsTemplate" group="template" />
		<transition id="updateTemplate" tooltip="core.updateTemplate.action.tooltip" label="updateTemplate.label"  purpose="updateTemplate" confirmation="confirmation.update_template" group="template" />
		<transition id="changeTemplate" tooltip="core.changeTemplate.action.tooltip" label="changeTemplate.label"  purpose="changeTemplate" group="template" />
		
		<group id="more" order="115" label="more.group.label" type="menu" />
		<transition id="move" confirmation="move.confirm" group="more" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[	
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Moved) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}	
							recipients.push(root.get('createdBy').toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_move_object_core", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                    </control>
                </field>
			</fields>
		</transition>
		<transition id="clone" purpose="clone" tooltip="clone.tooltip" confirmation="clone.confirm" group="more" />		
		<transition id="lock" group="more" />
		<transition id="unlock" actionPath="/" group="more" />
		<transition id="managePermissions" group="more" />

		<transition id="delete" order="120" label="delete.label" tooltip="core.delete.tooltip"  purpose="delete" confirmation="project_delete.confirm" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[	
							var subType = codelist.getDescription(28, root.get('subType'), 'en');
							var subject = '(Deleted) Task: ' + subType;
							
							//extract warchers and crearedBy users
							var watchers = root.get('hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}
							recipients.push(root.get('createdBy').toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_delete_object_core", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
	</transitions>	 

	<stateTransitions>
		<stateTransition from="INIT" transition="create" to="NEW" />
		<stateTransition from="INIT" transition="clone" to="NOT_YET_STARTED"/>
		<stateTransition from="NEW" transition="create" to="NOT_YET_STARTED" />

		<!-- NOT_YET_STARTED-->
		<stateTransition from="NOT_YET_STARTED" transition="editDetails" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="reassign" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="start" to="IN_PROGRESS" />
		<stateTransition from="NOT_YET_STARTED" transition="stop" to="STOPPED" />
		<stateTransition from="NOT_YET_STARTED" transition="createSubTask" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="addCulturalObject" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="addAttachment" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="addThumbnail" to="NOT_YET_STARTED" />	
		<stateTransition from="NOT_YET_STARTED" transition="addWatchers" to="NOT_YET_STARTED"/>
		<stateTransition from="NOT_YET_STARTED" transition="exportTabPDF" to="NOT_YET_STARTED"/>
		<stateTransition from="NOT_YET_STARTED" transition="exportTabWord" to="NOT_YET_STARTED"/>
		<stateTransition from="NOT_YET_STARTED" transition="printTab" to="NOT_YET_STARTED"/>
		<stateTransition from="NOT_YET_STARTED" transition="saveAsTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="updateTemplate" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="changeTemplate" to="NOT_YET_STARTED" />
		
		<stateTransition from="NOT_YET_STARTED" transition="move" to="NOT_YET_STARTED"/>
		<stateTransition from="NOT_YET_STARTED" transition="clone" to="NOT_YET_STARTED"/>
		<stateTransition from="NOT_YET_STARTED" transition="lock" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="unlock" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="managePermissions" to="NOT_YET_STARTED" />
		<stateTransition from="NOT_YET_STARTED" transition="createInContext" to="NOT_YET_STARTED" />	

		<stateTransition from="NOT_YET_STARTED" transition="delete" to="NOT_YET_STARTED"/>

		<!-- in progress-->
		<stateTransition from="IN_PROGRESS" transition="editDetails" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="reassign" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="stop" to="STOPPED" />
		<stateTransition from="IN_PROGRESS" transition="suspend" to="ON_HOLD" />
		<stateTransition from="IN_PROGRESS" transition="completeTask" to="COMPLETED" />
		<stateTransition from="IN_PROGRESS" transition="createSubTask" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="addCulturalObject" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="addAttachment" to="IN_PROGRESS" />		
		<stateTransition from="IN_PROGRESS" transition="addThumbnail" to="IN_PROGRESS" />	
		<stateTransition from="IN_PROGRESS" transition="addWatchers" to="IN_PROGRESS"/> 
		<stateTransition from="IN_PROGRESS" transition="exportTabPDF" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="exportTabWord" to="IN_PROGRESS"/>	
		<stateTransition from="IN_PROGRESS" transition="printTab" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="saveAsTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="updateTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="changeTemplate" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="move" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="clone" to="IN_PROGRESS"/>
		<stateTransition from="IN_PROGRESS" transition="lock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="unlock" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="managePermissions" to="IN_PROGRESS" />
		<stateTransition from="IN_PROGRESS" transition="createInContext" to="IN_PROGRESS" />	

		<!-- on hold-->
		<stateTransition from="ON_HOLD" transition="editDetails" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="reassign" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="restart" to="IN_PROGRESS" />
		<stateTransition from="ON_HOLD" transition="stop" to="STOPPED" />
		<stateTransition from="ON_HOLD" transition="createSubTask" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="addCulturalObject" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="addAttachment" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="addThumbnail" to="ON_HOLD" />	
		<stateTransition from="ON_HOLD" transition="addWatchers" to="ON_HOLD"/> 
		<stateTransition from="ON_HOLD" transition="exportTabPDF" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="exportTabWord" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="printTab" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="saveAsTemplate" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="move" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="clone" to="ON_HOLD"/>
		<stateTransition from="ON_HOLD" transition="lock" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="unlock" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="managePermissions" to="ON_HOLD" />
		<stateTransition from="ON_HOLD" transition="createInContext" to="ON_HOLD" />	
		
		<!-- stopped-->
		<stateTransition from="STOPPED" transition="exportTabPDF" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="exportTabWord" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="printTab" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="clone" to="STOPPED"/>
		<stateTransition from="STOPPED" transition="managePermissions" to="STOPPED" />
		
		<!-- complate-->
		<stateTransition from="COMPLETED" transition="exportTabPDF" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="exportTabWord" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="printTab" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="clone" to="COMPLETED"/>
		<stateTransition from="COMPLETED" transition="managePermissions" to="COMPLETED" />

	</stateTransitions>
	
	<allowedChildren>
		<child type="document" id="all"/>
		<child type="object" id="Sample"/>
		<child type="object" id="coreAudio"/>
		<child type="object" id="coreVideo"/>
		<child type="object" id="coreImage"/>
		<child type="task" id="all"/>
	</allowedChildren>
	
	<labels>	
		<label id="TASK_TOOLTIP_HEADER_CORE">
			<value lang="en"><![CDATA[${eval(
                <span class="thumbnail-content">
                    <img class="thumbnail" src="${thumbnailUri(64)}" />
                </span>
                <span class="tooltip-data">
                    <span class="tooltip-header">
                        <a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id}" data-uid="${id.uid}">
                            <span data-type="${CL([type])}">${CL([type])}</span> 
                        </a>
                    </span>
					<span class="tooltip-row">
                        <label>Sub-classification: </label>
                        <span data-property="subType">${CL([subType])}</span>
                    </span>
					${if(${get([departmentName])}<>null).then(
						<span class="tooltip-row">
							<label>Department: </label>
							<span data-property="departmentName">${CL([departmentName])}</span>
						</span>
					)}
					<span class="tooltip-row">
                        <label>Status: </label>
                        <span data-property="status">${CL([status])}</span>
                    </span>
					<span class="tooltip-row">
						<label>Priority: </label>
						<span data-property="priority">${CL([priority])}</span>
					</span>
					${if(${get([plannedStartDate])}<>null).then(
						<span class="tooltip-row">
							<label>Start date: </label>
							<span data-property="plannedStartDate">${date([plannedStartDate])}</span>
						</span>
					)}	
					${if(${get([plannedEndDate])}<>null).then(
						<span class="tooltip-row">
							<label>End date: </label>
							<span data-property="plannedEndDate">${date([plannedEndDate])}</span>
						</span>
					)}
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>                      
						</span>
					)}	
                </span>
            )}]]></value>
		</label>
		<label id="TASK_DEFAULT_HEADER_CORE">
			<value lang="en">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(64)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					Priority:&nbsp;<span>${CL([priority])}</span>&nbsp;
					${if(${get([status])} <> NEW).then((<span data-property="status">${CL([status])}</span>))}
					<br>
					<span class="truncate-element">
						<b>
							<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
								${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
								<span data-property="subType">${CL([subType])}</span>
							</a>
						</b>	
						${if(${get([plannedEndDate])} <> null).then(,&nbsp;Due date:&nbsp;<span>${date([plannedEndDate])}</span>)}
						<br>
						Assigned&nbsp;to:&nbsp;<span data-property="assignee">${if(${get([assignee])} == null).then(Unclaimed).else(${objectProperty(${get([assignee])})})}</span>
						${if(${var.isVersion}).then(
							&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
						)}	
					</span>
				</span>
			)}]]></value>
		</label>
		<label id="TASK_COMPACT_HEADER_CORE">
			<value lang="en">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					<span class="truncate-element">
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
						<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}" style="vertical-align:baseline;">
							${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
							<span data-property="subType">${CL([subType])}</span>
						</a>
						${if(${get([status])} <> NEW).then(&nbsp;(<span data-property="status">${CL([status])}</span>))}
						${if(${var.isVersion}).then(
							&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
						)}
					</span>
				</span>)}]]>
			</value>
		</label>
		<label id="TASK_BREADCRUMB_HEADER_CORE">
			<value lang="en">
				<![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						<span data-property="subType">${CL([subType])}</span>
					</a>
				</span>		
            )}]]></value>
		</label>		
	</labels>		
</definition>
