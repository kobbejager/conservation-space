<?xml version="1.0"?>
<definition id="Sample" parentId="baseObject" type="object">
    <fields>
		<!-- Sample -->
		<field name="default_header" type="ANY" label="OBJECT_DEFAULT_HEADER_SAMPLE" />
        <field name="compact_header" type="an..4096" label="OBJECT_COMPACT_HEADER_SAMPLE" />
		<field name="tooltip_header" type="ANY" label="OBJECT_TOOLTIP_HEADER_SAMPLE" />
		<field name="breadcrumb_header" type="an..4096" label="OBJECT_BREADCRUMB_HEADER_SAMPLE" />

       <field name="rdf:type" type="URI" displayType="system" uri="rdf:type" >
            <value>http://www.sirma.com/ontologies/2016/02/culturalHeritageConservation#Sample</value>
        </field>
		
		<field name="identifier" type="an..50" displayType="system" />
        <field name="type" type="an..50" displayType="system" />
        <field name="title" type="an..180" displayType="system"/>
		<field name="description" type="an..1024" displayType="system" />
		<field name="status" type="an..50" displayType="system" />
		<field name="emf:version" type="an..10" displayType="system" />
		<field name="createdOn" type="dateTime" displayType="system"  />
		<field name="createdBy" type="uri" displayType="system" />
		<field name="modifiedOn" type="dateTime" displayType="system"/>
		<field name="modifiedBy" type="uri" displayType="system" />
		<field name="hasParent" type="uri" displayType="system" />
		<field name="hasThumbnail" type="uri" displayType="system" />
		<field name="outcome" type="an..50" displayType="system" />
		<field name="completedOn" type="datetime" displayType="system" />
		<field name="uri" type="an..50" displayType="system" />
		<field name="hasRevision" type="uri" displayType="system" />
		<field name="isRevisionOf" type="uri" displayType="system" />
		<field name="lastPublishedRevision" type="uri" displayType="system" />
		<field name="lastRevision" type="uri" displayType="system" />
		<field name="nextRevision" type="uri" displayType="system" />
		<field name="previousRevision" type="uri" displayType="system" />
		<field name="partOf" type="uri" displayType="system" />
		<field name="emf:hasTemplate" type="uri" displayType="system" />
		<field name="lockedBy" type="uri" displayType="system" />
		<field name="parentOf" type="uri" displayType="system" />
		<field name="hasChild" type="uri" displayType="system" />
		<field name="hasWatcher" type="uri" displayType="system" override="true" />
		<field name="integrated" type="boolean" displayType="system" />
    </fields>
	<regions>	
		<region id="generalData" order="10" displayType="editable" label="core.generalData.region.label">
			<fields>
				<field name="title" type="an..180" mandatory="true" displayType="editable" label="core.title.label" tooltip="core.title.tooltip" uri="dcterms:title" />
				<field name="chc:isTakenFrom" type="uri" displayType="editable" mandatory="true" label="core.isTakenFrom.label" tooltip="core.isTakenFrom.tooltip" uri="chc:isTakenFrom" >
					<control id="PICKER">
						<control-param id="range" name="range">chc:CulturalObject</control-param>
						<control-param id="restrictions" name="restrictions">
							{"field": "emf:status", "operator": "not_in", "type": "codeList", "value": ["OBSOLETE","ARCHIVED"]}
						</control-param>
					</control>
				</field>
				<field name="chc:sampleSite" type="an..1024" mandatory="true" displayType="editable" label="core.sampleSite.label" tooltip="core.sampleSite.tooltip" uri="chc:sampleSite" />
				<field name="chc:samplingDate" type="date" mandatory="true" displayType="editable" label="core.samplingDate.label" tooltip="core.samplingDate.tooltip" uri="chc:samplingDate" />
				<field name="description" type="an..1024" displayType="editable" label="core.description.label" tooltip="core.description.tooltip" uri="dcterms:description" />
				<field name="chc:sampleStorageLocation" type="an..1024" displayType="editable" label="core.sampleStorageLocation.label" tooltip="core.sampleStorageLocation.tooltip" uri="chc:sampleStorageLocation" />
			</fields>	
		</region>
		<region id="systemData" order="20" displayType="editable" label="core.systemData.region.label">
			<fields>
				<field name="type" type="an..20" displayType="readonly" label="core.type.label" tooltip="core.type.tooltip" codelist="CL7" uri="emf:type" >
					<value>FC236012</value>
				</field>
				<field name="identifier" type="an..50" displayType="readOnly" label="core.identifier.label" tooltip="core.identifier.tooltip" rnc="${eval(SMP${seq({+smpSequence})})}" uri="dcterms:identifier">
					<condition id="hiddenFields" renderAs="HIDDEN">[identifier] IN ('NO_ID')</condition>
				</field>
				<field name="status" type="an..20" displayType="readOnly" codelist="CL116" label="core.status.label" tooltip="core.status.tooltip" uri="emf:status" />
				<field name="emf:version" type="an..10" displayType="readOnly" label="object.version" tooltip="core.version.tooltip" uri="emf:version"/> 
				<field name="integrated" type="boolean" displayType="hidden" label="emf.integrated.label" override="true" uri="emf:integrated" />
				<field name="createdOn" type="dateTime" displayType="readOnly" label="core.createdOn.label" tooltip="core.createdOn.tooltip" uri="emf:createdOn" />
				<field name="createdBy" type="uri" displayType="readOnly" label="core.createdBy.label" tooltip="core.createdBy.tooltip" uri="emf:createdBy" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="modifiedOn" type="datetime" displayType="readOnly" label="core.modifiedOn.label" tooltip="core.modifiedOn.tooltip" uri="emf:modifiedOn"/>
				<field name="modifiedBy" type="uri" displayType="readOnly" label="core.modifiedBy.label" tooltip="core.modifiedBy.tooltip" uri="emf:modifiedBy">
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				<field name="lockedBy" type="uri" displayType="readonly" label="core.lockedBy.label" tooltip="core.lockedBy.tooltip" previewEmpty="false" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
					</control>
				</field>
				
				<field name="hasThumbnail" type="uri" displayType="readOnly" label="core.hasThumbnail.label" tooltip="core.hasThumbnail.tooltip" uri="emf:hasThumbnail" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Image</control-param>
					</control>
				</field>
				<field name="chc:hasDepiction" type="uri" displayType="editable" label="core.hasDepiction.label" tooltip="core.hasDepiction.tooltip" multiValued="true" 
				uri="chc:hasDepiction" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Image</control-param>
					</control>
				</field>
				<field name="hasAttachment" type="uri" displayType="readOnly" label="core.hasAttachment.label" tooltip="core.hasAttachment.tooltip" multiValued="true" uri="emf:hasAttachment" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Document,emf:Image,emf:Audio,emf:Video</control-param>
					</control>
				</field>
				<field name="isAttachedTo" type="uri" displayType="editable" label="core.attachmentOf.label" tooltip="core.attachmentOf.tooltip" multiValued="true" 
				uri="emf:isAttachedTo" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Project,chc:ConservationActivity,emf:Task,emf:BusinessProcess,chc:CulturalObject,chc:Sample,emf:Document,emf:Issue</control-param>
					</control>
				</field>
				<field name="hasWatcher" type="uri" displayType="editable" label="core.hasWatcher.label" tooltip="core.hasWatcher.tooltip" multiValued="true" uri="emf:hasWatcher" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:User</control-param>
						<control-param id="restrictions" name="restrictions">
							{"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						</control-param>
					</control>
				</field>
				<field name="parentOf" type="uri" displayType="readOnly" label="core.parentOf.label" tooltip="core.parentOf.tooltip" multiValued="true" uri="emf:parentOf" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="hasParent" type="uri" displayType="readOnly" label="core.hasParent.label" tooltip="core.hasParent.tooltip" uri="emf:hasParent" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="partOf" type="uri" displayType="readOnly" label="core.partOf.label" tooltip="core.partOf.tooltip" multiValued="true" uri="ptop:partOf" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="hasChild" type="uri" displayType="readOnly" label="core.hasChild.label" tooltip="core.hasChild.tooltip" multiValued="true" uri="emf:hasChild" >
					<control id="PICKER">
						<control-param id="range" name="range"></control-param>
					</control>
				</field>
				<field name="emf:hasTemplate" type="uri" displayType="readOnly" label="core.hasTemplate.label" tooltip="core.hasTemplate.tooltip" uri="emf:hasTemplate" >
					<control id="PICKER">
						<control-param id="range" name="range">emf:Template</control-param>
					</control>
				</field>
			</fields>
		</region>
	</regions>
	<transitions>
		<transition id="editDetails" order="10" />
		
		<group id="create" order="15" label="create.group.label" type="menu" />
		<transition id="uploadImage" label="core.uploadImage.action.label" tooltip="core.uploadImage.action.tooltip" eventId="uploadImage" purpose="createInstance" actionPath="/" group="create" >
      		<fields>
				<field name="uploadImageConfig" type="json">
					<value>
						{ 
							"predefinedTypes" : ["emf:Image"],
							"contextSelectorDisabled": true
						}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		<transition id="createDocument" label="core.createDocument.action.label" tooltip="core.createDocument.action.tooltip" eventId="createDocument" purpose="createInstance" group="create" >
      		<fields>
				<field name="createDocConfig" type="json">
					<value>
   						{ 
							"predefinedTypes" : ["emf:Document"],  
							"contextSelectorDisabled": true
    					}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		<transition id="createTask" label="core.createTask.action.label" tooltip="core.createTask.action.tooltip" eventId="createTask" purpose="createInstance" group="create" >
      		<fields>
				<field name="createDocConfig" type="json">
					<value>
   						{ 
							"predefinedTypes" : ["emf:Task"],  
							"contextSelectorDisabled": true
    					}
  			 	  </value>
 		      	  <control id="configuration" />
 		   		</field>
 		   </fields>
		</transition>
		
		<group id="add" order="20" label="add.group.label" type="menu" />
		<transition id="addDepiction" label="core.addDepiction.action.label" tooltip="core.addDepiction.action.tooltip" eventId="addDepiction" purpose="addRelation" group="add">
			<fields>
				<field name="addDepictionConfig" type="json">
					<value>
							{
								"predefinedTypes" : ["emf:Image"],
								"selection" : "multiple",
								"relation" : ["chc:hasDepiction"]
							}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addAttachment" label="core.addAttachment.action.label"  tooltip="core.addAttachment.action.tooltip" eventId="addAttachment" purpose="addRelation" group="add">
			<fields>
				<field name="attachToConfig" type="json">
					<value>
						{
							"predefinedTypes" : ["emf:Document","emf:Image","emf:Audio","emf:Video"],
							"selection" : "multiple",
							"relation" : ["emf:hasAttachment"]
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addThumbnail" group="add" />
		<transition id="addWatchers" group="add" >
			<fields>
				<field name="addAttachmentConfig" type="json">
					<value>						
						{
							"predefinedTypes" : ["emf:User"],
							"selection" : "multiple",
							"relation" : ["emf:hasWatcher"],
							"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		
		<group id="exportAs" order="25" label="exportAs.group.label" type="menu" />
		<transition id="exportTabPDF" group="exportAs" />
		<transition id="exportTabWord" group="exportAs" />
		
		<group id="print" order="30" label="print.group.label" type="menu" />
		<transition id="printTab" group="print" />
		
		<group id="template" order="35" label="template.group.label" type="menu" />
		<transition id="saveAsTemplate" group="template" />
		<transition id="updateTemplate" tooltip ="core.updateTemplate.action.tooltip" group="template" />
		<transition id="changeTemplate" tooltip="core.changeTemplate.action.tooltip" group="template" />
		
		<group id="more" order="40" label="more.group.label" type="menu" />
		<transition id="move" group="more" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
					<value>
						<![CDATA[	
							var type = codelist.getDescription(7, root.get('type'), 'en');
							var title = root.get('title');
							var subject = '(Moved) ' + type + ': ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('emf:hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_move_object_core", recipients, context);
						]]>
					</value>
					<control id="SCRIPT">
						<control-param id="phase" name="phase">after</control-param>
						<control-param id="async" name="async">true</control-param>
					</control>
				</field>
			</fields>
		</transition>
		<transition id="clone" group="more" />
		<transition id="lock" group="more" />
		<transition id="unlock" actionPath="/" group="more" />
		<transition id="managePermissions" group="more" />
		
		<transition id="revertVersion" order="45" />
		<transition id="delete" order="100" confirmation="deleteCS.confirm" >
			<fields>
				<field name="sendMail" type="an..200" displayType="system" >
                    <value>
						<![CDATA[	
							var type = codelist.getDescription(7, root.get('type'), 'en');
							var title = root.get('title');
							var subject = '(Deleted) ' + type +': ' + title;
							
							//extract warchers and crearedBy users
							var watchers = root.get('emf:hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients.push(watchers[i].toString());
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_delete_object_core", recipients, context);
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">false</control-param>
                    </control>
                </field>
			</fields>
		</transition>
	</transitions>
	
	 <stateTransitions>	
		<stateTransition from="INIT" transition="create" to="CURRENT" />
		<stateTransition from="INIT" transition="clone" to="CURRENT"/>
		
		<stateTransition from="CURRENT" transition="editDetails" to="CURRENT" />
		<stateTransition from="CURRENT" transition="uploadImage" to="CURRENT" />
		<stateTransition from="CURRENT" transition="createDocument" to="CURRENT" />
		<stateTransition from="CURRENT" transition="createTask" to="CURRENT" />
		<stateTransition from="CURRENT" transition="addDepiction" to="CURRENT" />
		<stateTransition from="CURRENT" transition="addAttachment" to="CURRENT" />
		<stateTransition from="CURRENT" transition="addThumbnail" to="CURRENT" />
		<stateTransition from="CURRENT" transition="addWatchers" to="CURRENT" />
		 <stateTransition from="CURRENT" transition="exportTabPDF" to="CURRENT" />
		<stateTransition from="CURRENT" transition="exportTabWord" to="CURRENT" />
		<stateTransition from="CURRENT" transition="printTab" to="CURRENT" />
		<stateTransition from="CURRENT" transition="saveAsTemplate" to="CURRENT" />
		<stateTransition from="CURRENT" transition="updateTemplate" to="CURRENT" />
		<stateTransition from="CURRENT" transition="changeTemplate" to="CURRENT" />
		<stateTransition from="CURRENT" transition="move" to="CURRENT" />
		<stateTransition from="CURRENT" transition="clone" to="CURRENT" />
		<stateTransition from="CURRENT" transition="lock" to="CURRENT" />
		<stateTransition from="CURRENT" transition="unlock" to="CURRENT" />
		<stateTransition from="CURRENT" transition="managePermissions" to="CURRENT" />
		<stateTransition from="CURRENT" transition="revertVersion" to="CURRENT" />
		<stateTransition from="CURRENT" transition="delete" to="CURRENT" />
		<stateTransition from="CURRENT" transition="createInContext" to="CURRENT"/>
   </stateTransitions>
   
   <allowedChildren>
		<child type="document" id="all"/>
		<child type="object" id="coreAudio"/>
		<child type="object" id="coreVideo"/>
		<child type="object" id="coreImage"/>
		<child type="task" id="all"/>
	</allowedChildren>

    <labels>
		<label id="OBJECT_TOOLTIP_HEADER_SAMPLE">
			<value lang="en"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							<span data-property="title">${get([title])}</span>
						</a>
					</span>
					<span class="tooltip-row">
						<label>Cultural object that the sample is taken from: </label>
						<span data-property="chc:isTakenFrom">${objectProperty(${get([chc:isTakenFrom])})}</span>
					</span>
					<span class="tooltip-row">
						<label>Sample site: </label>
						<span data-property="chc:sampleSite">${get([chc:sampleSite])}</span>
					</span>
					<span class="tooltip-row">
						<label>Date taken: </label>
						<span data-property="chc:samplingDate">${date([chc:samplingDate]).format(YYYY-MM-dd)}</span>
					</span>
					${if(${get([chc:sampleStorageLocation])}<>null).then(
						<span class="tooltip-row">
							<label>Sample storage location: </label>
							<span data-property="chc:sampleStorageLocation">${get([chc:sampleStorageLocation])}</span>
						</span>
					)}
					<span class="tooltip-row">
                        <label>System modified by: </label>
                        <span data-property="modifiedBy">${user(${get([modifiedBy])})}</span>
                    </span>
					<span class="tooltip-row">
                        <label>System modified on: </label>
                        <span data-property="modifiedOn">${date([modifiedOn]).format(YYYY-MM-dd, HH:mm)}</span>
                    </span>
				</span>
			)})}]]></value>
		</label>
		<label id="OBJECT_DEFAULT_HEADER_SAMPLE">
			 <value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(64)}"/></span>
					<span>
						<span data-property="chc:sampleSite">${get([chc:sampleSite])}</span>&nbsp;/&nbsp;
						<span data-property="chc:samplingDate">${date([chc:samplingDate]).format(YYYY-MM-dd)}</span>
						</br>
						<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
							${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
							<span data-property="title">${get([title])}</span>
						</a>&nbsp;is taken from
						<span data-property="chc:isTakenFrom">${objectProperty(${get([chc:isTakenFrom])})}</span>
						${if(${var.isVersion}).then(
							&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
						)}
						${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
					</span>)}]]>
			</value>
		</label>
		<label id="OBJECT_COMPACT_HEADER_SAMPLE">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)} 
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} style="vertical-align:baseline;">
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						<span data-property="title">${get([title])}</span>&nbsp;
					</a>
					<span data-property="chc:samplingDate">${date([chc:samplingDate]).format(YYYY-MM-dd)}</span>
					${if(${var.isVersion}).then(
						&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
					)}
				</span>)}]]>
			</value>
		</label>
		<label id="OBJECT_BREADCRUMB_HEADER_SAMPLE">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} } 
				<span><img src="${thumbnailUri(16)}"/></span>
				<span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
					<span>
						<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} style="vertical-align:baseline;">
							${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
							<span data-property="title">${get([title])}</span>
						</a>
					</span>
				</span>)}]]>
			</value>
		</label>
    </labels>
</definition>
