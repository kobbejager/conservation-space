<?xml version="1.0"?>
<definition id="csHelp" parentId="baseHelp" type="object">
	<fields>
		<field name="default_header" type="ANY" label="HELP_DEFAULT_HEADER_CORE" />
        <field name="compact_header" type="ANY" label="HELP_COMPACT_HEADER_CORE" />
    	<field name="tooltip_header" type="ANY" label="HELP_TOOLTIP_HEADER_CORE" />
		<field name="breadcrumb_header" type="ANY" label="HELP_BREADCRUMB_HEADER_CORE" />

		<field name="outcome" displayType="system" />
		<field name="completedOn" displayType="system" />
		<field name="uri" displayType="system" />
		<field name="hasRevision" displayType="system" />
		<field name="isRevisionOf" displayType="system" />
		<field name="lastPublishedRevision" displayType="system" />
		<field name="lastRevision" displayType="system" />
		<field name="nextRevision" displayType="system" />
		<field name="previousRevision" displayType="system" />
	</fields>
	
	<regions>	
		<region id="specificInformation" order="60" displayType="editable" label="core.specificInformation.region.label">
			<fields>
				<field name="type" tooltip="core.type.tooltip" >
					<value>csHelp</value>
				</field>
				<field name="helpTarget" tooltip="core.helpTarget.tooltip" />
				<field name="title" type="an..1000" tooltip="core.title.tooltip" />
			</fields>
		</region>
		<region id="systemData" order="70" displayType="editable" label="core.systemData.region.label">
			<fields>
				<field name="identifier" tooltip="core.identifier.tooltip" rnc="${eval(HP${seq({+hpSequence})})}" />
				<field name="name" tooltip="core.name.tooltip" />
				<field name="size" label="size.label" tooltip="core.size.tooltip" />
				<field name="mimetype" type="ANY" codelist="CL30" uri="emf:mimetype" />
				<field name="status" codelist="CL119" tooltip="core.status.tooltip" />
				<field name="emf:version" tooltip="core.version.tooltip" /> 
				<field name="integrated" type="boolean" displayType="hidden" label="emf.integrated.label" uri="emf:integrated"/>
				<field name="createdOn" tooltip="core.createdOn.tooltip" />
				<field name="createdBy" tooltip="core.createdBy.tooltip" />
				<field name="modifiedOn" label="core.modifiedOn.label" tooltip="core.modifiedOn.tooltip" />
				<field name="modifiedBy" label="core.modifiedBy.label" tooltip="core.modifiedBy.tooltip" />
				<field name="lockedBy" tooltip="core.lockedBy.tooltip" />
				<field name="hasAttachment" type="uri" displayType="editable" label="core.hasAttachment.label" tooltip="core.hasAttachment.tooltip" multiValued="true" uri="emf:hasAttachment" >
					<control id="PICKER">
						<control-param id="range" name="range"/>
					</control>
				</field>
				<field name="attachmentOf" type="uri" displayType="editable" label="core.attachmentOf.label" tooltip="core.attachmentOf.tooltip" multiValued="true" uri="emf:isAttachedTo" >
					<control id="PICKER">
						<control-param id="range" name="range"/>
					</control>
				</field>
				<field name="hasThumbnail" label="core.hasThumbnail.label" tooltip="core.hasThumbnail.tooltip" />
				<field name="hasWatcher" label="core.hasWatcher.label" tooltip="core.hasWatcher.tooltip" uri="emf:hasWatcher" />
				<field name="parentOf" tooltip="core.parentOf.tooltip" previewEmpty="false" />
				<field name="hasParent" tooltip="core.hasParent.tooltip" />
				<field name="emf:hasTemplate" label="core.hasTemplate.label" tooltip="core.hasTemplate.tooltip" />
				<field name="partOf" displayType="readOnly" tooltip="core.partOf.tooltip" />
				<field name="hasChild" tooltip="core.hasChild.tooltip" previewEmpty="false" />
			</fields>
		</region>
	</regions>
	
	<transitions>
		<transition id="editDetails" order="10" actionPath="/actions" />
		<transition id="uploadNewVersion" order="15" />
		
		<group id="add" order="20" label="add.group.label" type="menu" />	
		<transition id="addAttachment" label="core.addAttachment.action.label" tooltip="core.addAttachment.action.tooltip" purpose="addRelation" group="add" >
			<fields>
				<field name="attachToConfig" type="json">
					<value>
						{
							"predefinedTypes" : [],
							"selection" : "multiple",
							"relation" : ["chc:hasAttachment"]
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		<transition id="addThumbnail" group="add"  />
		<transition id="addWatchers" label="addWatchers.label" tooltip="addWatchers.tooltip"  purpose="addRelation" group="add" >
			<fields>
				<field name="addAttachmentConfig" type="json">
					<value>						
						{
							"predefinedTypes" : ["emf:User"],
							"selection" : "multiple",
							"relation" : ["emf:hasWatcher"],
							"restrictions" : {"field": "emf:status", "operator": "in", "type": "codeList", "value": ["ACTIVE"]}
						}
					</value>
					<control id="configuration" />
				</field>
			</fields>
		</transition>
		
		<transition id="download" label="download.label" order="25" purpose="download" tooltip="download.tooltip" />
		
		<group id="exportAs" order="30" label="exportAs.group.label" type="menu" />
		<transition id="exportTabPDF" group="exportAs" />
		<transition id="exportTabWord" group="exportAs" />

		<group id="print" order="35" label="print.group.label" type="menu" />
		<transition id="printTab" group="print" />
		
		<group id="template" order="36" label="template.group.label" type="menu" />
		<transition id="saveAsTemplate" group="template" />
		<transition id="updateTemplate" tooltip="core.updateTemplate.action.tooltip" group="template" />	
		<transition id="changeTemplate" tooltip="core.changeTemplate.action.tooltip" group="template" />
		
		<group id="more" order="40" label="more.group.label" type="menu" />
		<transition id="move" confirmation="move.confirm" group="more" />
		<transition id="lock" group="more" />
		<transition id="unlock" group="more" />
		<transition id="managePermissions" group="more" />
		
		<transition id="delete" order="45" tooltip="core.delete.tooltip" />
	</transitions>
	
	<stateTransitions>				
		<stateTransition from="INIT" transition="create" to="DRAFT" />
     		
		<stateTransition from="DRAFT" transition="editDetails" to="DRAFT" />
		<stateTransition from="DRAFT" transition="addAttachment" to="DRAFT" />
		<stateTransition from="DRAFT" transition="printTab" to="DRAFT" />
		<stateTransition from="DRAFT" transition="exportTabPDF" to="DRAFT" />
		<stateTransition from="DRAFT" transition="exportTabWord" to="DRAFT" />
		<stateTransition from="DRAFT" transition="move" to="DRAFT" />
		<stateTransition from="DRAFT" transition="lock" to="DRAFT" />
		<stateTransition from="DRAFT" transition="unlock" to="DRAFT" />
		<stateTransition from="DRAFT" transition="addWatchers" to="DRAFT" />
		<stateTransition from="DRAFT" transition="addThumbnail" to="DRAFT" />
        <stateTransition from="DRAFT" transition="saveAsTemplate" to="DRAFT" />
		<stateTransition from="DRAFT" transition="changeTemplate" to="DRAFT" />
		<stateTransition from="DRAFT" transition="updateTemplate" to="DRAFT" />
        <stateTransition from="DRAFT" transition="managePermissions" to="DRAFT" />
		<stateTransition from="DRAFT" transition="createInContext" to="DRAFT" />
		<stateTransition from="DRAFT" transition="uploadNewVersion" to="DRAFT" />
		<stateTransition from="DRAFT" transition="download" to="DRAFT" />
		
		<stateTransition from="DRAFT" transition="delete" to="DRAFT" />
	</stateTransitions>
	
	<allowedChildren>
		<child type="object" id="coreAudio"/>
		<child type="object" id="coreVideo"/>
		<child type="object" id="coreImage"/>
		<child type="object" id="csHelp"/>
	</allowedChildren>
	
	<labels>
		<label id="HELP_TOOLTIP_HEADER_CORE">
			<value lang="en"><![CDATA[${eval(#{eval(
				<span class="thumbnail-content">
					<img class="thumbnail" src="${thumbnailUri(64)}" />
				</span>
				<span class="tooltip-data">
					<span class="tooltip-header">
						<a href="${link(currentInstance)}" class="instance-link" data-status="${get([status])}" data-id="${id.db}" data-uid="${id.uid}">
							<span data-title="${get([title])}">${get([title])}</span>
						</a>
					</span>
					${if(${get([helpTarget])} <> null).then(
						<span class="tooltip-row">
							<label>Help target: </label>
							<span data-property="helpTarget">${CL([helpTarget])}</span>
						</span>
					)}
					<span class="tooltip-row">
                        <label>System modified by: </label>
						<span data-property="modifiedBy">${objectProperty(${get([modifiedBy])})}</span>
                    </span>
					<span class="tooltip-row">
                        <label>System modified on: </label>
                        <span data-property="modifiedOn">${date([modifiedOn])}</span>
                    </span>
					${if(${get([lockedBy])} <> null).then(
						<span class="tooltip-row">
							<label>${label(lockedBy)}:</label>
							<span data-property="lockedBy">${objectProperty(${get([lockedBy])})}</span>                      
						</span>
					)}
				</span>
			)})}]]></value>
		</label>	
		 <label id="HELP_DEFAULT_HEADER_CORE">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span ><img src="${thumbnailUri(64)}"/></span>
				<span>
					<span>
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
						<span data-property="type">${CL([type])}</span>
						${if(${get([helpTarget])} <> null).then(:&nbsp;<span data-property="helpTarget">${CL([helpTarget])}</span>)}
						<br >
						<b>
							<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
								${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
								<span data-property="title">${get([title])}</span>
							</a>
						</b>	
						${if(${var.isVersion}).then(
							&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
						)}
					</span>
				</span>)}]]>
			</value>
		</label>
		<label id="HELP_COMPACT_HEADER_CORE">
			<value lang="en"><![CDATA[${eval(
				${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")}}
				${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
				<span ><img src="${thumbnailUri(16)}"/></span>
				<span>
					<span>
						${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
						<span data-property="type">${CL([type])}</span>:&nbsp;
						<a ${var.href} class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}">
							${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
							<span data-property="title">${get([title])}</span>
						</a>
						${if(${var.isVersion}).then(
							&nbsp;<span data-property="emf:version" class="object-version version badge">${get([emf:version])}</span>
						)}
				</span>)}]]>
			</value>
		</label>
		<label id="HELP_BREADCRUMB_HEADER_CORE">
			<value lang="en"><![CDATA[${eval(
                ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
                ${var.isLatest=${if((${get([emf:revisionType])}).matches(.*?latest)).then(true).else(false)}}
                ${var.isRevision=${if((${get([emf:revisionType])}).matches(.*?revision)).then(true).else(false)}}
                <span ><img src="${thumbnailUri(16)}"/></span>
                <span>
					${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>&nbsp;)}
					<a class="instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href}>
						${if(${get([emf:isDeleted])} == true).then(<span>(Deleted)</span>&nbsp;)}
						${if(${or(${var.isLatest} or ${var.isRevision})}).then(<span data-property="revisionNumber">Revision:${get([emf:revisionNumber])}&nbsp;</span>)}
						<span data-property="title">${get([title])}</span>
					</a>
				</span>)}]]>
			</value>
		</label>
	</labels>
</definition>
