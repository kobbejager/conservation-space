//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, v2.2.6
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.04.27 at 10:28:51 AM EEST
//

package com.sirma.itt.seip.definition.jaxb;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

/**
 * <p>
 * Java class for objectType.
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;simpleType name="objectType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="case"/&gt;
 *     &lt;enumeration value="task"/&gt;
 *     &lt;enumeration value="workflow"/&gt;
 *     &lt;enumeration value="workflowtask"/&gt;
 *     &lt;enumeration value="object"/&gt;
 *     &lt;enumeration value="section"/&gt;
 *     &lt;enumeration value="document"/&gt;
 *     &lt;enumeration value="comment"/&gt;
 *     &lt;enumeration value="link"/&gt;
 *     &lt;enumeration value="project"/&gt;
 *     &lt;enumeration value="user"/&gt;
 *     &lt;enumeration value="group"/&gt;
 *     &lt;enumeration value="topic"/&gt;
 *     &lt;enumeration value="imageAnnotation"/&gt;
 *     &lt;enumeration value="dashlet"/&gt;
 *     &lt;enumeration value="folder"/&gt;
 *     &lt;enumeration value="query"/&gt;
 *     &lt;enumeration value="class"/&gt;
 *     &lt;enumeration value="script"/&gt;
 *     &lt;enumeration value="rule"/&gt;
 *     &lt;enumeration value="timer"/&gt;
 *     &lt;enumeration value="facetConfig"/&gt;
 *     &lt;enumeration value="advancedSearchConfig"/&gt;
 *     &lt;enumeration value="labels" /&gt;
 *     &lt;enumeration value="annotation" /&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 */
@XmlType(name = "objectType")
@XmlEnum
public enum ObjectType {

	/** The case. */
	@XmlEnumValue("case") CASE("case"),

	/** The task. */
	@XmlEnumValue("task") TASK("task"),

	/** The workflow. */
	@XmlEnumValue("workflow") WORKFLOW("workflow"),

	/** The workflowtask. */
	@XmlEnumValue("workflowtask") WORKFLOWTASK("workflowtask"),

	/** The object. */
	@XmlEnumValue("object") OBJECT("object"),

	/** The section. */
	@XmlEnumValue("section") SECTION("section"),

	/** The document. */
	@XmlEnumValue("document") DOCUMENT("document"),

	/** The comment. */
	@XmlEnumValue("comment") COMMENT("comment"),

	/** The link. */
	@XmlEnumValue("link") LINK("link"),

	/** The project. */
	@XmlEnumValue("project") PROJECT("project"),

	/** The user. */
	@XmlEnumValue("user") USER("user"),

	/** The group. */
	@XmlEnumValue("group") GROUP("group"),

	/** The topic. */
	@XmlEnumValue("topic") TOPIC("topic"),

	/** The image annotation. */
	@XmlEnumValue("imageAnnotation") IMAGE_ANNOTATION("imageAnnotation"),

	/** The dashlet. */
	@XmlEnumValue("dashlet") DASHLET("dashlet"),

	/** The folder. */
	@XmlEnumValue("folder") FOLDER("folder"),

	/** The query. */
	@XmlEnumValue("query") QUERY("query"),

	/** The class. */
	@XmlEnumValue("class") CLASS("class"),

	/** The script. */
	@XmlEnumValue("script") SCRIPT("script"),

	/** The rule. */
	@XmlEnumValue("rule") RULE("rule"),

	/** The timer. */
	@XmlEnumValue("timer") TIMER("timer"),

	/** The facet config. */
	@XmlEnumValue("facetConfig") FACET_CONFIG("facetConfig"),

	@XmlEnumValue("uiTheme") UI_THEME("uiTheme"),

	/** The advanced search config. */
	@XmlEnumValue("advancedSearchConfig")
	ADVANCED_SEARCH_CONFIG("advancedSearchConfig"),

	/** labels. */
	@XmlEnumValue("labels")
	LABELS("labels"),

	/** annotation. */
	@XmlEnumValue("annotation")
	ANNOTATION("annotation");

	/** The value. */
	private final String value;

	/**
	 * Instantiates a new object type.
	 *
	 * @param v
	 *            the v
	 */
	ObjectType(String v) {
		value = v;
	}

	/**
	 * Value.
	 *
	 * @return the string
	 */
	public String value() {
		return value;
	}

	/**
	 * From value.
	 *
	 * @param v
	 *            the v
	 * @return the object type
	 */
	public static ObjectType fromValue(String v) {
		for (ObjectType c : ObjectType.values()) {
			if (c.value.equals(v)) {
				return c;
			}
		}
		throw new IllegalArgumentException(v);
	}

}
