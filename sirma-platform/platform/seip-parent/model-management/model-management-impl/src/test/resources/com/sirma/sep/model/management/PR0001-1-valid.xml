<?xml version="1.0" encoding="UTF-8"?>
<definition id="PR00011" parentId="PR0001" saveCondition="+[title]" type="project">
    <regions>
        <region id="generalDetails" order="10" label="generalDetails.region.label" displayType="editable">
            <fields>
                <field name="type" type="an..50" codelist="CL2" label="type.label" displayType="readOnly" uri="emf:type"
                       previewEmpty="true">
                    <value>PR0001</value>
                    <condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('INIT')</condition>
                </field>
                <field name="title" type="an..180" label="title.label" displayType="editable" mandatory="true" previewEmpty="true"
                       uri="dcterms:title">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('COMPLETED', 'ON_HOLD', 'STOPPED')</condition>
                </field>
                <field name="identifier" type="an..50" label="uniqueIdentifier.label" displayType="readOnly"
                       rnc="${seq({+projectSequence})}" uri="dcterms:identifier">
                    <condition id="hiddenFieldId" renderAs="HIDDEN">[status] IN ('INIT')</condition>
                </field>
                <field name="description" type="an..1024" label="description.label" tooltip="description.PR0001.tooltip"
                       displayType="editable" mandatory="true" previewEmpty="true" uri="dcterms:description">
                    <condition id="conditionOPTIONALfield" renderAs="OPTIONAL">[department] IN ('SPD','SAL') AND -[functional]</condition>
                    <control id="DEFAULT_VALUE_PATTERN">
                        <control-param type="default_value_pattern" id="template" name="template">$[emf:dependsOn.description]
                        </control-param>
                    </control>
                </field>
                <field name="status" type="an..50" codelist="CL1" label="status.label" displayType="readOnly" previewEmpty="true"
                       uri="emf:status">
                    <condition id="hiddenFieldId" renderAs="HIDDEN">[status] IN ('INIT', 'SUBMITTED', 'APPROVED', 'IN_PROGRESS', 'DELETED',
                        'COMPLETED', 'ON_HOLD', 'STOPPED')
                    </condition>
                </field>
                <field name="emf:version" type="an..10" label="object.version" displayType="readOnly" uri="emf:version"/>
                <field name="priority" type="an..20" codelist="CL29" label="priority.label" displayType="editable" mandatory="true"
                       previewEmpty="true" uri="emf:priority">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('COMPLETED', 'STOPPED')</condition>
                </field>
                <field name="visibility" type="an..20" label="radioButtonGroup.label" displayType="editable" mandatory="true"
                       previewEmpty="true" uri="chd:visibility">
                    <value>visibleToAll</value>
                    <condition id="hiddenFieldId" renderAs="READONLY">[status] IN ('APPROVED', 'IN_PROGRESS', 'DELETED', 'COMPLETED',
                        'ON_HOLD', 'STOPPED')
                    </condition>
                </field>
                <field name="checkbox" type="boolean" label="flag.label" displayType="editable" previewEmpty="true" uri="emf:flag"/>
                <field name="internationality" type="an..10" codelist="CL555" label="internationality.label" displayType="editable"
                       mandatory="true" multiValued="true" previewEmpty="false" uri="emf:internationality"/>
                <!-- UI2-WIUC04-UI2-S11: Apply conditions in ODW and DTW (CMF-R1687)-->
                <field name="department" type="an..35" codelist="CL503" label="department.label" displayType="editable"
                       uri="emf:departmentName"/>
                <field name="functional" type="an..35" codelist="CL504" label="functional.label" tooltip="functional.PR0001.tooltip"
                       displayType="editable" previewEmpty="false" uri="chd:functional">
                    <condition id="conditionHIDDEN" renderAs="HIDDEN">[department] IN ('CEG')</condition>
                    <condition id="conditionREADONLY" renderAs="READONLY">[department] IN ('ENG')</condition>
                    <condition id="conditionMANDATORY" renderAs="MANDATORY">[department] IN ('QAL') AND [checkbox] IN ('true') AND
                        [internationality] IN ('USA','BGR')
                    </condition>
                </field>
                <!-- TRUS03: property value to be outjected from current system object to its parent (CMF-R1602/CMF-15296) -->
                <field name="testField1" type="an..100" label="Test Field 1" displayType="editable" uri="emf:testField1"/>
            </fields>
        </region>

        <region id="specificDetails" order="20" label="specificDetails.region.label" displayType="editable">
            <!-- UI2-WIUC04-UI2-S11: Apply conditions in ODW(CMF-R1687)-->
            <condition id="hiddenRegionSpecificDetails" renderAs="HIDDEN">+[department] AND +[functional]</condition>
            <fields>
                <field name="activityType" type="an..1024" codelist="CL239" label="activityType.label" displayType="editable"
                       uri="chd:activityType"/>
                <field name="examinationPurpose" type="an..180" codelist="CL237" label="examinationPurpose.label" displayType="editable"
                       previewEmpty="false" uri="chd:examinationPurpose">
                    <condition id="purposeRegionCheck" renderAs="HIDDEN">[activityType] NOTIN ('AT239001')</condition>
                </field>
                <field name="treatmentPurpose" type="an..180" codelist="CL240" label="treatmentPurpose.label" displayType="editable"
                       previewEmpty="false" uri="chd:treatmentPurpose">
                    <condition id="purposeRegionCheck" renderAs="HIDDEN">[activityType] NOTIN ('AT239002')</condition>
                </field>
            </fields>
        </region>

        <region id="relationships" order="30" label="relationships.region.label" displayType="editable">
            <fields>
                <field name="ownedBy" type="uri" label="ownedBy" displayType="editable" mandatory="true" previewEmpty="true"
                       uri="emf:ownedBy">
                    <value>${currentUser.id}</value>
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('COMPLETED', 'ON_HOLD', 'STOPPED')</condition>
                    <control id="PICKER">
                        <control-param id="range" name="range">emf:User</control-param>
                    </control>
                </field>
                <field name="approvedBy" type="uri" label="approvedBy.label" displayType="editable" previewEmpty="true"
                       uri="chd:approvedBy">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('IN_PROGRESS', 'COMPLETED', 'ON_HOLD', 'STOPPED')
                    </condition>
                    <control id="PICKER">
                        <control-param id="range" name="range">emf:User</control-param>
                        <control-param type="default_value_pattern" id="template" name="template">$[emf:ownedBy]</control-param>
                    </control>
                </field>
                <field name="contact" type="uri" label="contactPerson.label" displayType="editable" previewEmpty="true"
                       uri="emf:contactPerson">
                    <control id="PICKER">
                        <control-param id="range" name="range">emf:User</control-param>
                    </control>
                </field>
                <field name="hasAttachment" type="uri" label="hasAttachment" tooltip="object.properties.adv.search.tooltip"
                       displayType="readonly" multiValued="true" uri="emf:hasAttachment">
                    <control id="PICKER">
                        <control-param id="range" name="range">
                            emf:Project,emf:Case,emf:Document,emf:Task,emf:Image,emf:Video,emf:Audio,emf:User,chd:CulturalObject
                        </control-param>
                    </control>
                </field>
                <field name="references" type="uri" label="references" tooltip="object.properties.adv.search.tooltip" displayType="editable"
                       multiValued="true" previewEmpty="false" uri="emf:references">
                    <control id="PICKER">
                        <control-param id="range" name="range">
                            emf:Project,emf:Case,emf:Document,emf:Audio,emf:Video,emf:Image,emf:Task,emf:User,emf:Group,chd:CulturalObject
                        </control-param>
                        <control-param type="default_value_pattern" id="template" name="template">$[emf:dependsOn.references]
                        </control-param>
                    </control>
                </field>
                <field name="dependsOn" type="uri" label="dependsOn" tooltip="object.properties.adv.search.tooltip" displayType="editable"
                       multiValued="true" previewEmpty="false" uri="emf:dependsOn">
                    <control id="PICKER">
                        <control-param id="range" name="range">
                            emf:Project,emf:Case,emf:Document,emf:Audio,emf:Video,emf:Image,emf:Task,emf:User,emf:Group,chd:CulturalObject
                        </control-param>
                    </control>
                </field>
                <field name="dependencyList" type="an..50" label="dependencyList.label" displayType="system" multiValued="true"
                       previewEmpty="false" uri="chd:dependencyList">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('COMPLETED', 'ON_HOLD', 'STOPPED')</condition>
                </field>
                <field name="referenceList" type="an..50" label="referenceList.label" displayType="system" multiValued="true"
                       previewEmpty="false" uri="chd:referenceList"/>
            </fields>
        </region>

        <region id="timeAndEffort" order="50" label="timeAndEffort.region.label" displayType="editable">
            <fields>
                <field name="plannedStartDate" type="date" order="10" label="plannedStartDate.label" displayType="editable"
                       previewEmpty="true" uri="emf:plannedStartDate">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('COMPLETED', 'STOPPED')</condition>
                    <control id="DATERANGE">
                        <control-param id="endDateField" name="END_DATE_FIELD">plannedEndDate</control-param>
                    </control>
                    <control id="DEFAULT_VALUE_PATTERN">
                        <control-param type="default_value_pattern" id="template" name="template">$[emf:dependsOn.plannedStartDate]
                        </control-param>
                    </control>
                </field>
                <field name="plannedEndDate" type="date" order="20" label="plannedEndDate.label" displayType="editable" previewEmpty="true"
                       uri="emf:plannedEndDate">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('COMPLETED', 'ON_HOLD', 'STOPPED')</condition>
                    <control id="DATERANGE">
                        <control-param id="endDateField" name="START_DATE_FIELD">plannedStartDate</control-param>
                    </control>
                </field>
                <field name="actualStartDate" type="datetime" order="30" label="actualStartDate.label" displayType="editable"
                       previewEmpty="true" uri="emf:actualStartDate">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('INIT', 'COMPLETED', 'ON_HOLD', 'STOPPED', 'DELETED')
                    </condition>
                </field>
                <field name="actualEndDate" type="datetime" order="40" label="actualEndDate.label" displayType="editable"
                       previewEmpty="true" uri="emf:actualEndDate">
                    <condition id="hiddenFields" renderAs="READONLY">[status] IN ('INIT', 'SUBMITTED', 'APPROVED', 'ON_HOLD', 'STOPPED',
                        'DELETED')
                    </condition>
                </field>
                <field name="estimatedEffortHours" type="n..10" order="50" label="estimatedEffortHours.label" displayType="editable"
                       previewEmpty="true" uri="emf:estimatedEffort">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('COMPLETED', 'ON_HOLD', 'STOPPED')</condition>
                </field>
                <field name="actualEffortHours" type="n..10" order="60" label="actualEffortHours.label" displayType="editable"
                       previewEmpty="true" uri="emf:actualEffort">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('INIT', 'ON_HOLD', 'COMPLETED','STOPPED')</condition>
                </field>
                <!-- Should be added 'SUBMITTED', 'APPROVED' status in condition which is renderAs="READONLY" when the system calculates the value for this field -->
                <field name="accumulatedEstimatedEffortHours" type="n..10" order="70" label="accumulatedEstimatedEffortHours.label"
                       displayType="editable" previewEmpty="true" uri="emf:accumulatedEstimatedEffort">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('INIT', 'ON_HOLD', 'STOPPED', 'COMPLETED')</condition>
                </field>
                <!-- Should be added 'IN_PROGRESS' status in condition which is renderAs="READONLY" when the system calculates the value for this field -->
                <field name="accumulatedActualEffortHours" type="n..10" order="80" label="accumulatedActualEffortHours.label"
                       displayType="editable" previewEmpty="true" uri="emf:accumulatedActualEffort">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('INIT', 'SUBMITTED', 'APPROVED', 'ON_HOLD', 'COMPLETED',
                        'STOPPED')
                    </condition>
                </field>
            </fields>
        </region>

        <region id="numericProperties" order="60" label="numericProperties.region.label" displayType="editable">
            <fields>
                <!--CMF-R1343 SRUS02-S14: Numeric properties comparison operators-->
                <field name="numericN3" type="n3" order="30" label="numericN3.label" displayType="editable" previewEmpty="true"
                       uri="chd:numericN3" unique="true">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('COMPLETED', 'STOPPED')</condition>
                </field>
                <field name="numericN5" type="n5,3" order="40" label="numericN5.label" displayType="editable" previewEmpty="true"
                       uri="chd:numericN5">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('COMPLETED', 'STOPPED')</condition>
                </field>
                <field name="numericN6" type="n..6,2" order="50" label="numericN6.label" displayType="editable" previewEmpty="true"
                       uri="chd:numericN6">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('COMPLETED', 'STOPPED')</condition>
                </field>
                <field name="numericN10" type="n..10,3" order="60" label="numericN10.label" displayType="editable" previewEmpty="true"
                       uri="chd:numericN10" unique="true">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('COMPLETED', 'STOPPED')</condition>
                </field>
            </fields>
        </region>
    </regions>

    <transitions>
        <transition id="lock" order="1" tooltip="lock.PR0001.tooltip"/>
        <transition id="createSurvey" order="2" label="createSurvey.label" eventId="createSurvey" purpose="createInstance" actionPath="/">
            <fields>
                <field name="createDocConfig" type="json">
                    <value>
                        {
                        "predefinedTypes" : ["chd:Survey"],
                        "contextSelectorDisabled": true
                        }
                    </value>
                    <control id="configuration"/>
                </field>
            </fields>
        </transition>

        <group id="export" order="3" label="export.group.label" type="menu"/>
        <transition id="exportPDF" order="1" label="exportPDF.label" eventId="exportPDF" purpose="exportPDF" tooltip="exportPDF.tooltip"
                    group="export"/>
        <transition id="exportWord" order="2" label="exportWord.label" eventId="exportWord" purpose="exportWord"
                    tooltip="exportWord.tooltip" group="export"/>
        <transition id="print" order="3" label="print.label" eventId="print" purpose="print" tooltip="print.tooltip" group="export"/>

        <group id="exportTab" order="4" label="exportTab.group.label" type="menu"/>
        <transition id="exportTabPDF" order="1" label="exportTabPDF.label" eventId="exportTabPDF" purpose="exportTabPDF"
                    tooltip="exportTabPDF.tooltip" group="exportTab"/>
        <transition id="exportTabWord" order="2" label="exportTabWord.label" eventId="exportTabWord" purpose="exportTabWord"
                    tooltip="exportTabWord.tooltip" group="exportTab"/>
        <transition id="printTab" order="3" label="printTab.label" eventId="printTab" purpose="printTab" tooltip="printTab.tooltip"
                    group="exportTab"/>

        <group id="objectManagement" order="5" label="objectManagement.group.label" type="menu"/>
        <group id="objectManagementChangeStatus" order="1" parent="objectManagement" label="objectManagementChangeStatus.group.label"
               type="menu"/>
        <group id="objectManagementUpdate" order="2" parent="objectManagement" label="objectManagementUpdate.group.label" type="menu"/>
        <group id="objectManagementAddRelation" order="1" parent="objectManagementUpdate" label="objectManagementAddRelation.group.label"
               type="menu"/>
        <transition id="start" order="1" label="start.label" eventId="start" purpose="transition" immediate="true"
                    confirmation="project_start.confirm" actionPath="/" group="objectManagementChangeStatus"/>
        <transition id="approve" order="2" label="approve.label" eventId="approve" purpose="transition" immediate="true"
                    group="objectManagementChangeStatus"/>
        <transition id="stop" order="3" label="stop.label" eventId="stop" purpose="transition" immediate="true"
                    confirmation="project_stop.confirm" group="objectManagementChangeStatus"/>
        <transition id="suspend" order="4" label="suspend.label" eventId="suspend" purpose="transition" immediate="true"
                    confirmation="project_suspent.confirm" group="objectManagementChangeStatus"/>
        <transition id="restart" order="5" label="restart.label" eventId="restart" purpose="transition" immediate="true"
                    group="objectManagementChangeStatus"/>
        <transition id="complete" order="6" label="complete.label" eventId="complete" purpose="transition" immediate="true"
                    tooltip="complete.tooltip" group="objectManagementChangeStatus">
            <fields>
                <field name="sendMail" type="an..200" displayType="system">
                    <value><![CDATA[var type = codelist.getDescription(2, root.get('type'), 'en');
							var title = root.get("title");
							var subject = '(Completed): ' + type + ' - ' + title;

							//extract warchers and crearedBy users
							var watchers = root.get("emf:hasWatcher");
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_complete_instance", recipients, context);]]></value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                        <control-param id="persistent" name="persistent">false</control-param>
                    </control>
                </field>
            </fields>
        </transition>
        <transition id="editDetails" order="1" label="editDetails.label" eventId="editDetails" purpose="editDetails" actionPath="/"
                    group="objectManagementUpdate">
            <fields>
                <field name="sendMail" type="an..200" displayType="system">
                    <value><![CDATA[var type = codelist.getDescription(2, root.get('type'), 'en');
							var title = root.get('title');
							var subject = '(Edited) ' + type + ': ' + title;

							//extract warchers and crearedBy users
							var watchers = root.get('emf:hasWatcher');
							var modifiedOn = root.get('modifiedOn');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_edit_instance", recipients, context);]]></value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                        <control-param id="persistent" name="persistent">false</control-param>
                    </control>
                </field>
            </fields>
        </transition>
        <transition id="move" order="2" label="move.label" eventId="move" purpose="move" group="objectManagementUpdate">
            <fields>
                <field name="sendMail" type="an..200" displayType="system">
                    <value><![CDATA[var type = codelist.getDescription(2, root.get('type'), 'en');
							var title = root.get('title');
							var subject = '(Moved) ' + type + ': ' + title;

							//extract warchers and crearedBy users
							var watchers = root.get('emf:hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_move_instance", recipients, context);]]></value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                        <control-param id="persistent" name="persistent">false</control-param>
                    </control>
                </field>
            </fields>
        </transition>
        <transition id="delete" order="3" label="delete.label" eventId="delete" purpose="delete" confirmation="project_delete.confirm"
                    group="objectManagementUpdate">
            <fields>
                <field name="sendMail" type="an..200" displayType="system">
                    <value><![CDATA[var type = codelist.getDescription(2, root.get('type'), 'en');
							var title = root.get('title');
							var subject = '(Deleted) ' + type +': ' + title;
							//extract warchers and crearedBy users
							var watchers = root.get('emf:hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_delete_instance", recipients, context);]]></value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                        <control-param id="persistent" name="persistent">false</control-param>
                    </control>
                </field>
            </fields>
        </transition>
        <transition id="addThumbnail" order="1" label="addThumbnail.label" eventId="addThumbnail" purpose="addThumbnail"
                    tooltip="addThumbnail.tooltip" group="objectManagementAddRelation"/>
        <transition id="addAttachments" order="2" label="addAttachment.action.label" eventId="addAttachments" purpose="addRelation"
                    tooltip="addAttachments.PR0001.tooltip" group="objectManagementAddRelation">
            <fields>
                <field name="attachToConfig" type="json">
                    <value>
                        {
                        "selection" : "multiple",
                        "relation" : ["emf:hasAttachment"]
                        }
                    </value>
                    <control id="configuration"/>
                </field>
            </fields>
        </transition>

        <transition id="managePermissions" order="6" label="managePermissions.label" eventId="managePermissions" purpose="managePermissions"
                    tooltip="managePermissions.PR0001.tooltip" actionPath="/"/>
        <transition id="saveAsTemplate" order="7" tooltip="saveAsTemplate.PR0001.tooltip"/>
        <transition id="composeEmail" order="8" label="composeEmail.label" eventId="composeEmail" purpose="composeEmail"/>
        <transition id="changeTemplate" order="9" label="changeTemplate.label" eventId="changeTemplate" purpose="changeTemplate"
                    tooltip="changeTemplate.tooltip"/>
        <transition id="updateTemplate" label="updateTemplate.label" eventId="updateTemplate" purpose="updateTemplate"
                    tooltip="updateTemplate.tooltip" confirmation="confirmation.update_template"/>
        <transition id="create" order="10" eventId="create" purpose="create">
            <fields>
                <field name="sendCreateMail" type="an..200">
                    <value><![CDATA[var type = codelist.getDescription(2, root.get('type'), 'en');
							var title = root.get('title');
							var subject = '(Created) ' + type + ': ' + title;

							//extract warchers and crearedBy users
							var watchers = root.get('emf:hasWatcher');
							var createdBy = root.get('createdBy');
							var recipients = [];
							var i = 0;
							if (watchers != null){
								for(i = 0; i < watchers.length; i++) {
									recipients[i] = watchers[i].toString();
								}
							}
							recipients.push(createdBy.toString());
							mail.sendNotifications(root, security.getCurrentLoggedUser(), subject, "email_upload_or_create_instance", recipients, context);]]></value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">false</control-param>
                    </control>
                </field>
            </fields>
        </transition>
    </transitions>
    <stateTransitions>
        <stateTransition from="INIT" transition="create" to="SUBMITTED">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [status] AND [createdBy] AND [createdOn]
            </condition>
        </stateTransition>
        <stateTransition from="SUBMITTED" transition="editDetails" to="SUBMITTED">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [status] AND [createdBy] AND [createdOn]
            </condition>
        </stateTransition>
        <stateTransition from="SUBMITTED" transition="delete" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="start" to="IN_PROGRESS">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [description] AND [ownedBy] AND [approvedBy] AND
                [status] AND [plannedStartDate] AND [actualStartDate] AND [estimatedEffortHours] AND [accumulatedEstimatedEffortHours] AND
                [createdBy] AND [createdOn] AND [visibility]
            </condition>
        </stateTransition>
        <stateTransition from="SUBMITTED" transition="approve" to="APPROVED">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [description] AND [ownedBy] AND [approvedBy] AND
                [status] AND [plannedStartDate] AND [createdBy] AND [createdOn] AND [visibility]
            </condition>
        </stateTransition>
        <stateTransition from="SUBMITTED" transition="move" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="changeTemplate" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="updateTemplate" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="lock" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="unlock" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="createIDocument" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="managePermissions" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="addThumbnail" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="saveAsTemplate" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="addAttachments" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="print" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="printTab" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="exportTabPDF" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="exportPDF" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="exportWord" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="exportTabWord" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="createInContext" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="composeEmail" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="createSurvey" to="SUBMITTED"/>
        <stateTransition from="SUBMITTED" transition="revertVersion" to="SUBMITTED"/>

        <stateTransition from="APPROVED" transition="editDetails" to="APPROVED">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [description] AND [ownedBy] AND [approvedBy] AND
                [status] AND [plannedStartDate] AND [createdBy] AND [createdOn] AND [visibility]
            </condition>
        </stateTransition>
        <stateTransition from="APPROVED" transition="start" to="IN_PROGRESS">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [description] AND [ownedBy] AND [approvedBy] AND
                [status] AND [plannedStartDate] AND [actualStartDate] AND [estimatedEffortHours] AND [accumulatedEstimatedEffortHours] AND
                [createdBy] AND [createdOn] AND [visibility]
            </condition>
        </stateTransition>
        <stateTransition from="APPROVED" transition="stop" to="STOPPED">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [description] AND [ownedBy] AND [approvedBy] AND
                [status] AND [plannedStartDate] AND [createdBy] AND [createdOn] AND [visibility]
            </condition>
        </stateTransition>
        <stateTransition from="APPROVED" transition="move" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="lock" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="unlock" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="managePermissions" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="addThumbnail" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="saveAsTemplate" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="addAttachments" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="print" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="printTab" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="exportTabPDF" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="exportPDF" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="exportWord" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="exportTabWord" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="createInContext" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="composeEmail" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="createSurvey" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="revertVersion" to="SUBMITTED"/>

        <stateTransition from="IN_PROGRESS" transition="editDetails" to="IN_PROGRESS">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [description] AND [notes] AND [owner] AND
                [status] AND [plannedStartDate] AND [actualStartDate] AND [estimatedEffortHours] AND [accumulatedEstimatedEffortHours] AND
                [createdBy] AND [createdOn] AND [visibility]
            </condition>
        </stateTransition>
        <stateTransition from="IN_PROGRESS" transition="suspend" to="ON_HOLD">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [description] AND [notes] AND [owner] AND
                [status] AND [plannedStartDate] AND [actualStartDate] AND [estimatedEffortHours] AND [accumulatedEstimatedEffortHours] AND
                [createdBy] AND [createdOn] AND [visibility]
            </condition>
        </stateTransition>
        <stateTransition from="IN_PROGRESS" transition="stop" to="STOPPED">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [description] AND [notes] AND [owner] AND
                [status] AND [plannedStartDate] AND [createdBy] AND [createdOn] AND [visibility]
            </condition>
        </stateTransition>
        <stateTransition from="IN_PROGRESS" transition="complete" to="COMPLETED">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [description] AND [notes] AND [owner] AND
                [status] AND [plannedStartDate] AND [actualStartDate] AND [endTime] AND [estimatedEffortHours] AND
                [accumulatedActualEffortHours] AND [actualEffortHours] AND [accumulatedEstimatedEffortHours] AND [createdBy] AND [createdOn]
                AND [visibility]
            </condition>
        </stateTransition>
        <stateTransition from="IN_PROGRESS" transition="move" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="lock" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="unlock" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="managePermissions" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="addThumbnail" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="saveAsTemplate" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="addAttachments" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="print" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="printTab" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="exportTabPDF" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="exportPDF" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="exportWord" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="exportTabWord" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="createInContext" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="composeEmail" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="createSurvey" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="revertVersion" to="SUBMITTED"/>

        <stateTransition from="ON_HOLD" transition="restart" to="IN_PROGRESS">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [status] AND [plannedStartDate] AND [createdBy]
                AND [createdOn] AND [visibility]
            </condition>
        </stateTransition>
        <stateTransition from="ON_HOLD" transition="editDetails" to="ON_HOLD">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [status] AND [plannedStartDate] AND [createdBy]
                AND [createdOn] AND [visibility]
            </condition>
        </stateTransition>
        <stateTransition from="ON_HOLD" transition="stop" to="STOPPED">
            <condition id="requiredFields" renderAs="REQUIRED">[identifier] AND [title] AND [status] AND [plannedStartDate] AND [createdBy]
                AND [createdOn] AND [visibility]
            </condition>
        </stateTransition>
        <stateTransition from="ON_HOLD" transition="move" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="lock" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="unlock" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="managePermissions" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="addThumbnail" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="saveAsTemplate" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="addAttachments" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="print" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="printTab" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="exportTabPDF" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="exportPDF" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="exportWord" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="exportTabWord" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="composeEmail" to="ON_HOLD"/>

        <stateTransition from="STOPPED" transition="managePermissions" to="STOPPED"/>
        <stateTransition from="STOPPED" transition="print" to="STOPPED"/>
        <stateTransition from="STOPPED" transition="printTab" to="STOPPED"/>
        <stateTransition from="STOPPED" transition="exportTabPDF" to="STOPPED"/>
        <stateTransition from="STOPPED" transition="exportPDF" to="STOPPED"/>
        <stateTransition from="STOPPED" transition="exportWord" to="STOPPED"/>
        <stateTransition from="STOPPED" transition="exportTabWord" to="STOPPED"/>
        <stateTransition from="STOPPED" transition="composeEmail" to="STOPPED"/>

        <stateTransition from="COMPLETED" transition="managePermissions" to="COMPLETED"/>
        <stateTransition from="COMPLETED" transition="print" to="COMPLETED"/>
        <stateTransition from="COMPLETED" transition="printTab" to="COMPLETED"/>
        <stateTransition from="COMPLETED" transition="exportTabPDF" to="COMPLETED"/>
        <stateTransition from="COMPLETED" transition="exportPDF" to="COMPLETED"/>
        <stateTransition from="COMPLETED" transition="exportWord" to="COMPLETED"/>
        <stateTransition from="COMPLETED" transition="exportTabWord" to="COMPLETED"/>
        <stateTransition from="COMPLETED" transition="composeEmail" to="COMPLETED"/>
    </stateTransitions>
</definition>
