<?xml version="1.0"?>
<definition id="genericTestCase" parentId="GEC10001" isAbstract="true" type="case"> <!-- Base-Abstract Test Case definition -->
    <fields>
        <field name="default_header" type="ANY" label="CASE_DEFAULT_HEADER_IMU" displayType="system"/>
        <field name="compact_header" type="an..4096" label="CASE_COMPACT_HEADER_IMU" displayType="system"/>
        <field name="releaseVersion" type="an..10" label="releaseVersion.label" displayType="readonly" uri="chd:releaseVersion">
            <value>2.21</value>
        </field>
        <field name="identifier" type="an..50" label="uniqueIdentifier.label" displayType="readonly" previewEmpty="false"
               rnc="${eval(CS-${seq({+caseSequence})}/${today.format(dd.MM.yyyy)})}" uri="dcterms:identifier">
            <condition id="hiddenFieldId" renderAs="HIDDEN">[identifier] IN ('NO_ID')</condition>
        </field>
    </fields>

    <regions>
        <region id="systemRelations" order="40" displayType="readOnly" label="systemRelations.region.label">
            <!-- READONLY system fields-->
            <fields>
                <field name="hasThumbnail" type="uri" label="hasThumbnail" displayType="readOnly" uri="emf:hasThumbnail">
                    <control id="PICKER">
                        <control-param id="range" name="range">emf:Image</control-param>
                    </control>
                </field>
                <field name="emf:hasTemplate" type="uri" label="hasTemplate" displayType="readOnly" previewEmpty="true"
                       uri="emf:hasTemplate">
                    <control id="PICKER">
                        <control-param id="range" name="range"/>
                    </control>
                </field>
                <field name="parentOf" type="uri" label="parentOf" displayType="readOnly" multiValued="true" uri="emf:parentOf">
                    <control id="PICKER">
                        <control-param id="range" name="range"/>
                    </control>
                </field>
                <field name="hasParent" type="uri" label="hasParent" displayType="readOnly" uri="emf:hasParent">
                    <control id="PICKER">
                        <control-param id="range" name="range">
                            emf:Project,emf:Case,emf:Document,emf:Audio,emf:Video,emf:Image,emf:Task,emf:User,emf:Group
                        </control-param>
                    </control>
                </field>
                <field name="partOf" type="uri" label="partOf.label" displayType="readOnly" multiValued="true" uri="ptop:partOf">
                    <control id="PICKER">
                        <control-param id="range" name="range"/>
                    </control>
                </field>
                <field name="hasChild" type="uri" label="hasChild.label" displayType="readOnly" multiValued="true" uri="emf:hasChild">
                    <control id="PICKER">
                        <control-param id="range" name="range"/>
                    </control>
                </field>
                <field name="lockedBy" type="uri" displayType="readonly" label="lockedBy" previewEmpty="false">
                    <control id="PICKER">
                        <control-param id="range" name="range">emf:User</control-param>
                    </control>
                </field>
                <field name="createdBy" type="uri" label="createdBy.label" displayType="editable" uri="emf:createdBy">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('SUBMITTED', 'APPROVED', 'IN_PROGRESS', 'DELETED',
                        'COMPLETED', 'ON_HOLD', 'STOPPED')
                    </condition>
                    <control id="PICKER">
                        <control-param id="range" name="range">emf:User</control-param>
                    </control>
                </field>
                <field name="createdOn" type="datetime" label="createdOn.label" displayType="editable" uri="emf:createdOn">
                    <condition id="readOnlyFields" renderAs="READONLY">[status] IN ('SUBMITTED', 'APPROVED', 'IN_PROGRESS', 'DELETED',
                        'COMPLETED', 'ON_HOLD', 'STOPPED')
                    </condition>
                </field>
                <field name="modifiedBy" type="uri" label="modifiedBy.label" displayType="readOnly" uri="emf:modifiedBy">
                    <condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('INIT')</condition>
                    <control id="PICKER">
                        <control-param id="range" name="range">emf:User</control-param>
                    </control>
                </field>
                <field name="modifiedOn" type="datetime" label="modifiedOn.label" displayType="readOnly" uri="emf:modifiedOn">
                    <condition id="hiddenFields" renderAs="HIDDEN">[status] IN ('INIT')</condition>
                    <!-- <condition id="readOnlyFields" renderAs="READONLY">[status] NOT IN ('SUBMITTED')</condition>-->
                </field>
            </fields>
        </region>
    </regions>
    <stateTransitions>
        <stateTransition from="INIT" transition="create" to="APPROVED"/>

        <stateTransition from="APPROVED" transition="editDetails" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="start" to="IN_PROGRESS"/>
        <stateTransition from="APPROVED" transition="stop" to="STOPPED"/>
        <stateTransition from="APPROVED" transition="delete" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="move" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="lock" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="unlock" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="managePermissions" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="addThumbnail" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="saveAsTemplate" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="print" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="printTab" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="exportTabPDF" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="exportPDF" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="exportWord" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="exportTabWord" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="createInContext" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="revertVersion" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="changeTemplate" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="updateTemplate" to="APPROVED"/>
        <stateTransition from="APPROVED" transition="addWatchers" to="APPROVED"/>

        <stateTransition from="IN_PROGRESS" transition="editDetails" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="suspend" to="ON_HOLD"/>
        <stateTransition from="IN_PROGRESS" transition="stop" to="STOPPED"/>
        <stateTransition from="IN_PROGRESS" transition="complete" to="COMPLETED"/>
        <stateTransition from="IN_PROGRESS" transition="move" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="lock" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="unlock" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="managePermissions" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="addThumbnail" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="saveAsTemplate" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="print" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="printTab" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="exportTabPDF" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="exportPDF" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="exportWord" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="exportTabWord" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="createInContext" to="IN_PROGRESS"/>
        <stateTransition from="IN_PROGRESS" transition="revertVersion" to="APPROVED"/>
        <stateTransition from="IN_PROGRESS" transition="addWatchers" to="IN_PROGRESS"/>

        <stateTransition from="ON_HOLD" transition="restart" to="IN_PROGRESS"/>
        <stateTransition from="ON_HOLD" transition="editDetails" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="stop" to="STOPPED"/>
        <stateTransition from="ON_HOLD" transition="move" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="lock" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="unlock" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="managePermissions" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="addThumbnail" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="saveAsTemplate" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="print" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="printTab" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="exportTabPDF" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="exportPDF" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="exportWord" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="exportTabWord" to="ON_HOLD"/>
        <stateTransition from="ON_HOLD" transition="addWatchers" to="ON_HOLD"/>

        <stateTransition from="COMPLETED" transition="managePermissions" to="COMPLETED"/>
        <stateTransition from="COMPLETED" transition="print" to="COMPLETED"/>
        <stateTransition from="COMPLETED" transition="printTab" to="COMPLETED"/>
        <stateTransition from="COMPLETED" transition="exportTabPDF" to="COMPLETED"/>
        <stateTransition from="COMPLETED" transition="exportPDF" to="COMPLETED"/>
        <stateTransition from="COMPLETED" transition="exportWord" to="COMPLETED"/>
        <stateTransition from="COMPLETED" transition="exportTabWord" to="COMPLETED"/>

        <stateTransition from="STOPPED" transition="managePermissions" to="STOPPED"/>
        <stateTransition from="STOPPED" transition="print" to="STOPPED"/>
        <stateTransition from="STOPPED" transition="printTab" to="STOPPED"/>
        <stateTransition from="STOPPED" transition="exportTabPDF" to="STOPPED"/>
        <stateTransition from="STOPPED" transition="exportPDF" to="STOPPED"/>
        <stateTransition from="STOPPED" transition="exportWord" to="STOPPED"/>
        <stateTransition from="STOPPED" transition="exportTabWord" to="STOPPED"/>
    </stateTransitions>

    <labels>
        <label id="CASE_DEFAULT_HEADER_IMU">
            <value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			${var.isEmpty=${if((${get([identifier])}).matches(null)).then(true).else(false)}}
			<span><img src="${thumbnailUri(64)}"/></span>
			<span>
				<span class="truncate-element">
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						<b>
							${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит)</b></span>)}
							${if(${var.isEmpty}).then().else(<span data-property="identifier">${get([identifier])}</span>&nbsp;)}
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
							${if(${var.isVersion}).then(
								<span data-property="emf:version">${get([emf:version])}</span>
							)}
						</b>
					</a>
				</span>
				<br />
				<span>
					<label>Създадена от:</label>&nbsp;
					<a href="${userLink(${get([createdBy])})}">${user(${get([createdBy])})}</a>
				</span>
				<span>, <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span> </span>
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
			</span>)}]]></value>
            <value lang="en"><![CDATA[${eval(
            ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			${var.isEmpty=${if((${get([identifier])}).matches(null)).then(true).else(false)}}
			<span><img src="${thumbnailUri(64)}"/></span>
			<span>
				<span class="truncate-element">
					<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
						<b>
							${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted)</b></span>)}
							${if(${var.isEmpty}).then().else(<span data-property="identifier">${get([identifier])}</span>&nbsp;)}
							(<span data-property="type">${CL([type])}</span>)&nbsp;
							<span data-property="title">${get([title])}</span>&nbsp;
							(<span data-property="status">${CL([status])}</span>)&nbsp;
							${if(${var.isVersion}).then(
								<span data-property="emf:version">${get([emf:version])}</span>
							)}
						</b>
					</a>
				</span>
				<br />
				<span>
					<label>Created by:</label>&nbsp;
					<a href="${userLink(${get([createdBy])})}">${user(${get([createdBy])})}</a>
				</span>
				<span>, <span data-property="createdOn">${date([createdOn]).format(dd.MM.yyyy, HH:mm)}</span> </span>
				${if(${get([lockedBy])} <> null).then(<br /><span class="banner label label-warning">${label(lockedBy)}${user([lockedBy])}</span>)}
            </span>)}]]></value>
        </label>
        <label id="CASE_COMPACT_HEADER_IMU">
            <value lang="bg"><![CDATA[${eval(
			${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			${var.isEmpty=${if((${get([identifier])}).matches(null)).then(true).else(false)}}
			<span><img src="${thumbnailUri(16)}"/></span>
			${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
			<span class="truncate-element">
				<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Изтрит)</b></span>)}
					${if(${var.isEmpty}).then().else(<span data-property="identifier">${get([identifier])}</span>&nbsp;)}
					(<span data-property="type">${CL([type])}</span>)&nbsp;
					<span data-property="title">${get([title])}</span>&nbsp;
					(<span data-property="status">${CL([status])}</span>)&nbsp;
					${if(${var.isVersion}).then(
						<span data-property="emf:version">${get([emf:version])}</span>
					)}
				</a>
			</span>
			)}]]></value>
            <value lang="en"><![CDATA[${eval(
            ${var.href= ${if(${get([emf:isDeleted])} == false).then(href="${link(currentInstance)}")} }
			${var.isVersion= ${if(${get([isVersion])} == true).then(true).else(false)}}
			${var.isEmpty=${if((${get([identifier])}).matches(null)).then(true).else(false)}}
            <span><img src="${thumbnailUri(16)}"/></span>
            ${if(${get([lockedBy])} <> null).then(<span class="lock-label"><i class="fa fa-lock fa-lg"></i></span>)}
			<span class="truncate-element">
				<a class="${get([status])} instance-link ${if(${get([emf:isDeleted])} == true).then(instance-deleted).else(has-tooltip)}" ${var.href} uid="${id.uid}">
					${if(${get([emf:isDeleted])} == true).then(<span><b>(Deleted)</b></span>)}
					${if(${var.isEmpty}).then().else(<span data-property="identifier">${get([identifier])}</span>&nbsp;)}
					(<span data-property="type">${CL([type])}</span>)&nbsp;
					<span data-property="title">${get([title])}</span>&nbsp;
					(<span data-property="status">${CL([status])}</span>)&nbsp;
					${if(${var.isVersion}).then(
						<span data-property="emf:version">${get([emf:version])}</span>
					)}
				</a>
			</span>
			)}]]></value>
        </label>
    </labels>
</definition>