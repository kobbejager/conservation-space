<?xml version="1.0"?>
<definition id="CS0002" parentId="genericTestCase" isAbstract="false" type="case"> <!-- Case with autocreated WF -->
    <fields>
        <field name="type" type="an..180" codelist="CL4">
            <value>CS0002</value>
        </field>
        <field name="identifier" type="an..50"
               rnc="${eval(${get([identifier]).from(rootContext)}-${seq({+${get([identifier]).from(rootContext)}})})}"/>
        <field name="emf:version" type="an..10" label="object.version" displayType="readonly" uri="emf:version"/>
        <field name="status" displayType="readonly"/>
    </fields>
    <transitions>
        <transition id="create" eventId="create" purpose="transition" immediate="true">
            <fields>
                <field name="startWorkflow" type="an..200" displayType="system">
                    <value>
                        <![CDATA[
						var arguments = new com.sirma.itt.seip.context.Context();
         				arguments.put('type', 'DT0003');
      					arguments.put('createdBy', security.getCurrentLoggedUser().getSystemId());
      					var documentIds = new java.util.ArrayList();
      					var documents = search.with(search.buildArgumentsForPredefinedQuery('testCustomQueries/getDocumentsCreatedTodayByCurrentUser', arguments));
      					if (documents.length > 0) {
       					for(var i=0; i < documents.length; i++){
        					documentIds.add(documents[i].getId());
       					}
        				var Calendar = Java.type('java.util.Calendar');
        				var calendar = Calendar.getInstance();
        				calendar.add(Calendar.DAY_OF_MONTH, 0);
        				var startParams = new java.util.HashMap();
        				startParams.put('processes', documentIds);
        				startParams.put('plannedEndDate', calendar.getTime());
        				var taskST100Properties = new java.util.HashMap();
        				taskST100Properties.put('assignee', security.getCurrentLoggedUser().getSystemId());
        				taskST100Properties.put('taskNotes', 'task notes');
        				startParams.put('TASKST100', taskST100Properties);
        				workflows.startWorkflowByMessage(root, "start_WFLTYPE10", startParams);
       					}
						]]>
                    </value>
                    <control id="SCRIPT">
                        <control-param id="phase" name="phase">after</control-param>
                        <control-param id="async" name="async">true</control-param>
                        <control-param id="persistent" name="persistent">true</control-param>
                    </control>
                </field>
            </fields>
        </transition>
    </transitions>
</definition>
