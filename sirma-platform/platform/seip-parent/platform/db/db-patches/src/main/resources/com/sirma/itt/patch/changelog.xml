<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

	<changeSet id="seip-1.10.0-1" author="bbonev">
		<validCheckSum>7:3f34d746150b3cac85c87159c893b596</validCheckSum>
		<preConditions onFail="MARK_RAN">
			<not>
				<tableExists tableName="seip_instanceentity" />
			</not>
		</preConditions>
		<comment>Create new entity table that will store all instance entity data</comment>
		<createTable tableName="seip_instanceentity">
			<column autoIncrement="true" name="index" type="bigserial">
				<constraints nullable="false" />
			</column>
			<column name="id" type="varchar(128)">
				<constraints nullable="false" />
			</column>
			<column name="instancetype" type="int8" >
				<constraints nullable="false" />
			</column>
			<column name="owninginstanceid" type="varchar(128)" />
			<column name="owninginstancetype" type="int8" />
			<column name="definitionid" type="varchar(128)" />
			<column name="definitionrevision" type="int8" />
			<column name="definitionpath" type="varchar(512)" />
			<column name="dmsid" type="varchar(128)" />
			<column name="cmid" type="varchar(128)" />
			<column name="contextpath" type="varchar(2048)" />
			<column name="tenantid" type="varchar(128)" />
		</createTable>
		<addForeignKeyConstraint baseColumnNames="instancetype"
			baseTableName="seip_instanceentity" baseTableSchemaName="public"
			constraintName="fk_ie_instancetype" deferrable="false"
			initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION"
			referencedColumnNames="id" referencedTableName="emf_datatypedefinition"
			referencedTableSchemaName="public" referencesUniqueColumn="false" />
		<addForeignKeyConstraint baseColumnNames="owninginstancetype"
			baseTableName="seip_instanceentity" baseTableSchemaName="public"
			constraintName="fk_ie_owninginstancetype" deferrable="false"
			initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION"
			referencedColumnNames="id" referencedTableName="emf_datatypedefinition"
			referencedTableSchemaName="public" referencesUniqueColumn="false" />

		<addPrimaryKey tableName="seip_instanceentity"
			columnNames="id, instancetype" constraintName="seip_instanceentity_pk" />
		<createIndex tableName="seip_instanceentity" indexName="idx_ie_id">
			<column name="id" />
		</createIndex>
		<createIndex tableName="seip_instanceentity" indexName="idx_ie_dmsid">
			<column name="dmsid" />
		</createIndex>
		<createIndex tableName="seip_instanceentity" indexName="idx_ie_ownid">
			<column name="owninginstanceid" />
		</createIndex>
	</changeSet>
	<!-- 
		Case entity migration
	 -->
	 <changeSet id="seip-1.10.0-2.0" author="bbonev">
	 	<preConditions onFail="MARK_RAN" onFailMessage="caseinstance datatype definition already defined">
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='caseinstance';</sqlCheck>
		</preConditions>
		<comment>Insert caseinstance data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('', 'caseinstance', '');
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-2" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="Case entity table does not exist or no data type definitions">
			<tableExists tableName="cmf_caseentity"/>
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='caseinstance';</sqlCheck>
		</preConditions>
		<comment>Migrate case entity data into generic table</comment>
		<sql endDelimiter=";">
			insert into seip_instanceentity (id, instancetype, owninginstanceid, owninginstancetype, definitionid, definitionrevision, definitionpath, dmsid, cmid, contextpath, tenantid) 
				select id, (select d.id from emf_datatypedefinition d where d.name='caseinstance'), owninginstanceid, owninginstancetype, cdid, caserevision, null, dmid, cmid, null, container from cmf_caseentity;
		</sql>
	</changeSet>
	<!-- 
		Section entity migration
	 -->
	<changeSet id="seip-1.10.0-3.0" author="bbonev">
	 	<preConditions onFail="MARK_RAN" onFailMessage="sectioninstance datatype definition already defined">
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='sectioninstance';</sqlCheck>
		</preConditions>
		<comment>Insert caseinstance data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('', 'sectioninstance', '');
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-3.1" author="bbonev">
	 	<preConditions onFail="MARK_RAN" onFailMessage="folderinstance datatype definition already defined">
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='folderinstance';</sqlCheck>
		</preConditions>
		<comment>Insert folderinstance data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('', 'folderinstance', '');
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-3" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="Section entity table does not exist or not data type definitions">
			<tableExists tableName="cmf_sectionentity"/>
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='sectioninstance';</sqlCheck>
		</preConditions>
		<comment>Migrate section entity data into generic table</comment>
		<sql endDelimiter=";">
			insert into seip_instanceentity (id, instancetype, owninginstanceid, owninginstancetype, definitionid, definitionrevision, definitionpath, dmsid, cmid, contextpath, tenantid) 
				select id, (select d.id from emf_datatypedefinition d where d.name='sectioninstance'), owninginstanceid, owninginstancetype, sectionid, revision, defpath, dmid, null, null, container from cmf_sectionentity;
		</sql>
	</changeSet>
	<!-- Fix broken folder instances -->
	<changeSet id="seip-1.10.0-3-fix1" author="bbonev">
		<comment>Fix migrated folder instances as sections</comment>
		<sql>
			update seip_instanceentity set instancetype = (select d.id from emf_datatypedefinition d where d.name='folderinstance') where position('/' in definitionpath) = 0 AND instancetype = (select d.id from emf_datatypedefinition d where d.name='sectioninstance');
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-4.01" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="boolean datatype definition already defined">
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='boolean';</sqlCheck>
		</preConditions>
		<comment>Insert boolean data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('', 'boolean', '');
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-4.02" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="text datatype definition already defined">
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='text';</sqlCheck>
		</preConditions>
		<comment>Insert text data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('', 'text', '');
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-4.1-" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="Purpose property protype already inserted or no required data present">
			<!-- the property definition does not contain definition for property with name 'purpose' -->
			<sqlCheck expectedResult="0">select count(*) from emf_prototype where name='emf:purpose'</sqlCheck>
			<!-- there is text data type definition -->
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='text';</sqlCheck>
		</preConditions>
		<comment>Insert purpose property definition</comment>
		<sql>
			insert into emf_prototype(container, name, multivalued, datatype_id)
				values ((select case when (select count(container) from emf_definitionentry) = 0 then '$NO_CONTAINER$' else (select container from emf_definitionentry group by container having count(container) > 2 limit 1) end from emf_datatypedefinition limit 1), 'emf:purpose', 2, (select id from emf_datatypedefinition where name='text'));
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-4.2-" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="Standalone property protype already inserted or no required data present">
			<!-- the property definition does not contain definition for property with name 'purpose' -->
			<sqlCheck expectedResult="0">select case when count(*) > 0 then 1 else 0 end from emf_prototype where name='emf:standalone'</sqlCheck>
			<!-- there is boolean data type definition -->
			<sqlCheck expectedResult="1">select case when count(*) > 0 then 1 else 0 end from emf_datatypedefinition where name='boolean';</sqlCheck>
		</preConditions>
		<comment>Insert standalone property definition</comment>
		<sql>
			insert into emf_prototype(container, name, multivalued, datatype_id)
				values ((select case when (select count(container) from emf_definitionentry) = 0 then '$NO_CONTAINER$' else (select container from emf_definitionentry group by container having count(container) > 2 limit 1) end from emf_datatypedefinition limit 1), 'emf:standalone', 2, (select id from emf_datatypedefinition where name='boolean'));
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-5" author="bbonev">
		<validCheckSum>7:f2d197cc64ad1fa7789de3f46c0c54cb</validCheckSum>
		<preConditions onFail="CONTINUE" onFailMessage="Section entity table not migrated, yet">
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-3"/>
			<not>
				<dbms type="h2"/>
			</not>
		</preConditions>
		<comment>Migrate section custom properties into properties tables</comment>
		<createTable tableName="temp_properties">
			<column name="valueid" type="int8" />
			<column name="bean_id" type="varchar(100)" />
			<column name="bean_type" type="int" />
			<column name="propertyid" type="int8" />
			<column name="actualtype" type="int" />
			<column name="persistedtype" type="int" />
			<column name="booleanvalue" type="int2"/>
            <column name="stringvalue" type="VARCHAR(2048)"/>
		</createTable>
		<sql>
			insert into temp_properties(valueid, bean_id, bean_type, propertyid, actualtype, persistedtype, booleanvalue, stringvalue)
			select nextval('emf_propertyvalue_id_seq'), id, 2, (select id from emf_prototype where name = 'emf:purpose'), 6, 6, null, purpose from cmf_sectionentity where purpose is not null;
			insert into temp_properties(valueid, bean_id, bean_type, propertyid, actualtype, persistedtype, booleanvalue, stringvalue)
			select nextval('emf_propertyvalue_id_seq'), id, 2, (select id from emf_prototype where name = 'emf:standalone'), 1, 1, standalone, null from cmf_sectionentity where standalone is not null;
		</sql>
		<sql endDelimiter=";">
			WITH prop_value AS (
				insert into emf_propertyvalue(id, actualtype, persistedtype, booleanvalue, stringvalue)
					select valueid, actualtype, persistedtype, booleanvalue, stringvalue from temp_properties
				RETURNING id
			)
			insert into emf_properties(bean_id, bean_type, listindex, propertyid, value_id)
				select bean_id, bean_type, -1, propertyid, valueid from temp_properties;
		</sql>
		<dropTable tableName="temp_properties"/>
	</changeSet>
	<!-- 
		Document entity migration
	 -->
	 <changeSet id="seip-1.10.0-6.0" author="bbonev">
	 	<preConditions onFail="MARK_RAN" onFailMessage="documentinstance datatype definition already defined">
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='documentinstance';</sqlCheck>
		</preConditions>
		<comment>Insert documentinstance data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('', 'documentinstance', '');
		</sql>
	</changeSet>
	 <changeSet id="seip-1.10.0-6" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="Document entity table does not exist or no data type definitions">
			<tableExists tableName="cmf_documententity"/>
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='documentinstance';</sqlCheck>
		</preConditions>
		<comment>Migrate document entity data into generic table</comment>
		<sql endDelimiter=";">
			insert into seip_instanceentity (id, instancetype, owninginstanceid, owninginstancetype, definitionid, definitionrevision, definitionpath, dmsid, cmid, contextpath, tenantid) 
				select id, (select d.id from emf_datatypedefinition d where d.name='documentinstance'), owningreferenceid, owningreferencetype, documentid, revision, parentpath, documentdmsid, null, null, container from cmf_documententity;
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-7.1-" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="Structured property protype already inserted or no required data present">
			<!-- the property definition does not contain definition for property with name 'structured' -->
			<sqlCheck expectedResult="0">select count(*) from emf_prototype where name='emf:structured'</sqlCheck>
			<!-- there is boolean data type definition -->
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='boolean';</sqlCheck>
		</preConditions>
		<comment>Insert structured property definition</comment>
		<sql>
			insert into emf_prototype(container, name, multivalued, datatype_id)
				values ((select case when (select count(container) from emf_definitionentry) = 0 then '$NO_CONTAINER$' else (select container from emf_definitionentry group by container having count(container) > 2 limit 1) end from emf_datatypedefinition limit 1), 'emf:structured', 2, (select id from emf_datatypedefinition where name='boolean'));
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-8" author="bbonev">
		<validCheckSum>7:3b4f93aeffd23d52e9fba68e71dd7dcb</validCheckSum>
		<preConditions onFail="CONTINUE" onFailMessage="Document entity table not migrated, yet">
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-6"/>
			<not>
				<dbms type="h2"/>
			</not>
		</preConditions>
		<comment>Migrate document custom properties into properties tables</comment>
		<createTable tableName="temp_properties">
			<column name="valueid" type="int8" />
			<column name="bean_id" type="varchar(100)" />
			<column name="bean_type" type="int" />
			<column name="propertyid" type="int8" />
			<column name="actualtype" type="int" />
			<column name="persistedtype" type="int" />
			<column name="booleanvalue" type="int2"/>
            <column name="stringvalue" type="VARCHAR(2048)"/>
		</createTable>
		<sql>
			insert into temp_properties(valueid, bean_id, bean_type, propertyid, actualtype, persistedtype, booleanvalue, stringvalue)
			select nextval('emf_propertyvalue_id_seq'), id, 3, (select id from emf_prototype where name = 'emf:purpose'), 6, 6, null, purpose from cmf_documententity where purpose is not null;
			insert into temp_properties(valueid, bean_id, bean_type, propertyid, actualtype, persistedtype, booleanvalue, stringvalue)
			select nextval('emf_propertyvalue_id_seq'), id, 3, (select id from emf_prototype where name = 'emf:structured'), 1, 1, structured, null from cmf_documententity where structured is not null;
		</sql>
		<sql endDelimiter=";">
			WITH prop_value AS (
				insert into emf_propertyvalue(id, actualtype, persistedtype, booleanvalue, stringvalue)
					select valueid, actualtype, persistedtype, booleanvalue, stringvalue from temp_properties
				RETURNING id
			)
			insert into emf_properties(bean_id, bean_type, listindex, propertyid, value_id)
				select bean_id, bean_type, -1, propertyid, valueid from temp_properties;
		</sql>
		<dropTable tableName="temp_properties"/>
	</changeSet>
	<!-- 
		Workflow entity migration
	 -->
	 <changeSet id="seip-1.10.0-9.0" author="bbonev">
	 	<preConditions onFail="MARK_RAN" onFailMessage="workflowinstancecontext datatype definition already defined">
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='workflowinstancecontext';</sqlCheck>
		</preConditions>
		<comment>Insert workflowinstancecontext data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('', 'workflowinstancecontext', '');
		</sql>
	</changeSet>
	 <changeSet id="seip-1.10.0-9" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="Workflow entity table does not exist or no data type definitions">
			<tableExists tableName="cmf_workflowinstance"/>
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='workflowinstancecontext';</sqlCheck>
		</preConditions>
		<comment>Migrate document entity data into generic table</comment>
		<sql endDelimiter=";">
			insert into seip_instanceentity (id, instancetype, owninginstanceid, owninginstancetype, definitionid, definitionrevision, definitionpath, dmsid, cmid, contextpath, tenantid) 
				select id, (select d.id from emf_datatypedefinition d where d.name='workflowinstancecontext'), owningreferenceeid, owningreferencetype, workflowdefid, revision, null, dmid, cmid, null, container from cmf_workflowinstance;
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-10.1-" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="dmsNodeId property protype already inserted or no required data present">
			<!-- the property definition does not contain definition for property with name 'structured' -->
			<sqlCheck expectedResult="0">select count(*) from emf_prototype where name='emf:dmsNodeId'</sqlCheck>
			<!-- there is text data type definition -->
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='text';</sqlCheck>
		</preConditions>
		<comment>Insert dmsNodeId property definition</comment>
		<sql>
			insert into emf_prototype(container, name, multivalued, datatype_id)
				values ((select case when (select count(container) from emf_definitionentry) = 0 then '$NO_CONTAINER$' else (select container from emf_definitionentry group by container having count(container) > 2 limit 1) end from emf_datatypedefinition limit 1), 'emf:dmsNodeId', 2, (select id from emf_datatypedefinition where name='text'));
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-10.2" author="bbonev">
	 	<preConditions onFail="MARK_RAN" onFailMessage="uri datatype definition already defined">
			<!-- there is scheduleinstance data type definition -->
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='uri';</sqlCheck>
		</preConditions>
		<comment>Insert uri data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('Uri', 'uri', 'Uri');
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-10.3-" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="bpmnState property protype already inserted or no required data present">
			<!-- the property definition does not contain definition for property with name 'bpmnState' -->
			<sqlCheck expectedResult="0">select count(*) from emf_prototype where name='emf:bpmnState'</sqlCheck>
			<!-- there is text data type definition -->
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='uri';</sqlCheck>
		</preConditions>
		<comment>Insert bpmnState property definition</comment>
		<sql>
			insert into emf_prototype(container, name, multivalued, datatype_id)
				values ((select case when (select count(container) from emf_definitionentry) = 0 then '$NO_CONTAINER$' else (select container from emf_definitionentry group by container having count(container) > 2 limit 1) end from emf_datatypedefinition limit 1), 'emf:bpmnState', 2, (select id from emf_datatypedefinition where name='uri'));
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-11" author="bbonev">
		<validCheckSum>7:3dda540bb73be5e78032a5642632ad8f</validCheckSum>
		<preConditions onFail="CONTINUE" onFailMessage="Workflow entity table not migrated, yet">
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-9"/>
			<not>
				<dbms type="h2"/>
			</not>
		</preConditions>
		<comment>Migrate workflow custom properties into properties tables</comment>
		<createTable tableName="temp_properties">
			<column name="valueid" type="int8" />
			<column name="bean_id" type="varchar(100)" />
			<column name="bean_type" type="int" />
			<column name="propertyid" type="int8" />
			<column name="actualtype" type="int" />
			<column name="persistedtype" type="int" />
			<column name="booleanvalue" type="int2"/>
            <column name="stringvalue" type="VARCHAR(2048)"/>
		</createTable>
		<sql>
			insert into temp_properties(valueid, bean_id, bean_type, propertyid, actualtype, persistedtype, booleanvalue, stringvalue)
			select nextval('emf_propertyvalue_id_seq'), id, 4, (select id from emf_prototype where name = 'emf:bpmnState'), 12, 6, null, case when active = 1 then 'emf:inProgress' else case when active = 2 then 'emf:completed' end end from cmf_workflowinstance where active is not null and active > 0;
			insert into temp_properties(valueid, bean_id, bean_type, propertyid, actualtype, persistedtype, booleanvalue, stringvalue)
			select nextval('emf_propertyvalue_id_seq'), id, 4, (select id from emf_prototype where name = 'emf:dmsNodeId'), 6, 6, null, workflowinstanceid from cmf_workflowinstance where workflowinstanceid is not null;
		</sql>
		<sql endDelimiter=";">
			WITH prop_value AS (
				insert into emf_propertyvalue(id, actualtype, persistedtype, booleanvalue, stringvalue)
					select valueid, actualtype, persistedtype, booleanvalue, stringvalue from temp_properties
				RETURNING id
			)
			insert into emf_properties(bean_id, bean_type, listindex, propertyid, value_id)
				select bean_id, bean_type, -1, propertyid, valueid from temp_properties;
		</sql>
		<dropTable tableName="temp_properties"/>
	</changeSet>
	<!-- 
		Task entity migration
	 -->
	<changeSet id="seip-1.10.0-12.01" author="bbonev">
	 	<preConditions onFail="MARK_RAN" onFailMessage="taskinstance datatype definition already defined">
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='taskinstance';</sqlCheck>
		</preConditions>
		<comment>Insert taskinstance data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('', 'taskinstance', '');
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-12.02" author="bbonev">
	 	<preConditions onFail="MARK_RAN" onFailMessage="standalonetaskinstance datatype definition already defined">
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='standalonetaskinstance';</sqlCheck>
		</preConditions>
		<comment>Insert standalonetaskinstance data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('', 'standalonetaskinstance', '');
		</sql>
	</changeSet>
	 <changeSet id="seip-1.10.0-12" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="Task entity table does not exist or no data type definitions">
			<tableExists tableName="cmf_taskentity"/>
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='standalonetaskinstance';</sqlCheck>
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='taskinstance';</sqlCheck>
		</preConditions>
		<comment>Migrate task entity data into generic table</comment>
		<sql endDelimiter=";">
			insert into seip_instanceentity (id, instancetype, owninginstanceid, owninginstancetype, definitionid, definitionrevision, definitionpath, dmsid, cmid, contextpath, tenantid) 
				select id, (select d.id from emf_datatypedefinition d where d.name='standalonetaskinstance'), owninginstanceid, owninginstancetype, definitionid, revision, parentpath, dmsid, cmid, treepath, container from cmf_taskentity where tasktype = 1;
			insert into seip_instanceentity (id, instancetype, owninginstanceid, owninginstancetype, definitionid, definitionrevision, definitionpath, dmsid, cmid, contextpath, tenantid) 
				select id, (select d.id from emf_datatypedefinition d where d.name='taskinstance'), owninginstanceid, owninginstancetype, definitionid, revision, parentpath, dmsid, cmid, treepath, container from cmf_taskentity where tasktype = 0;
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-13.1-" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="contextId property protype already inserted or no required data present">
			<!-- the property definition does not contain definition for property with name 'contextId' -->
			<sqlCheck expectedResult="0">select count(*) from emf_prototype where name='emf:contextId'</sqlCheck>
			<!-- there is text data type definition -->
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='text';</sqlCheck>
		</preConditions>
		<comment>Insert contextId property definition</comment>
		<sql>
			insert into emf_prototype(container, name, multivalued, datatype_id)
				values ((select case when (select count(container) from emf_definitionentry) = 0 then '$NO_CONTAINER$' else (select container from emf_definitionentry group by container having count(container) > 2 limit 1) end from emf_datatypedefinition limit 1), 'emf:contextId', 2, (select id from emf_datatypedefinition where name='text'));
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-14" author="bbonev">
		<validCheckSum>7:c1d4c555c314fb54939bec43dbb39996</validCheckSum>
		<preConditions onFail="CONTINUE" onFailMessage="Task entity table not migrated, yet">
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-12"/>
			<not>
				<dbms type="h2"/>
			</not>
		</preConditions>
		<comment>Migrate tasks custom properties into properties tables</comment>
		<createTable tableName="temp_properties">
			<column name="valueid" type="int8" />
			<column name="bean_id" type="varchar(100)" />
			<column name="bean_type" type="int" />
			<column name="propertyid" type="int8" />
			<column name="actualtype" type="int" />
			<column name="persistedtype" type="int" />
			<column name="booleanvalue" type="int2"/>
            <column name="stringvalue" type="VARCHAR(2048)"/>
		</createTable>
		<sql>
			insert into temp_properties(valueid, bean_id, bean_type, propertyid, actualtype, persistedtype, booleanvalue, stringvalue)
			select nextval('emf_propertyvalue_id_seq'), id, 5, (select id from emf_prototype where name = 'emf:bpmnState'), 12, 6, null, case when state = 0 then 'emf:inProgress' else case when state = 1 then 'emf:completed' end end from cmf_taskentity where state is not null;
			insert into temp_properties(valueid, bean_id, bean_type, propertyid, actualtype, persistedtype, booleanvalue, stringvalue)
			select nextval('emf_propertyvalue_id_seq'), id, 5, (select id from emf_prototype where name = 'emf:dmsNodeId'), 6, 6, null, dmid from cmf_taskentity where dmid is not null;
			insert into temp_properties(valueid, bean_id, bean_type, propertyid, actualtype, persistedtype, booleanvalue, stringvalue)
			select nextval('emf_propertyvalue_id_seq'), id, 5, (select id from emf_prototype where name = 'emf:contextId'), 6, 6, null, workflowinstanceid from cmf_taskentity where workflowinstanceid is not null;
		</sql>
		<sql endDelimiter=";">
			WITH prop_value AS (
				insert into emf_propertyvalue(id, actualtype, persistedtype, booleanvalue, stringvalue)
					select valueid, actualtype, persistedtype, booleanvalue, stringvalue from temp_properties
				RETURNING id
			)
			insert into emf_properties(bean_id, bean_type, listindex, propertyid, value_id)
				select bean_id, bean_type, -1, propertyid, valueid from temp_properties;
		</sql>
		<dropTable tableName="temp_properties"/>
	</changeSet>
	<changeSet id="seip-1.10.0-14.1" author="bbonev">
		<preConditions onFail="CONTINUE" onFailMessage="Task entity table not migrated, yet">
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-12"/>
		</preConditions>
		<comment>Migrate assigned task table. First we remove info for start tasks and then migrate the ids</comment>
		<sql endDelimiter=";">
			delete from cmf_assignedusertasks where taskinstanceid in (select workflowinstanceid from cmf_workflowinstance);
			update cmf_assignedusertasks set taskinstanceid = (select dmsid from cmf_taskentity where taskinstanceid = dmid) where taskinstanceid in (select dmid from cmf_taskentity where dmsid is not null);
		</sql>
	</changeSet>
	<!-- 
		Project entity migration
	 -->
	<changeSet id="seip-1.10.0-15.0" author="bbonev">
	 	<preConditions onFail="MARK_RAN" onFailMessage="projectinstance datatype definition already defined">
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='projectinstance';</sqlCheck>
		</preConditions>
		<comment>Insert projectinstance data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('', 'projectinstance', '');
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-15" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="Project entity table does not exist or no data type definitions">
			<tableExists tableName="pmf_projectentity"/>
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='projectinstance';</sqlCheck>
		</preConditions>
		<comment>Migrate project entity data into generic table</comment>
		<sql endDelimiter=";">
			insert into seip_instanceentity (id, instancetype, owninginstanceid, owninginstancetype, definitionid, definitionrevision, definitionpath, dmsid, cmid, contextpath, tenantid) 
				select id, (select d.id from emf_datatypedefinition d where d.name='projectinstance'), null, null, definitionid, revision, null, dmid, cmid, null, container from pmf_projectentity;
		</sql>
	</changeSet>
	<!-- 
		Common entity migration
	 -->
	<changeSet id="seip-1.10.0-16.0" author="bbonev">
	 	<preConditions onFail="MARK_RAN" onFailMessage="commoninstance datatype definition already defined">
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='commoninstance';</sqlCheck>
		</preConditions>
		<comment>Insert commoninstance data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('', 'commoninstance', '');
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-16" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="Common entity table does not exist or no data type definitions">
			<tableExists tableName="emf_commonentity"/>
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='commoninstance';</sqlCheck>
		</preConditions>
		<comment>Migrate common entity data into generic table</comment>
		<sql endDelimiter=";">
			insert into seip_instanceentity (id, instancetype, owninginstanceid, owninginstancetype, definitionid, definitionrevision, definitionpath, dmsid, cmid, contextpath, tenantid) 
				select id, (select d.id from emf_datatypedefinition d where d.name='commoninstance'), null, null, definitionid, revision, path, null, null, null, null from emf_commonentity;
		</sql>
	</changeSet>
	<!-- 
		Schedule instance entity migration
	 -->
	 <changeSet id="seip-1.10.0-17" author="bbonev">
	 	<preConditions onFail="MARK_RAN" onFailMessage="scheduleinstance datatype definition already defined">
			<!-- there is scheduleinstance data type definition -->
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='scheduleinstance';</sqlCheck>
		</preConditions>
		<comment>Insert scheduleinstance data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('Project schedule instance object', 'scheduleinstance', 'Schedule instance');
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-18" author="bbonev">
		<preConditions onFail="MARK_RAN">
			<tableExists tableName="pmfs_scheduleentity"/>
			<tableExists tableName="pmfs_scheduleassignment"/>
			<tableExists tableName="pmfs_scheduledependency"/>
			<not>
				<columnExists tableName="pmfs_scheduleentity" columnName="long_id"/>
			</not>
		</preConditions>
		<comment>Migrate schedule entity table from long id to string</comment>
		<renameColumn tableName="pmfs_scheduleentity" oldColumnName="id" newColumnName="long_id"/>
		<addColumn tableName="pmfs_scheduleentity">
			<column name="id" type="varchar(128)" />
		</addColumn>
		<modifyDataType tableName="pmfs_scheduleassignment" columnName="schedule_id" newDataType="varchar(128)"/>
		<modifyDataType tableName="pmfs_scheduledependency" columnName="schedule_id" newDataType="varchar(128)"/>
		<modifyDataType tableName="pmfs_scheduleentryentity" columnName="schedule_id" newDataType="varchar(128)"/>
		<sql>
			update pmfs_scheduleentity set id = 'emf:schedule-' || long_id where id is null;
			update emf_properties set bean_id = 'emf:schedule-' || bean_id where bean_type = 51;
		</sql>
		<sql endDelimiter=";">
			update pmfs_scheduleassignment set schedule_id = 'emf:schedule-' || schedule_id; 
			update pmfs_scheduledependency set schedule_id = 'emf:schedule-' || schedule_id; 
			update pmfs_scheduleentryentity set schedule_id = 'emf:schedule-' || schedule_id; 
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0.19" author="bbonev">
		<preConditions onFail="MARK_RAN" onFailMessage="Schedule entity table does not exist or no data type definitions">
			<tableExists tableName="pmfs_scheduleentity"/>
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-18"/>
			<sqlCheck expectedResult="1">select count(*) from emf_datatypedefinition where name='scheduleinstance';</sqlCheck>
		</preConditions>
		<comment>Migrate schedule entity data into generic table</comment>
		<sql endDelimiter=";">
			insert into seip_instanceentity (id, instancetype, owninginstanceid, owninginstancetype, definitionid, definitionrevision, definitionpath, dmsid, cmid, contextpath, tenantid) 
				select id, (select d.id from emf_datatypedefinition d where d.name='scheduleinstance'), owningreferenceid, owningreferencetype, identifier, revision, null, null, null, null, container from pmfs_scheduleentity;
		</sql>
	</changeSet>
	<!-- 
		Schedule entry entity migration
	 -->
	<changeSet id="seip-1.10.0-20" author="bbonev">
	 	<preConditions onFail="MARK_RAN" onFailMessage="schedulesntry datatype definition already defined">
			<!-- there is scheduleinstance data type definition -->
			<sqlCheck expectedResult="0">select count(*) from emf_datatypedefinition where name='scheduleentry';</sqlCheck>
		</preConditions>
		<comment>Insert scheduleentry data type definition</comment>
		<sql>
			insert into emf_datatypedefinition(description, name, title)
				values ('Project schedule entry object', 'scheduleentry', 'Schedule entry');
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-21" author="bbonev">
		<preConditions onFail="CONTINUE" onFailMessage="To migrate schedule entry id first schedule must be migrated">
			<tableExists tableName="pmfs_scheduleentryentity"/>
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-18"/>
			<not>
				<columnExists tableName="pmfs_scheduleentryentity" columnName="long_id"/>
			</not>
		</preConditions>
		<comment>Migrate schedule entity table from long id to string</comment>
		<renameColumn tableName="pmfs_scheduleentryentity" oldColumnName="id" newColumnName="long_id"/>
		<addColumn tableName="pmfs_scheduleentryentity">
			<column name="id" type="varchar(128)" />
		</addColumn>
		<modifyDataType tableName="pmfs_scheduleassignment" columnName="task_id" newDataType="varchar(128)"/>
		<modifyDataType tableName="pmfs_scheduledependency" columnName="from_id" newDataType="varchar(128)"/>
		<modifyDataType tableName="pmfs_scheduledependency" columnName="to_id" newDataType="varchar(128)"/>
		<modifyDataType tableName="pmfs_scheduleentryentity" columnName="parent_id" newDataType="varchar(128)"/>
		<sql>
			update pmfs_scheduleentryentity set id = 'emf:scheduleentry-' || long_id where id is null;
			update pmfs_scheduleentryentity set parent_id = 'emf:scheduleentry-' || parent_id; 
			update emf_properties set bean_id = 'emf:scheduleentry-' || bean_id where bean_type = 52;
		</sql>
		<sql endDelimiter=";">
			update pmfs_scheduleassignment set task_id = 'emf:scheduleentry-' || task_id; 
			update pmfs_scheduledependency set from_id = 'emf:scheduleentry-' || from_id; 
			update pmfs_scheduledependency set to_id = 'emf:scheduleentry-' || to_id; 
		</sql>
	</changeSet>
	<!-- Drop migrated tables -->
	<changeSet id="seip-1.10.0-22.1" author="bbonev">
		<preConditions onFail="CONTINUE">
			<tableExists tableName="cmf_caseentity"/>
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-2"/>
		</preConditions>
		<dropTable tableName="cmf_caseentity"/>
	</changeSet>
	<changeSet id="seip-1.10.0-22.2" author="bbonev">
		<preConditions onFail="CONTINUE">
			<tableExists tableName="cmf_sectionentity"/>
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-5"/>
		</preConditions>
		<dropTable tableName="cmf_sectionentity"/>
	</changeSet>
	<changeSet id="seip-1.10.0-22.3" author="bbonev">
		<preConditions onFail="CONTINUE">
			<tableExists tableName="cmf_documententity"/>
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-8"/>
		</preConditions>
		<dropTable tableName="cmf_documententity"/>
	</changeSet>
	<changeSet id="seip-1.10.0-22.4" author="bbonev">
		<preConditions onFail="CONTINUE">
			<tableExists tableName="cmf_workflowinstance"/>
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-11"/>
		</preConditions>
		<dropTable tableName="cmf_workflowinstance"/>
	</changeSet>
	<changeSet id="seip-1.10.0-22.5" author="bbonev">
		<preConditions onFail="CONTINUE">
			<tableExists tableName="cmf_taskentity"/>
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-14.1"/>
		</preConditions>
		<dropTable tableName="cmf_taskentity"/>
	</changeSet>
	<changeSet id="seip-1.10.0-22.6" author="bbonev">
		<preConditions onFail="CONTINUE">
			<tableExists tableName="pmf_projectentity"/>
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-15"/>
		</preConditions>
		<dropTable tableName="pmf_projectentity"/>
	</changeSet>
	<changeSet id="seip-1.10.0-22.7" author="bbonev">
		<preConditions onFail="CONTINUE">
			<tableExists tableName="emf_commonentity"/>
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-16"/>
		</preConditions>
		<dropTable tableName="emf_commonentity"/>
	</changeSet>
	<changeSet id="seip-1.10.0-22.8" author="bbonev">
		<preConditions onFail="CONTINUE">
			<tableExists tableName="pmfs_scheduleentity"/>
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="bbonev" id="seip-1.10.0-19"/>
		</preConditions>
		<dropTable tableName="pmfs_scheduleentity"/>
	</changeSet>
	<changeSet id="seip-1.10.0-24" author="bbonev">
		<comment>Fix for missing definitionPath in for documents</comment>
		<sql>
			update seip_instanceentity set definitionrevision = 0 where definitionpath is null and instancetype=(select id from emf_datatypedefinition where name='documentinstance') and definitionrevision > 0;
		</sql>
	</changeSet>
	<changeSet id="seip-1.10.0-25" author="irusev">
		<comment>Changing the property "purpose" to "emf:purpose"</comment>
		<sql>
			update emf_properties set propertyid = (select id from emf_prototype where name = 'emf:purpose') where propertyid = (select id from emf_prototype where name = 'purpose');
		</sql>
	</changeSet>
	
	<changeSet id="seip-1.20.0-4.1" author="bbonev">
		<comment>Delete all header properties for all instances</comment>
		<createTable tableName="properties_temp">
			<column name="id" type="int8" autoIncrement="true">
				<constraints primaryKey="true"/>
			</column>
			<column name="prop_id" type="int8" />
			<column name="value_id" type="int8" />
		</createTable>
		<sql endDelimiter=";">
			insert into properties_temp (prop_id, value_id) select id, value_id from emf_properties where propertyId in (select id from emf_prototype where name in ('compact_header', 'default_header', 'breadcrumb_header', 'tooltip_header'));
			delete from emf_properties where id in (select prop_id from properties_temp);
			delete from emf_propertyvalue where id in (select value_id from properties_temp);
		</sql>
		<dropTable tableName="properties_temp"/>
	</changeSet>
	<changeSet id="seip-1.20.0-6" author="mihail.radkov">
		<comment>Removes all entries for SolrStatisticSchedulerAction</comment>
		<sql endDelimiter=";">
			delete from emf_schedulerentity where actionname = 'SolrStatisticSchedulerAction';
		</sql>
	</changeSet>
	<changeSet id="seip-1.20.0-11" author="bbonev">
		<comment>Add lock entity table</comment>
		<createTable tableName="seip_lockedentity">
			<column name="id" type="int8" autoIncrement="true">
				<constraints primaryKey="true"/>
			</column>
			<column name="lockedinstanceid" type="varchar(128)">
				<constraints nullable="false" />
			</column>
			<column name="lockedinstancetype" type="int8">
				<constraints nullable="false" />
			</column>
			<column name="lockedby" type="varchar(64)">
				<constraints nullable="false" />
			</column>
			<column name="lockedon" type="TIMESTAMP WITH TIME ZONE" />
			<column name="locktype" type="varchar(16)" />
		</createTable>
		<createIndex tableName="seip_lockedentity" indexName="idx_lock_id" unique="true">
			<column name="lockedinstanceid" />
		</createIndex>
	</changeSet>
	<changeSet id="seip-1.20.0-12" author="bbonev">
		<comment>Migrate old locking functionality (unlock all content from DMS)</comment>
		<sql>
			insert into seip_lockedentity (lockedinstanceid, lockedinstancetype, lockedby, lockedon, locktype) 
				select p.bean_id, i.instancetype, substring(pv.stringvalue from 0 for 64), now(), 'initial' from emf_properties p inner join emf_propertyvalue pv on p.value_id=pv.id, emf_prototype f , seip_instanceentity i
					where i.id=p.bean_id AND f.name = 'lockedBy' and f.id=p.propertyid and pv.stringvalue is not null;
		</sql>
	</changeSet>
	<changeSet id="seip-1.20.0-13" author="bbonev">
		<comment>Delete lockedBy properties for all instances</comment>
		<createTable tableName="properties_temp">
			<column name="id" type="int8" autoIncrement="true">
				<constraints primaryKey="true"/>
			</column>
			<column name="prop_id" type="int8" />
			<column name="value_id" type="int8" />
		</createTable>
		<sql endDelimiter=";">
			insert into properties_temp (prop_id, value_id) select id, value_id from emf_properties where propertyId in (select id from emf_prototype where name = 'lockedBy');
			delete from emf_properties where id in (select prop_id from properties_temp);
			delete from emf_propertyvalue where id in (select value_id from properties_temp);
		</sql>
		<dropTable tableName="properties_temp"/>
	</changeSet>
	<changeSet id="seip-1.21.0-1" author="mihail.radkov">
		<comment>Renames RestorePermissionInheritanceModel action name in emf_schedulerentity due to typo.</comment>
		<sql endDelimiter=";">
			update emf_schedulerentity set actionname = 'RestorePermissionInheritanceModel' where actionname = 'RestorePermissionInhiratanceModel';
		</sql>
	</changeSet>
	<changeSet id="seip-1.22.0-1" author="sinan.mustafov">
		<comment>Change workflow property name from contextType to contextDefinitionId</comment>
		<sql>
			update emf_prototype set name = 'contextDefinitionId' where name = 'contextType';
		</sql>
	</changeSet>
	<changeSet id="seip-1.22.0-2" author="tony.kunchev">
		<comment>Adds new column in emf_mailqueueentry for mails grouping</comment>
		<addColumn tableName="emf_mailqueueentry">
			<column name="mailgroupid" type="varchar(128)" />
		</addColumn>
	</changeSet>
	<changeSet id="seip-1.22.0-4" author="bbonev">
		<preConditions>
			<tableExists tableName="emf_resource"/>
		</preConditions>
		<comment>Add is_active and source columns to resource table</comment>
		<addColumn tableName="emf_resource">
			<column name="source" type="varchar(100)" />
			<column name="is_active" type="int2" />
		</addColumn>
	</changeSet>
	<changeSet id="seip-1.22.0-5" author="bbonev">
		<preConditions>
			<not>
				<tableExists tableName="seip_groupmembership"/>
			</not>
		</preConditions>
		<comment>Add resource members table</comment>
		<createTable tableName="seip_groupmembership">
			<column name="id" type="int8" autoIncrement="true">
				<constraints primaryKey="true"/>
			</column>
			<column name="group_id" type="varchar(100)" />
			<column name="member_id" type="varchar(100)" />
		</createTable>
		<createIndex tableName="seip_groupmembership" indexName="gme_idx_groupid">
			<column name="group_id" />
		</createIndex>
		<createIndex tableName="seip_groupmembership" indexName="gme_idx_memberid">
			<column name="member_id" />
		</createIndex>
		<addUniqueConstraint tableName="seip_groupmembership" columnNames="group_id,member_id" constraintName="gme_uc_uniquemember"/>
	</changeSet>
	<changeSet id="seip-1.22.0-6" author="bbonev">
		<preConditions onFail="MARK_RAN">
			<tableExists tableName="emf_prototype"/>
			<sqlCheck expectedResult="1">select case when count(*) > 0 then 1 else 0 end from emf_prototype where name='displayName'</sqlCheck>
		</preConditions>
		<comment>Remove display name properties for all users that have it</comment>
		<sql>delete from emf_properties p where p.propertyid in (select id from emf_prototype where name='displayName');</sql>
	</changeSet>
	<changeSet id="seip-1.23.0-1" author="bbonev">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="emf_resource" columnName="definition_id"/>
			</not>
		</preConditions>
		<comment>Add resource definition id if not present</comment>
		<addColumn tableName="emf_resource">
			<column name="definition_id" type="varchar(100)" />
		</addColumn>
		<sql>
			update emf_resource set definition_id='userDefinition' where type in (1, 3);
			update emf_resource set definition_id='groupDefinition' where type in (2, 7);
		</sql>
	</changeSet>
	<changeSet id="seip-1.23.0-2" author="nvelkov">
		<comment>Adds new columns in emf_mailqueueentry for mail status and last retry date</comment>
		<addColumn tableName="emf_mailqueueentry">
			<column name="status" type="integer" />
			<column name="lastretry" type="TIMESTAMP WITH TIME ZONE" />
		</addColumn>
	</changeSet>
	<changeSet id="seip-2.0.0-1" author="akunchev">
		<preConditions onFail="MARK_RAN">
			<tableExists tableName="emf_prototype"/>
			<sqlCheck expectedResult="1">select count(*) from emf_prototype where name='documentVersion'</sqlCheck>
			<sqlCheck expectedResult="1">select count(*) from emf_prototype where name='version'</sqlCheck>
		</preConditions>
		<comment>Migrates document version property and removes documentVersion from emf_prototype</comment>
		<sql>
			update emf_properties set propertyid=(select id from emf_prototype where name = 'version') where propertyid=(select id from emf_prototype where name = 'documentVersion');
			delete from emf_prototype where name='documentVersion';
		</sql>
	</changeSet>
	<changeSet id="seip-2.0.0-2" author="bbonev">
		<comment>Removes all non generic definitions to prepare for single instance migration</comment>
		<sql>
			delete from emf_definitionentry where targettype in (select id from emf_datatypedefinition where name != 'genericdefinition') and identifier != '$DEFAULT_DEFINITION$';
		</sql>
	</changeSet>
	<changeSet id="seip-2.0.0-3" author="bbonev">
		<comment>Removes the deleted classes from types</comment>
		<sql>
			update emf_datatypedefinition set javaclassname=null, uri=null where name in ('documentinstance', 'caseinstance', 'sectioninstance', 
				'folderinstance', 'projectinstance', 'workflowinstancecontext', 'taskinstance', 'standalonetaskinstance', 'scheduleinstance', 'scheduleentry', 
				'commentinstance', 'topicinstance', 'imageannotation', 'documentdefinition', 'workflowdefinition', 'casedefinition', 'documentdefinitiontemplate', 
				'taskdefinitiontemplate', 'taskdefinition', 'taskdefinitionref', 'sectiondefinition', 'projectdefinition', 'objectdefinition');
		</sql>
	</changeSet>
	<changeSet id="seip-2.0.0-14" author="bbonev">
		<comment>Remove all other users from emf_resource table</comment>
		<sql>
			delete from emf_resource where identifier = 'SYSTEM_ALL_OTHER_USERS';
		</sql>
	</changeSet>
	<changeSet id="seip-2.0.0-15" author="bbonev">
		<comment>Remove all assigned roles for users, so that semantic permission sync could occur</comment>
		<sql>
			delete from emf_resourcerole where targettype in (select id from emf_datatypedefinition where name ='user');
		</sql>
	</changeSet>
	<changeSet id="seip-2.0.0-16" author="bbonev">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">select count(id) from emf_datatypedefinition where name ='objectinstance'</sqlCheck>
		</preConditions>
		<comment>Migrate permissions for libraries from class instance to object instance</comment>
		<sql>
			update emf_resourcerole set targettype = (select id from emf_datatypedefinition where name ='objectinstance') where targettype in (select id from emf_datatypedefinition where name ='classinstance');
			update emf_resourcerole set inherited_targettype = (select id from emf_datatypedefinition where name ='objectinstance') where inherited_targettype in (select id from emf_datatypedefinition where name ='classinstance');
		</sql>
	</changeSet>
	<changeSet id="seip-2.1.0-1" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="cmf_template" columnName="purpose"/>
			</not>
		</preConditions>
		<comment>Add purpose column to cmf_template. It will store whether the template's purpose is for created or uploaded content</comment>
		<addColumn  tableName="cmf_template" >
        	<column name="purpose" type="varchar(30)" />
    	</addColumn>
    	<addNotNullConstraint tableName="cmf_template" columnName="purpose" defaultNullValue="creatable"/>
    	<createIndex indexName="idx_tmpl_purpose" tableName="cmf_template" unique="false">
            <column name="purpose"/>
			<column name="groupid"/>
        </createIndex>
	</changeSet>
	<changeSet id="seip-2.1.0-2" author="akunchev">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="seip_content" columnName="version"/>
			</not>
		</preConditions>
		<comment>Adds version column to seip_content. It will store the version of the upload/created content. Adds additional column to the instance index.</comment>
		<addColumn  tableName="seip_content" >
        	<column name="version" type="int4" defaultValueNumeric="0"/>
    	</addColumn>
    	<dropIndex tableName="seip_content" indexName="idx_con_ins_t"/>
    	<createIndex tableName="seip_content" indexName="idx_con_ins_t">
    		<column name="instance_id"/>
    		<column name="purpose"/>
    		<column name="version"/>
    	</createIndex>
	</changeSet>
	<changeSet id="seip-2.1.0-3" author="akunchev">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="emf_archivedentity" columnName="majorversion" />
				<columnExists tableName="emf_archivedentity" columnName="minorversion" />
				<columnExists tableName="emf_archivedentity" columnName="targetid" />
				<columnExists tableName="emf_archivedentity" columnName="createdon" />
			</not>
		</preConditions>
		<comment>Adds additional columns to emf_archivedentity table so that it could support instance versioning. The id column is copied in new column[targetid], because it is not unique anymore. It will be generated. The new column will be used to store the target instance id.</comment>
		<addColumn tableName="emf_archivedentity">
			<column name="majorversion" type="int4" />
			<column name="minorversion" type="int4" />
			<column name="targetid" type="varchar(100)" />
			<column name="createdon" type="TIMESTAMP WITH TIME ZONE" />
		</addColumn>
		<sql>
			UPDATE emf_archivedentity SET targetid = id;
		</sql>
		<dropIndex tableName="emf_archivedentity" indexName="idx_arce_idtype"/>
		<createIndex tableName="emf_archivedentity" indexName="idx_arce_id">
			<column name="id" />
		</createIndex>
	</changeSet>
	<changeSet id="seip-2.1.0-4" author="akunchev">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">select count(*) from emf_prototype where name='emf:version'</sqlCheck>
		</preConditions>
		<comment>Updates the name of the version property to emf:version in emf_prototype table</comment>
		<sql>
			UPDATE emf_prototype SET name='emf:version' WHERE name='version';
		</sql>
	</changeSet>
	<changeSet id="seip-2.1.0-5" author="vtsonev">
		<comment>Adds default major and minor version to the archived entities that don't have ones</comment>
		<sql>
			update emf_archivedentity set majorversion='1' where majorversion is null;
			update emf_archivedentity set minorversion='0' where minorversion is null;
		</sql>
	</changeSet>
	
	<changeSet id="seip-2.1.0-6" author="hlungov">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">select count(id) from emf_datatypedefinition where name ='objectinstance'</sqlCheck>
		</preConditions>
		<comment>Migrates the emf_resourcerole to dataTypeDefinition - objectinstance</comment>
		<sql>
			update emf_resourcerole set targettype = (select id from emf_datatypedefinition where name ='objectinstance') where targettype is not null;
			update emf_resourcerole set inherited_targettype = (select id from emf_datatypedefinition where name ='objectinstance') where inherited_targettype is not null;
		</sql>
	</changeSet>
	<changeSet id="seip-2.1.0-7" author="akunchev">
		<preConditions onFail="MARK_RAN">
			<columnExists tableName="cmf_draftinstances" columnName="properties" />
			<columnExists tableName="cmf_draftinstances" columnName="status" />
		</preConditions>
      	<comment>Removes not needed columns from cmf_draftinstances table</comment>
		<dropColumn tableName="cmf_draftinstances" columnName="properties" />
		<dropColumn tableName="cmf_draftinstances" columnName="status" />
	</changeSet>
	<changeSet id="seip-2.1.0-8" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="emf_resourcerole" columnName="inherit_from_library"/>
			</not>
		</preConditions>
		<comment>Adds the new column inherit_from_library to emf_resourcerole table</comment>
		<addColumn  tableName="emf_resourcerole" >
        	<column name="inherit_from_library" type="int2" />
    	</addColumn>
	</changeSet>
	<changeSet id="seip-2.1.0-9" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<columnExists tableName="emf_resourcerole" columnName="inherit_from_library"/>
		</preConditions>
		<comment>Migrates the existing system rows to have inherit_from_library=true, or inserts new ones if there aren't any</comment>
		<sql>
			INSERT INTO emf_resourcerole (targetid, targettype, path, inherit_from_library)
			SELECT	targetid, targettype, path, 1 as inherit_from_library FROM emf_resourcerole
			where targetid not in (
				SELECT 	r.targetid FROM emf_resourcerole as r
				where r.inherited_targetid is not null
				group by r.targetid
			)
			/* 
			 * The magic number 40 is used to locate only instance URIs and skip library and user IDs
			 */
			and length(targetid) = 40
			group by targetid, targettype, path, inherit_from_library;
			UPDATE emf_resourcerole SET inherit_from_library = 1 WHERE inherited_targetid IS NOT null;
		</sql>
	</changeSet>
	<changeSet id="seip-2.1.0-10" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="emf_resourcerole" columnName="inherit_from_parent"/>
			</not>
		</preConditions>
		<comment>Adds the new column inherit_from_parent to emf_resourcerole table</comment>
		<addColumn  tableName="emf_resourcerole" >
        	<column name="inherit_from_parent" type="int2" />
    	</addColumn>
	</changeSet>
	<changeSet id="seip-2.1.0-11" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<columnExists tableName="emf_resourcerole" columnName="inherit_from_parent"/>
			<changeSetExecuted changeLogFile="com/sirma/itt/patch/changelog.xml" author="vtsonev" id="seip-2.1.0-9"/>
		</preConditions>
		<comment>Sets inherit_from_parent=true for the existing inheritance rows</comment>
		<sql>
			UPDATE emf_resourcerole SET inherit_from_parent = 1 WHERE role IS null;
		</sql>
	</changeSet>
	<changeSet id="seip-2.1.0-12" author="bbonev">
		<preConditions onFail="MARK_RAN">
			<columnExists tableName="emf_resourcerole" columnName="targettype"/>
		</preConditions>
		<comment>Drop unused columns for types of target and parent instances</comment>
		<!-- Drop indexes that uses the dropped columns -->
		<dropIndex tableName="emf_resourcerole" indexName="idx_prr_trr"/>
		<dropIndex tableName="emf_resourcerole" indexName="idx_prr_r_trr"/>
		<dropIndex tableName="emf_resourcerole" indexName="idx_prr_trr_path"/>
		
		<dropColumn tableName="emf_resourcerole" columnName="targettype"/>
		<dropColumn tableName="emf_resourcerole" columnName="inherited_targettype"/>

		<!-- Create back the index without the columns -->		
		<createIndex tableName="emf_resourcerole" indexName="idx_prr_trr">
			<column name="targetid" />
		</createIndex>
	</changeSet>
	<changeSet id="seip-2.2.0-1" author="akunchev">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">select count(*) from emf_resource where id like '%@%'</sqlCheck>
		</preConditions>
		<comment>Updates wrong users and groups ids. Replaces [@] with [-] in the ids.</comment>
		<sql>
			update emf_resource set id = replace(id, '@', '-') where id like '%@%';
		</sql>
	</changeSet>
	<changeSet id="seip-2.2.0-2" author="akunchev">
		<preConditions onFail="MARK_RAN">
		<not>
			<sqlCheck expectedResult="0">SELECT COUNT(*) FROM emf_archivedentity WHERE id NOT LIKE '%-v%.%' AND transactionid IS NULL</sqlCheck>
		</not>
		</preConditions>
		<comment>Migrates version id. They will be build from the original instance id and version number example - [emf:instance-id-v1.6]. Deletes duplicated version entries, caused by bugs in the functionality.</comment>
		<!-- Add temp column for the new ids -->
		<addColumn tableName="emf_archivedentity">
			<column name="temp_id" type="varchar(100)" />
		</addColumn>
		<sql endDelimiter=";">
			<!-- Build new ids and inserts them into the temp column. This ids will be used as ids of version instances. 
			They are build from the original instance id so that we could extract that id for permission checks and other common 
			logic related to original instance, but should be applied to the version as well. The suffix with the version number 
			is used to make this ids unique. -->
			UPDATE emf_archivedentity SET temp_id = CONCAT(targetid, '-v', majorversion, '.', minorversion) WHERE id NOT LIKE '%-v%.%' AND transactionid IS NULL;
		
			<!-- Remove properties for the duplicated entities for the versions. This query will delete all duplicated entries with the same version for the specific object.
			 The only entry that will stay will be the first created with that version. For example we have object with two entries for version 1.1,
			 this query will remove the second(or more if there are any) and leave the first one, because it is the correct one. -->
			DELETE FROM emf_archivedproperties WHERE bean_id IN 
						(SELECT y.id FROM emf_archivedentity y
        					INNER JOIN (SELECT temp_id, COUNT(*) AS CountOf 
        								FROM emf_archivedentity
                        				GROUP BY temp_id
                        				HAVING COUNT(*)>1) dt 
                        	ON y.temp_id=dt.temp_id
            WHERE y.createdon >= (SELECT MIN(createdon) FROM emf_archivedentity WHERE temp_id = y.temp_id));
		
			<!-- Remove duplicated entities for versions of the objects. This query will delete all duplicated entries with the same version for the specific object.
			 The only entry that will stay will be the first created with that version. For example we have object with two entries for version 1.1,
			 this query will remove the second(or more if there are any) and leave the first one, because it is the correct one. -->
			DELETE FROM emf_archivedentity WHERE id IN 
						(SELECT y.id FROM emf_archivedentity y
        					INNER JOIN (SELECT temp_id, COUNT(*) AS CountOf 
        								FROM emf_archivedentity
                        				GROUP BY temp_id
                        				HAVING COUNT(*)>1) dt 
                        	ON y.temp_id=dt.temp_id
            WHERE y.createdon >= (SELECT MIN(createdon) FROM emf_archivedentity WHERE temp_id = y.temp_id));
            
            <!-- Update properties bean_id column with the new ids as it is used as key for the version entries. -->
       		UPDATE emf_archivedproperties AS ap SET bean_id=dt.temp_id
			FROM (SELECT ap.bean_id, ae.temp_id, ae.transactionid FROM emf_archivedproperties AS ap INNER JOIN emf_archivedentity AS ae ON ap.bean_id=ae.id) AS dt
			WHERE ap.bean_id=dt.bean_id AND ap.bean_id NOT LIKE '%-v%.%' AND dt.transactionid IS NULL;
            
            <!-- Update id colum for the archived entries with the new ids. -->
            UPDATE emf_archivedentity SET id = temp_id WHERE transactionid IS NULL;
		</sql>
		<!-- Drop temp column -->
		<dropColumn tableName="emf_archivedentity" columnName="temp_id" />
	</changeSet>
	<changeSet id="seip-2.2.0-3" author="akunchev">
		<preConditions onFail="MARK_RAN">
			<columnExists tableName="emf_archivedentity" columnName="instancetype"/>
		</preConditions>
		<comment>Drop unused columns for types for the original instance in emf_archivedentity table.</comment>
		<dropColumn tableName="emf_archivedentity" columnName="instancetype" />
	</changeSet>
	<changeSet id="seip-2.2.0-4" author="akunchev">
		<preConditions onFail="MARK_RAN">
			<not>
				<sqlCheck expectedResult="0">SELECT COUNT(*) FROM seip_content WHERE purpose = 'queries'</sqlCheck>
			</not>
		</preConditions>
		<comment>Remove unused content with purpose [queries] that isn't needed anymore.</comment>
		<sql>
			DELETE FROM seip_content WHERE purpose='queries';
		</sql>
	</changeSet>
	
	<changeSet id="seip-2.3.0-1" author="amitev" dbms="postgresql">
		<preConditions onFail="MARK_RAN">
			<tableExists tableName="emf_resourcerole" />
		</preConditions>
		<comment>Fix the inheritance info records in emf_resourcerole</comment>
		<sql endDelimiter=";">
			<![CDATA[
				/* Delete duplicate inheritance info records in emf_resourcerole */
				delete from emf_resourcerole where id in (
					select id from 
					(select id, targetid, ROW_NUMBER() over (partition by targetid) as rnum from emf_resourcerole 
					  where role is null order by id) as t
					where t.rnum > 1
				);
				
				/* Recreate missing inheritance info entities */
				insert into emf_resourcerole (targetid, inherit_from_library, inherit_from_parent,path)
				select distinct(targetid),2,2,'' from emf_resourcerole a where role is not null 
				and not exists (select * from emf_resourcerole b where b.targetid = a.targetid and b.role is null)
			 ]]>
		</sql>
	</changeSet>

	<changeSet id="seip-2.3.0-2" author="amitev">
		<preConditions onFail="MARK_RAN">
			<tableExists tableName="emf_resourcerole" />
		</preConditions>
		<comment>Normalize permission model - one table for inheritance info and one for the special permissions</comment>

		<!-- Create the tables -->
		<createTable tableName="sep_entity_permission">
			<column autoIncrement="true" name="id" type="bigserial">
				<constraints nullable="false" primaryKey="true" primaryKeyName="sep_entity_permission_pkey" />
			</column>

			<column name="target_id" type="varchar(128)">
				<constraints nullable="false" />
			</column>

			<column name="parent_id" type="int8" />
			<column name="inherit_from_parent" type="int2" />

			<column name="library_id" type="int8" />
			<column name="inherit_from_library" type="int2" />
		</createTable>

		<addUniqueConstraint tableName="sep_entity_permission" columnNames="target_id" constraintName="cstr_unique_target_id" />

		<addForeignKeyConstraint constraintName="fk_entity_permission_parent" baseTableName="sep_entity_permission"
			baseColumnNames="parent_id" referencedTableName="sep_entity_permission" referencedColumnNames="id" deferrable="false"
			initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" />

		<addForeignKeyConstraint constraintName="fk_entity_permission_library" baseTableName="sep_entity_permission"
			baseColumnNames="library_id" referencedTableName="sep_entity_permission" referencedColumnNames="id" deferrable="false"
			initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" />
		
		<createIndex tableName="sep_entity_permission" indexName="idx_parent_id">
			<column name="parent_id" />
		</createIndex>

		<createTable tableName="sep_authority_role_assignment">
			<column autoIncrement="true" name="id" type="bigserial">
				<constraints nullable="false" primaryKey="true" primaryKeyName="sep_authority_role_assignment_pkey" />
			</column>

			<column name="permission_id" type="int8">
				<constraints nullable="false" />
			</column>

			<column name="authority" type="varchar(128)">
				<constraints nullable="false" />
			</column>

			<column name="role" type="varchar(128)">
				<constraints nullable="false" />
			</column>
		</createTable>
		
		<addForeignKeyConstraint constraintName="fk_sep_authority_role_assignment_permission"
			baseTableName="sep_authority_role_assignment" baseColumnNames="permission_id" referencedTableName="sep_entity_permission"
			referencedColumnNames="id" deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" />
			
		<createIndex tableName="sep_authority_role_assignment" indexName="idx_permission_id">
			<column name="permission_id" />
		</createIndex>

		<!-- Migrate the data from emf_resourcerole -->
		<sql endDelimiter=";">
			<![CDATA[ 
				/* Migrate from emf_resourcerole to sep_entity_permission */
				
				insert into sep_entity_permission (target_id, inherit_from_parent, inherit_from_library)
				select targetid, inherit_from_parent, inherit_from_library from emf_resourcerole
				where role is null order by id;
				
				/* Create parent-child relationships */
				update sep_entity_permission p
					set parent_id = (select id from sep_entity_permission
					where target_id = (
						select inherited_targetid from emf_resourcerole where targetid = p.target_id and role is null
					)
				);
				
				/* Migrate authority role assignments */
				insert into sep_authority_role_assignment (authority, role, permission_id)
				select authority_id, role, (select id from sep_entity_permission p where p.target_id = r.targetid) 
				from emf_resourcerole r where role is not null and authority_id is not null;
			 ]]>
		</sql>
	</changeSet>
	
	<changeSet id="seip-2.3.0-3" author="amitev">
		<preConditions onFail="MARK_RAN">
			<tableExists tableName="sep_entity_permission" />
		</preConditions>
		<comment>Make inherit_from_parent and inherit_from_library required for table sep_entity_permission</comment>
	
		<addNotNullConstraint tableName="sep_entity_permission" columnName="inherit_from_parent"
			defaultNullValue="1" />
			
		<addNotNullConstraint tableName="sep_entity_permission" columnName="inherit_from_library"
			defaultNullValue="1" />
	</changeSet>
	
	<changeSet id="seip-2.4.0-1" author="amitev">
		<preConditions onFail="MARK_RAN">
			<tableExists tableName="sep_entity_permission" />
		</preConditions>
		<comment>Add information whether the particular instance is library or not</comment>

		<addColumn tableName="sep_entity_permission">
			<column name="is_library" type="int2" />
		</addColumn>

		<addNotNullConstraint tableName="sep_entity_permission" columnName="is_library" defaultNullValue="2" />
	</changeSet>

	<changeSet id="seip-2.5.0-1" author="hlungov">
		<comment>Fix event scheduler columns</comment>
		<dropColumn tableName="emf_schedulerentity" columnName="targetclassid"/>
		<addColumn tableName="emf_schedulerentity">
			<column name="targetclass" type="VARCHAR(150)" />
			<column name="user_operation" type="VARCHAR(150)"/>
		</addColumn>
	</changeSet>
	
	<changeSet id="seip-2.6.0-1" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<columnExists tableName="cmf_template" columnName="container" />
		</preConditions>
		<comment>Drops container column from cmf_template</comment>
		<dropColumn tableName="cmf_template" columnName="container" />
	</changeSet>
	
	<changeSet id="seip-2.6.0-2" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<tableExists tableName="cmf_template"/>
		</preConditions>
		<comment>Rename cmf_template to sep_template</comment>
		<renameTable newTableName="sep_template" oldTableName="cmf_template" schemaName="public"/>
	</changeSet>
	
	<changeSet id="seip-2.6.0-3" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="sep_template" columnName="correspondinginstance"/>
			</not>
		</preConditions>
		<comment>Add column correspondinginstance. It will store the ID of the template instance corresponding to the row</comment>
		<addColumn tableName="sep_template">
			<column name="correspondinginstance" type="varchar(50)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="seip-2.8.0-1" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="sep_template" columnName="rule"/>
			</not>
		</preConditions>
		<comment>Add column rule to sep_template table.</comment>
		<addColumn tableName="sep_template">
			<column name="rule" type="varchar(1024)" />
		</addColumn>
	</changeSet>

	<changeSet id="seip-2.8.0-2" author="nvelkov">
		<comment>Execute all failed schedule entries with a retry count 1 and
			status 0 to fix the unscheduled version creation.
		</comment>
		<sql>
			UPDATE emf_schedulerentity SET status=0, nextscheduletime=now() WHERE
			status=5 AND retries=1;
		</sql>
	</changeSet>
	<changeSet id="seip-2.9.0-1" author="hlungov">
		<comment>Drop table cmf_assignedusertasks which is no longer needed.
		</comment>
		<dropTable tableName="cmf_assignedusertasks" />
	</changeSet>
	
	<changeSet id="seip-2.10.0-1" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="sep_template" columnName="modified_on"/>
			</not>
		</preConditions>
		<comment>Add column modified on to sep_template table.</comment>
		<addColumn tableName="sep_template">
			<column name="modified_on" type="datetime" />
		</addColumn>
	</changeSet>
	
	<changeSet id="seip-2.12.0-1" author="amitev">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="sep_template" columnName="published_instace_version"/>
			</not>
		</preConditions>
		<comment>Add column published_instace_version for keeping the version of the instance on to sep_template table.</comment>
		<addColumn tableName="sep_template">
			<column name="published_instace_version" type="varchar(50)" />
		</addColumn>
	</changeSet>
	
	<changeSet id="seip-2.12.0-2" author="bbanchev">
		<preConditions onFail="MARK_RAN">
			<columnExists tableName="emf_archivedentity" columnName="owninginstanceid" />
		</preConditions>
		<comment>Remove old/unused context information columns from emf_archivedentity.</comment>
		<dropIndex  tableName="emf_archivedentity" indexName="idx_arce_owninstid"/>
		<dropColumn tableName="emf_archivedentity" columnName="owninginstanceid"/>
		<dropColumn tableName="emf_archivedentity" columnName="owninginstancetype"/>
	</changeSet>

	<changeSet id="sep-2.14.0-1" author="bbonev">
		<preConditions onFail="MARK_RAN">
			<not>
				<tableExists tableName="sep_headers"/>
			</not>
		</preConditions>
		<comment>Add headers table</comment>
		<createTable tableName="sep_headers">
			<column name="id" type="bigserial" autoIncrement="true">
				<constraints primaryKey="true" />
			</column>
			<column name="definition_id" type="VARCHAR(128)">
				<constraints nullable="false" />
			</column>
			<column name="header" type="VARCHAR(4096)" />
		</createTable>
		<createIndex tableName="sep_headers" indexName="idx_h_defid">
			<column name="definition_id" />
		</createIndex>
	</changeSet>
	
	<changeSet id="definition-db-2.14.0-1" author="amitev">
		<preConditions onFail="MARK_RAN">
			<tableExists tableName="emf_labels"/>
		</preConditions>
		<comment>Removes duplicate labels from emf_labels and adds unique constraint on the labelid column</comment>
		<sql>
			delete from emf_labels where id in (
   				select id from 
				(select id, ROW_NUMBER() over (partition by labelid order by id desc) as rnum from emf_labels) as t
   				where t.rnum > 1
			);
		</sql>
		<addUniqueConstraint tableName="emf_labels" columnNames="labelid" constraintName="emf_lbl_uniq"/>
	</changeSet>

	<changeSet id="sep-2.15.0-1" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<not>
				<tableExists tableName="sep_template_content"/>
			</not>
		</preConditions>
		<comment>Add template content table</comment>
		<createTable tableName="sep_template_content">
			<column name="template_id" type="varchar(256)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<!-- varchar is not suitable for here, because limit shouldn't be put on the xml content size.
			  That's why Postgresql's specific TEXT type is used -->
			<column name="content" type="text" />
			<column name="file_name" type="varchar(256)" />
		</createTable>
		<createIndex tableName="sep_template_content" indexName="idx_tmpl_id">
			<column name="template_id" />
		</createIndex>
		<addUniqueConstraint tableName="sep_template_content" columnNames="file_name" constraintName="cstr_unique_file_name" />
	</changeSet>
	
	<changeSet id="template-db-2.15.0-2" author="amitev">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="sep_template" columnName="title" />
			</not>
		</preConditions>
		<addColumn tableName="sep_template">
			<column name="title" type="varchar(300)" />
		</addColumn>
	</changeSet>

	<changeSet id="template-db-2.15.0-3" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<columnExists tableName="sep_template" columnName="dmsid" />
		</preConditions>
		<comment>Drops the not-null constraint for templates' dmsId to enable import from file system</comment>
		<dropNotNullConstraint columnName="dmsid" tableName="sep_template" />
	</changeSet>
	
	<changeSet id="definition-db-2.16.0-1" author="amitev">
		<preConditions onFail="MARK_RAN">
			<not>
				<tableExists tableName="sep_definition_content"/>
			</not>
		</preConditions>
		<comment>Add model definition content table</comment>
		<createTable tableName="sep_definition_content">
			<column name="definition_id" type="varchar(256)">
				<constraints primaryKey="true" nullable="false" />
			</column>
			<!-- varchar is not suitable for here, because limit shouldn't be put on the xml content size.
			  That's why Postgresql's specific TEXT type is used -->
			<column name="content" type="text" />
			<column name="file_name" type="varchar(256)" />
		</createTable>
		<createIndex tableName="sep_definition_content" indexName="idx_def_cnt_id">
			<column name="definition_id" />
		</createIndex>
		<addUniqueConstraint tableName="sep_definition_content" columnNames="file_name" constraintName="cstr_def_unique_file_name" />
	</changeSet>

	<changeSet id="template-db-2.17.0-1" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<columnExists tableName="sep_template" columnName="title" />
		</preConditions>
		<comment>Populates the missing template titles copying them from the ids</comment>
		<sql>
			update sep_template set title=templateid where title is null 
		</sql>
	</changeSet>

	<changeSet id="template-db-2.18.0-1" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<columnExists tableName="sep_template" columnName="visibleto" />
			<columnExists tableName="sep_template" columnName="publictemplate" />
		</preConditions>
      	<comment>Removes not used columns from sep_template table</comment>
		<dropColumn tableName="sep_template" columnName="visibleto" />
		<dropColumn tableName="sep_template" columnName="publictemplate" />
	</changeSet>
	
	<changeSet id="template-db-2.18.0-2" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="sep_template" columnName="modified_by" />
			</not>
		</preConditions>
      	<comment>Adds new column modified by to the templates table</comment>
		<addColumn tableName="sep_template">
			<column name="modified_by" type="varchar(256)" />
		</addColumn>
	</changeSet>

	<changeSet id="definition-db-2.18.0-3" author="vtsonev">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="emf_definitionentry" columnName="modified_by" />
				<columnExists tableName="emf_definitionentry" columnName="modified_on" />
			</not>
		</preConditions>
		<comment>Adds new columns - modified_by and modified_on to the defintiions table</comment>
		<addColumn tableName="emf_definitionentry">
			<column name="modified_by" type="varchar(256)" />
		</addColumn>
		<addColumn tableName="emf_definitionentry">
			<column name="modified_on" type="datetime" />
		</addColumn>
	</changeSet>

	<changeSet id="seip-2.20.0-1" author="bbonev">
		<comment>Increase locktype column size</comment>
		<modifyDataType tableName="seip_lockedentity" columnName="locktype" newDataType="varchar(128)"/>
	</changeSet>
</databaseChangeLog>
