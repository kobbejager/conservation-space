SELECT distinct ?instance (emf:ClassDescription as ?instanceType) ?title (if(lang(?title)= "", "en", lang(?title)) as ?titleLanguage) 
?superClass ((if(!bound(?isSearchable), "false"^^xsd:boolean , ?isSearchable)) as ?searchable) 
((if(!bound(?isCreateable), "false"^^xsd:boolean , ?isCreateable)) as ?createable) 
((if(!bound(?isUploadable), "false"^^xsd:boolean , ?isUploadable)) as ?uploadable) 
((if(!bound(?isVersionable), "true"^^xsd:boolean , ?isVersionable)) as ?versionable)
((if(!bound(?isMailboxSupportable), "false"^^xsd:boolean , ?isMailboxSupportable)) as ?mailboxSupportable)
((if(!bound(?isPartOfObjectLibrary), "false"^^xsd:boolean , ?isPartOfObjectLibrary)) as ?partOfObjectLibrary)
?description ?status ?definitionId ?defaultTemplate ?type ?isDeleted ?creator ?acceptDataTypePattern ?classCategory
?allowInheritParentPermissions ?allowInheritLibraryPermissions
where {
    ?instance a owl:Class .
    OPTIONAL{
        ?instance dc:creator ?creator 
    }
    OPTIONAL{
        ?instance emf:isSearchable ?isSearchable 
    }
    OPTIONAL{
        ?instance emf:isCreateable ?isCreateable 
    }
    OPTIONAL{
        ?instance emf:isUploadable ?isUploadable 
    }
    OPTIONAL{
        ?instance sec:allowInheritParentPermissions ?allowInheritParentPermissions 
    }
    OPTIONAL{
        ?instance sec:allowInheritLibraryPermissions ?allowInheritLibraryPermissions
    }
    OPTIONAL{
        {
            ?instance emf:classCategory ?classCategory.
        }
        UNION {
            FILTER(! EXISTS {
                ?instance emf:classCategory ?tempClassCategory.
            })
            ?instance rdfs:subClassOf ?superClass.
            ?superClass emf:classCategory ?classCategory.
        }
    }
    OPTIONAL{
        ?instance emf:acceptDataTypePattern ?acceptDataTypePattern 
    }
    OPTIONAL{
        ?instance emf:isPartOfObjectLibrary ?isPartOfObjectLibrary 
    }
    OPTIONAL{
        ?instance emf:isMailboxSupportable ?isMailboxSupportable 
    }
    OPTIONAL{
        {
            ?instance emf:definitionId ?definitionId.
        }
        UNION{
            FILTER(! EXISTS {
                ?instance emf:definitionId ?tempDefId.
            })
            ?instance rdfs:subClassOf ?superClass.
            ?superClass emf:definitionId ?definitionId.
        }
    }
    OPTIONAL{
        {
            ?instance emf:isVersionable ?isVersionable.
        }
        UNION {
            FILTER(! EXISTS {
                ?instance emf:isVersionable ?tempVersionable.
            })
            ?instance rdfs:subClassOf ?superClass.
            ?superClass emf:isVersionable ?isVersionable.
        } 
    }
    OPTIONAL{
        ?instance rdfs:subClassOf ?superClass.
    }
    ?instance rdfs:label ?title ;
        skos:definition | rdfs:comment ?description .
    OPTIONAL {
        ?instance emf:status ?status ;
            emf:defaultTemplate ?defaultTemplate ;
            emf:type ?type ;
            emf:isDeleted ?isDeleted .
    }
}