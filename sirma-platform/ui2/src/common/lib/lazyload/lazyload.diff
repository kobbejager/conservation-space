diff --git a/lazyload_original.txt b/lazyload_changes.txt
index 7b02b64..ae49e6b 100644
--- a/lazyload_original.txt
+++ b/lazyload_changes.txt
@@ -57,6 +57,20 @@

         }

+        // added functionality to properly destroy lazyload
+        $.fn.lazyload.destroy = function () {
+          $window.off("resize", update);
+          $window.off("pageshow");
+          $container.off("scroll", update);
+          $container.off("click", update);
+
+          elements.each(function () {
+            var self = this;
+            var $self = $(self);
+            $self.off("scroll");
+          });
+        }
+
         if(options) {
             /* Maintain BC for a couple of versions. */
             if (undefined !== options.failurelimit) {
@@ -77,10 +91,9 @@

         /* Fire one scroll event per scroll. Not one scroll event per image. */
         if (0 === settings.event.indexOf("scroll")) {
-            $container.on(settings.event, function() {
-                return update();
-            });
+            $container.on(settings.event, update);
         }
+        $container.on('click', update);

         this.each(function() {
             var self = this;
@@ -89,10 +102,8 @@
             self.loaded = false;

             /* If no src attribute given use data:uri. */
-            if ($self.attr("src") === undefined || $self.attr("src") === false) {
-                if ($self.is("img")) {
-                    $self.attr("src", settings.placeholder);
-                }
+            if ($self.is("img") && ($self.attr("src") === undefined || $self.attr("src") === false)) {
+              $self.attr("src", settings.placeholder);
             }

             /* When appear is triggered load original image. */
@@ -102,6 +113,19 @@
                         var elements_left = elements.length;
                         settings.appear.call(self, elements_left, settings);
                     }
+
+                    if (!$self.is("img")) {
+                      $self.trigger('render');
+
+                      self.loaded = true;
+                      /* Remove element from array so it is not looped next time. */
+                      var temp = $.grep(elements, function (element) {
+                        return !element.loaded;
+                      });
+                      elements = $(temp);
+                      return 'non-false';
+                    }
+
                     $("<img />")
                         .one("load", function() {
                             var original = $self.attr("data-" + settings.data_attribute);
@@ -142,14 +166,12 @@
         });

         /* Check if something appears when window is resized. */
-        $window.on("resize", function() {
-            update();
-        });
+        $window.on("resize", update);

         /* With IOS5 force loading images when navigating with back button. */
         /* Non optimal workaround. */
         if ((/(?:iphone|ipod|ipad).*os 5/gi).test(navigator.appVersion)) {
-            $window.on("pageshow", function(event) {
+            $window.on("pageshow", function (event) {
                 if (event.originalEvent && event.originalEvent.persisted) {
                     elements.each(function() {
                         $(this).trigger("appear");
@@ -238,4 +260,4 @@
         "left-of-fold"   : function(a) { return !$.rightoffold(a, {threshold : 0}); }
     });

-})(jQuery, window, document);
\ No newline at end of file
+})(jQuery, window, document);
